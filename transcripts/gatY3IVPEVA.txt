uh oh no going live oh dear are we still
live yes we&amp;#39;re alive yes okay um so I
think it&amp;#39;s a little bit behind so
welcome let me know in the chat whether
you can see me and hear me okay um I&amp;#39;m
in a different location and uh yeah I&amp;#39;ll
just carry on I&amp;#39;ll carry on but I wait
for please somebody who is in the chat
uh put say hello so I can see that
you&amp;#39;re all there so let me move to the
main scene because I can sort of give
you an idea of roughly where I am uh the
sap developer news uh the episode this
week&amp;#39;s
episode came out of course yesterday as
normal on a Thursday evening my time and
um I did an item on um an upcoming
webinar that uh my uh good friend Tobias
Gabrielle is going to be uh running um
uh next week actually yeah 25th of
June um and um I recorded it on the top
paath outside my narrow booat so there
you can see behind me U the narrow boo I
thought you know thought I&amp;#39;d show you a
still of this picture here uh I am right
now I mean uh on the boat not physically
here at this location but I&amp;#39;m right now
behind the words fully restful so there
you go so there&amp;#39;s the sap developer news
all the links as usual are in uh where
are they are in a comment to the
corresponding entry in the uh sap
community events page which is here let
me just share that in the the uh chat as
well it&amp;#39;s also in the description Kiara
bonjour to you thank you for saying
hello so there&amp;#39;s there&amp;#39;s a link to that
thing
there uh and um Orin hope you get better
soon thank you Orin I mean it&amp;#39;s not
anything that one gets better from it&amp;#39;s
you know it&amp;#39;s just a you know an allergy
thing uh but thank you anyway for the uh
for the kind words
um so there and oh yeah so that&amp;#39;s that&amp;#39;s
the uh that&amp;#39;s where I am on that narrow
booat and then I took picture yesterday
behind me um I don&amp;#39;t know where you can
see very well I&amp;#39;ve closed the blinds
because the sun is shining through but
behind me which is sort of on the other
side of this cabin here on the other
side here um I thought I took a picture
of where I am that so behind me right
now um if I open the window open the
duck catches uh that&amp;#39;s what I can see
some sheep there and well I don&amp;#39;t know
where the Sheep are here right now but
anyway um so that&amp;#39;s behind me and also I
I took a picture this morning um
probably two and a half three hours ago
uh beauti sort of Sunrise maybe that I
think that was about two hours ago that
one I took a few more earlier than that
uh but the sun just coming up um so
that&amp;#39;s that&amp;#39;s where I am at the moment
so there we go so a little bit of uh
insight into um where I live and work
from I hope that was interesting um good
morning uh to nikel and good evening to
nikel to to you in Melbourne fantastic
welcome to you in Melbourne sashan hello
and good morning with a coffee excellent
good work good work sashan and Ian s
good morning morning to you hope your
trail running is good thank you for the
tip on the watch by the way the fenex or
the uh what was the other one I can&amp;#39;t
remember uh but um I&amp;#39;ve been looking to
sort of you know maybe I want to upgrade
my
245 uh you know there nothing wrong with
it I love it um but you know shiny um
and rrick good morning to you in
Frankfurt fantastic H epics thank you
thank you epics oh that&amp;#39;s quite quite a
short delay at the moment between the me
saying something and the chat coming
back and everything that&amp;#39;s quite good in
terms of you yoube broadcast anyway um
so also I&amp;#39;ve got my coffee and actually
what helps the um uh the the hay fever
is sticking my nose in the fumes of the
coffee sort of to block out everything
anyway uh we released another YouTube
short uh on uh controlling cap server
log levels so that is also linked um in
the in the show notes let&amp;#39;s call them
the show notes they are new YouTube
short controlling caps log levels and uh
we&amp;#39;re going to be messing around a
little bit today uh with a function
definition and we&amp;#39;re going to write our
own implementation for the simplest
thing possitive word function
definition and that reminded me that um
we did have a series on um uh hbf on
this show way back when I don&amp;#39;t know
when it was in fact let&amp;#39;s have look um
oh data when did I last commit to that
two years ago wow okay two years so over
two years ago uh we did a series on o
data Basics um on on this show and in
there that&amp;#39;s quite interesting there are
um examples
of different flavors of one of the
things we&amp;#39;re going to be looking at
somebody just walking past at the moment
uh one of the things we going looking so
if you&amp;#39;re interested to find out more
about this uh go there uh so there we go
um by the way there were two questions y
last week or last episode that um came
up
one was from uh
UMES um um Umesh sorry uh about uh
bringing in this repo the cat btb repo I
think basically you&amp;#39;re getting issues
just generally cloning it or copying it
down so I&amp;#39;ll put some more instructions
in there and hopefully you should be
okay and there were was
also um a question from Vel which I knew
I wouldn&amp;#39;t be able to sort of uh talk
about about last week because basically
was running out of time but in fact I
think zahed from Sol Hull um is
absolutely right we can check the check
the dependency version in package as and
I think if if what you&amp;#39;re trying to what
you&amp;#39;re trying to do Vall uh is maybe uh
update Express in the context of you
know a cap server I don&amp;#39;t think that&amp;#39;s a
very advisable thing to do um you know
there are reasons why uh there are
specific uh dependencies and specific
versions pinned for example for
dependencies so um
that&amp;#39;s probably not a good if if you&amp;#39;re
wanting to do that I want to know a why
and B uh is there any other way of doing
what you&amp;#39;re trying to achieve so you
know you don&amp;#39;t really want to start
messing around with versions of packages
that
are uh that that another package is
dependent upon um so you know I&amp;#39;m not
sure what you&amp;#39;re trying to do there
anyway anyway anyway anyway so I can see
here uh Gaza is Bono to bonjo to you as
well and pres good morning to you and
Matias good morning to you in Dortmund
excellent excellent excellent okay
so what we want to do today in this
episode it says here uh we move back to
the on event and build a handle for a
simple function okay so that&amp;#39;s what we
going to do uh where we can I get rid of
that uh yeah that&amp;#39;s fine um where we
left off last time let me put my head
down at the bottom actually um was we
had messed around with an after Handler
okay and the after Handler uh typically
for enhancing modifying data that has
already been retrieved in uh you know in
responding to the incoming request Often
by the the cap framework Itself by that
uh CDs application service class that we
I think we briefly looked at last uh
last
time um so now let&amp;#39;s just we actually we
don&amp;#39;t need that one oh actually we do we
do we do we do let&amp;#39;s just start up CDs
watch and just have a little play to see
where we were and then we can move on
right um by the way uh we love the chat
don&amp;#39;t we we all love chat and we all
love opinions and questions everything
so anytime there&amp;#39;s anything you can
think of or have an issue with or have a
question about just put in the chat and
we&amp;#39;ll try to answer it so this thing
here um we were looking through some
examples of after uh handlers uh in the
sap samples org on GitHub that&amp;#39;s see sap
samples there for example we got our
code jams in there as well but Sab
samples there we got a lot of cap
related repos cap there you know for
example um let&amp;#39;s do that there Ina I&amp;#39;ll
paste that in as well
um where&amp;#39;s the uh community events let
me add that URL there we go in progress
in progress let me go and edit my
comment to add this thing here come on
why is it not working wow there right
and there so that is sap samples cap
related repos
there perfect I&amp;#39;ll leave that open I&amp;#39;ll
pin that so it&amp;#39;s out of the way perfect
okay so we found an example of um where
we are not not defining sort of in line
an anonymous fun function as the Handler
as the call back for the after event let
me move that across there a little bit
there we go and we ended up say using
this thing here let&amp;#39;s do that for
example there let&amp;#39;s just comment that
back in and that out again and save that
and uh what we did I think uh L
listening in fact let&amp;#39;s have it the
right way around in fact let&amp;#39;s do it the
right way around CDs watch I&amp;#39;ll have the
CDs watch uh here and we&amp;#39;ll say list
listening uh uh
uh
c um what should we have uh curl minus s
local l c it again Local
Host o data V4
Bookshop
books P that into
JQ there we go okay fine John Murray
good morning to you John Murray one and
all fantastic so that&amp;#39;s what we get and
we we we&amp;#39;re getting this urgency high in
this sort of virtual ual field that
we&amp;#39;ve defined virual element DJ use the
right terminology this in this in this
extra element urgency which you&amp;#39;ve
defined as a virtual element as in
computed on the Fly
basically uh I think that gets CDs
persistence skip wow what I&amp;#39;m say I
think we get let&amp;#39;s try it uh CS
compile
um to yaml serve let&amp;#39;s have a look to
see what happens uh
did I am I humming chick chick chick
chick chicken don&amp;#39;t know for some reason
um tell you what let&amp;#39;s do uh where are
we what this is in books this is in
books orders items orders items
orders uh book shop orders come on uh
Bookshop books kind elements ID title
author urgency there we go ah core
computed that&amp;#39;s right sorry not precis
core
computed true that&amp;#39;s The annotation gets
added automatically to any element
that&amp;#39;s been defined as a virtual because
it&amp;#39;s Computing right anyway digression
number one uh let&amp;#39;s just run that again
so we have this thing and we have also
determined that we can quite nicely
let&amp;#39;s just go to here no not there there
quite
nicely um instead of having this sort of
anonymous function that just calls
another function you know that
syntactically dissolves down to just
specify that okay and and and what gets
passed to
this which is up there is basically the
same as what gets P to this Anonymous
function I.E in the after uh event
context we get the data and we get the
request data is the first argument and
request is the second AR all good
so what we want to do now is start
having a look to see if we can define a
nice simple the simplest thing that
could possibly work what ium
function so that we are
forced
to create an on event handler okay let
me just save that in fact let&amp;#39;s get rid
of that line
oops and oh there we go that&amp;#39;s better
better formed and also let me just save
that and collapse that there we go
okay uh so J says is there an offici
unofficial set of best practices
anywhere which define whether these
things should be done via extended CDs
or inline in the service projection
that&amp;#39;s a really good
um that&amp;#39;s a really good question John so
John is asking I mean I think John is
probably referring partly to where uh we
did this right so we&amp;#39;ve got in let&amp;#39;s
just have a look here let&amp;#39;s have a look
this is a great question and it helps us
think about um if I uh how do I do this
now um DB
data let&amp;#39;s collapse that let&amp;#39;s bring
schema into there
and then move that down a bit so we can
see most of it right um in fact uh let&amp;#39;s
have that one
there yeah okay because the scheme is
quite big uh so in our schem at the DB
level we&amp;#39;ve got the books entity defined
in this namespace or. macro and in our
in our main. CDs which is in the serve
directory at the service level we&amp;#39;ve got
our service definition but here last
week very late easily and partly sort of
partly deliberately as well I use the
extend to say ah actually let&amp;#39;s take on
um let&amp;#39;s let&amp;#39;s extend the books
definition the definition of the books
entity in the orro namespace which is
coming from from org from DB schema
which is that one there and add another
element to it good morning Rafael good
morning to you and good morning to
everybody um Johnny&amp;#39;s asking is there a
Best practice or is there a set of best
practices uh that written anywhere I&amp;#39;m
not aware that there is a single
contiguous set of best practices about
this sort of thing I think I think in
many ways and this is such a rubbish
answer but I&amp;#39;m going to say anyway it
sort of it depends on the circumstance
it depends on your team layout I guess
it depends on your project I think one
of the one of the the Beauties and also
therefore one of the challenge is is
that CDs as a language or CDL let&amp;#39;s call
it technically the right thing
um is so flexible and has so many
different ways of doing things that yeah
people like John who I know he I know
he&amp;#39;s an experienced developer you know
has these sorts of questions so um good
morning sadish good morning to you um so
I don&amp;#39;t think there is I think best pra
a sort of a meta best practice is don&amp;#39;t
step on things that you don&amp;#39;t own don&amp;#39;t
start modifying things you don&amp;#39;t own and
that was partly the reason why I did
this thing here
to say well we we&amp;#39;ve got this schema.
CDs which I didn&amp;#39;t let&amp;#39;s say let&amp;#39;s
pretend I didn&amp;#39;t create it and I want to
extend that so I&amp;#39;m not going to go into
this file and add something here well I
I will do shortly because I want to add
another another element okay and I don&amp;#39;t
want to sort of go down this digression
of extend much more that&amp;#39;s a really
rambling answer to your question John um
I think maybe that reflects the fact
that there isn&amp;#39;t either there isn&amp;#39;t a
you know a single place where all these
best practices are written there are
best practices sort of if you look at
the Cy documentation in fact I think in
here if we go to there or was it there I
can&amp;#39;t remember sometimes you&amp;#39;ll see
there uh tips and best was it best
practice no they&amp;#39;re best I did see oh
best practice is there there is a best
practice um for C you know but it&amp;#39;s it&amp;#39;s
it&amp;#39;s not comprehensive and it doesn&amp;#39;t
cover specifically what you&amp;#39;re talking
about here um John says yes as you we do
it on a Case by case basis but was
curious is official best practice okay
like some yeah sometimes it&amp;#39;s actually
important to know that you&amp;#39;ve not missed
anything very
good what&amp;#39;s you know you get the
occasional sort of best practice well
there&amp;#39;s a best practice section there
but what I was looking for
was uh there was there was some they got
these green blocks or this the sort of
yellow sort of highlighted sections in
capaya anyway um let&amp;#39;s go back here uh
so actually yeah so talking of
that why don&amp;#39;t we Define
a
function now can anybody tell me um in
order to so in order to do something
interesting what I thought we could do
is just add just one more element to the
books entity which is stock right so
we&amp;#39;ll add a stock element integer uh and
we&amp;#39;ll populate that with um some values
for these three books we&amp;#39;ve got in our
books data where is it uh data uh let&amp;#39;s
bring that into there for example down
there
um and while I do that put in the
chat what your thoughts are what your
understanding is of the concept of
actions and functions in od data and I
sort of stress OD data for a reason you
know actions and functions are an OD
data concept but there&amp;#39;s a reason why I
say that as well uh so let&amp;#39;s come back
to that Antonio good morning sorry for
the delay just I I do love when people
come in uh you know and apologize for
coming in late you&amp;#39;re not late you&amp;#39;re
just here that&amp;#39;s just fantastic that
you&amp;#39;re here it&amp;#39;s brilliant uh good
morning with DJ silent screaming voice
good morning like that uh y yav good
morning to you um so while I add that
put in the chat what you what you know
about what your thoughts are on what
your understanding of is of uh not even
English uh of actions and functions and
I&amp;#39;ll do that here let me go to schema
let me go down here um maybe I should
bring that uh yeah maybe I should bring
that virtual urgency in there no I&amp;#39;ll
leave that there for now let&amp;#39;s leave
that there uh let&amp;#39;s have stock uh
integer what I like is that I don&amp;#39;t have
to think about aligning up
these colons here because I can just go
format because of the wonderful um uh
cap Plugin or CDs plug-in for vs code
extension sorry not plugin and uh it
does it for me so there we go so now
what I&amp;#39;ll do is I&amp;#39;ll add to the end here
stock let&amp;#39;s add some data uh h of Galaxy
obviously we got 42 books of that um I
don&amp;#39;t know uh 100 and maybe uh I don&amp;#39;t
know five right okay let&amp;#39;s save that and
now let&amp;#39;s see oh H what what what what&amp;#39;s
going on somebody say something as well
uh let me see what&amp;#39;s going on here first
uh table log has no colum names ah okay
so let&amp;#39;s just restart that uh I think
it&amp;#39;s just oh what no stock did I not um
oh I&amp;#39;ve not ah what have I done DJ I I
deliberately turn off the auto saave in
my vs code because I don&amp;#39;t like things
saving automatically under my nose under
my feet I I&amp;#39;ll say this so stock doesn&amp;#39;t
exist still so save that again that
should reload and then that&amp;#39;s fine so
there we now we&amp;#39;ve now got don&amp;#39;t you
love cap don&amp;#39;t you love cap is amazing
reload everything uh so chakia good
morning to you and uh crud uh oh oh okay
so crud is uh orin&amp;#39;s response I think to
OD data actions and functions um
georgeos uh good morning Georgio um
functions are idempotent oo o
interesting interesting in yeah okay
okay that&amp;#39;s just pause that for a second
janaka says to add behavior that cannot
be achieved by crud on entities Kiara
says actions modify data so are mapped
into post functions don&amp;#39;t modify data so
are m
what a team what a team yes exactly so
so um just to start with what aurin said
about crud question mark and then what
shakia said actions and functions are
basically I always I always sort of
think of them as orthogonal as in not
you know not going in the same direction
as the rest of what odor is all about
which is a restful protocol right rest
yeah a restful protocol uh functions and
actions are not restful um they have
properties that uh Georgio uh has
referred to and also
Kiara uh so functions don&amp;#39;t have not
allowed to have side effects modifying
data is a side effect for example
actions may have side effects and
because actions may have side effects in
order to call an action you need to use
the HTTP post uh verb or method which um
sort of um from a from a an expectation
point of view
uh makes a lot of sense and but
functions because they don&amp;#39;t have any
side
effects you call them with get okay now
there&amp;#39;s a difference isn&amp;#39;t there between
and again this is a digression but
there&amp;#39;s a difference
between the concept of a side effect and
the concept of idempotent okay so I&amp;#39;m
not sure I mean yes I think functions by
definition because they don&amp;#39;t have any
side effects they are idempotent I.E you
can call them multiple times and it will
have the same effect as what idempotent
means basically uh the same
power um so but but also it&amp;#39;s not just
read only it&amp;#39;s not just sort of things
that don&amp;#39;t have side effects that are
ident delete is idempotent put is
idempotent get is idempotent effectively
uh but delete and put do have side
effects so there&amp;#39;s a difference anyway
so fantastic what a team what a what a
team combination of answ there uh so
what we&amp;#39;re going to do is we&amp;#39;re going to
define a function
now now while I&amp;#39;m messing around in the
chat put what you think the difference
between a bound function and an Unbound
function is um and there&amp;#39;s also the
concept of a bound action and an Unbound
action um so while you put in the chat
what you what your thoughts are on bound
versus
Unbound but can get actions have a body
Matias says uh well that&amp;#39;s a good
question however uh uh are you sure you
mean get action because you can&amp;#39;t invoke
or you shouldn&amp;#39;t in you can&amp;#39;t invoke an
action with get you have to invoke it
with a post and that is actually policed
by the cap
framework um so an action can very much
have um a body yes um oh oh Ian says
that this is this is this is your
objectoriented class brain coming out in
uh instance versus static I think we
might have used these this this sort of
this analogy before yes
so whether it&amp;#39;s an action or a function
if uh if it is uh an Unbound action or
function the action or function is
called not in any context of any
particular element of data any
particular record any particular
entity um instance of entity a bound
function or a bound action basically
is an action that you call upon a
specific entity so chakia says bound
operations are dependent on entity yes
exactly and Orin list and detail Pages
where detail pages are bound to a record
ID or not quite not quite but I I do I
do thank you for putting in the chat
your thoughts because there&amp;#39;s you know
we&amp;#39;re all learning together right um so
it&amp;#39;s more about what for example what um
Ian and chakia have been talking about
in the chat which is whether an action
or a function is directly whether the
invocation of set action or function is
directly related to bound to within the
context of a specific entity for example
you know this entity here or this entity
here for example so what we&amp;#39;re going to
do hope that hope that explains things
uh chakia Unbound AR static operations
yes exactly thank you chakia fantastic
uh maybe I&amp;#39;ll maybe I&amp;#39;ll do a live
stream like a hands onb episode where
you run it and I&amp;#39;ll watch because
because you&amp;#39;re you&amp;#39;re you&amp;#39;re all amazing
amazing let&amp;#39;s define um uh a function
let&amp;#39;s define a function let&amp;#39;s just get
just too much going on here can I can I
make the uh the font a one smaller let
me know if it&amp;#39;s still okay to see the
font there we don&amp;#39;t need that data
anymore let&amp;#39;s go here and add in our
service a function I&amp;#39;m going to put it
down here sort of because it&amp;#39;s sep as an
Unbound function function um and I was
thinking about this this morning uh
we&amp;#39;ll just do something simple that&amp;#39;s
why I put stock here we&amp;#39;ll do something
simple U we can see we got stock here
stock 42 stock 100 stock five so why do
we have a a function that will return us
the total stock in our Bookshop as in
just count up all of
the um stock values all of the stock all
of the values for the stock element for
each of the entities right and add them
together and return that okay so it&amp;#39;s
going to be an integ we want return so
let&amp;#39;s let&amp;#39;s call it total
stock we&amp;#39;re not going to take so this is
where you would for example where is
that thing there there we go um examples
of data let&amp;#39;s go open there that if you
want to see how to define
um excuse me here are um bound there&amp;#39;s a
bound action definition look at the
inside the actioning we&amp;#39;ll maybe look at
that next week or the week after I don&amp;#39;t
know um and here is a bound function and
here is an Unbound function and here&amp;#39;s
an Unbound action okay so you can sort
of stare at that a little bit and see
the difference in how they&amp;#39;re EXP
expressed notice here for example that
in this submit order action we&amp;#39;re
expecting we want to sort of we want to
have uh two arguments given to us and
we&amp;#39;re going to got parametes that
product and quantity for those arguments
but here for example we don&amp;#39;t have any
uh we don&amp;#39;t have any um values that
we&amp;#39;re expecting in the call so we just
have an open and close bracket so what
that&amp;#39;s what we&amp;#39;re doing here okay so
we&amp;#39;ll say here total stock uh returns
integer okay now if we do look if we
look look at uh the metadata we can see
there function import remember function
import that&amp;#39;s such an old OD data term
our function Imports existed in od2
didn&amp;#39;t they um so there we go we got
that this is not all about o data but
there it is right function import total
stock total stock and then down here we
get here function name is bound is bound
is bound false not bound an Unbound
function um return type
integer okay so should we try and call
it without having def
defined a handle for it right let&amp;#39;s just
call it um why do we do that here let&amp;#39;s
keep calling that one let&amp;#39;s have another
one here uh list
listening
uh again this is the same maybe I should
do a little Alias with this same pattern
all the time so when the listening file
changes which is when the server starts
listening again after being restarted
then do this which is basically curl
silent Local Host 404 book o data V4
books um no Bookshop sorry Bookshop book
shop total stock and how you call it is
how sort of how You&amp;#39; expect let&amp;#39;s put it
in quotes cuz to sort of escape the
um cuz that bracket&amp;#39;s a bit weird in
Shell uh the sort of they mean things so
let&amp;#39;s put that in
um oh not there sorry uh there we go
bong bong s there we go Local Host so
all we&amp;#39;re doing is saying whenever this
thing restarts let me put my head at top
again there um make a call to locost
odata V4 Bookshop total stock okay and
don&amp;#39;t pass anything in the thing don&amp;#39;t
pass anything in the thing very very
descriptive DJ and let&amp;#39;s see what
happens enter
oh let&amp;#39;s pass that into JQ as well so we
can see that a little bit better that&amp;#39;s
partly why I put the bash d c so we can
put like a you know pipeline thing uh JQ
enter there there we go
so is that expected yes it is expected
service book shop has no Handler for
total stock I mean you can&amp;#39;t get more
you can&amp;#39;t get clearer than that can you
thank you cap server thank you cap
server and we get an AR Arrow
501 that&amp;#39;s quite interesting yes because
it&amp;#39;s not our fault as the caller
that there&amp;#39;s no Handler so we don&amp;#39;t get
a 400 series error right um I would
guess also I wonder if you see the
um ah yeah so let&amp;#39;s just do that again
and get rid of that for a second uh yeah
they go look
501 not implemented 501 not implemented
I mean how chef&amp;#39;s kiss is that right
it&amp;#39;s a 500 series error which means the
server blames itself it doesn&amp;#39;t blame
the requester in which case it would be
a 400 series it blames itself I haven&amp;#39;t
got to handle this sorry bang not
implemented so do
that there no come on DJ what&amp;#39;s going on
I&amp;#39;ve got too many things there we go
curl yeah
okay uh by the way did you notice the
option I gave to curl to tell it to show
me the headers in the response put in
the chat what what you what you saw what
you think that is because it&amp;#39;s sometimes
super useful
and the reason we were getting an error
with the um JQ is because of course
those headers come out as well as the
Jason and of course J we getting we&amp;#39;re
telling JQ to PA those headers and the
headers are not Jason therefore JQ goes
what there okay so um yeah ah George
good spot there georgeos yes in fact uh
that was the so I put two options
together of course in in any sort of
normal shell uh you know a proper shell
like bash um you can have different
options and many options are sort of
single characters with a dash so - I I
was using and I&amp;#39;m using Das I here look
uh sorry- s but you can also have d i
and you can compact them up so you have
Dash and then I S and all these Single
Character things that what you put there
- i s basically is short for - i-s so
yes exactly perfect so let&amp;#39;s start
adding a hand let&amp;#39;s you know help the
server out and this is where we start
to think back to what we looked at
before which was
this.on remember and the
this.on where&amp;#39;s the um
after oh look at that after on before
after yes it&amp;#39;s the S perfect uh no oh ah
sorry no the s it so judge us this is
exactly what I love right so people put
in the chat what you think what your
thoughts are etc etc the- s is silent
and what that does is when you let me um
ah okay that&amp;#39;s that&amp;#39;s that&amp;#39;s a good sort
of not backronym but yeah that sort of
makes sense that you&amp;#39;re saying that
however let&amp;#39;s do that let&amp;#39;s do that okay
if we say curl Dash uh let&amp;#39;s do that
curl
Local
Host it&amp;#39;s only what I&amp;#39;m doing on the
live stream for L capat uh o data for
Bookshop um books if I do that we just
get the data but if I pipe that then
into some other Downstream sort of you
know P the standard out into the
standard in of another thing what we get
is curl gives us also some information
on you know what&amp;#39;s happening like a like
a progress bar thing okay now if I say
minus oops minus s for silent it will
suppress any occurrence of this progress
bar okay so it&amp;#39;s nice and neat and all
we get is the Json output the response
output that&amp;#39;s what that does and then we
can also do minus
I there like that let&amp;#39;s just put that at
the top there K minus I what that will
do is it will give us the output but it
also give us the headers okay um sashan
s stands for d d silent exactly curl d d
help will tell us the silent we go s
silence amazing silence
mode um however if we do minus I and
pipe it into JQ of course it&amp;#39;s not going
to work because JQ is like trying to
pause this stuff and we can&amp;#39;t pause that
stuff but we notice we didn&amp;#39;t do the- s
so we we still see this thing here does
that make sense anyway that&amp;#39;s why I do-
S to keep it nice and neat so where were
we uh go to there listening and we&amp;#39;ll
have silent there we go
perfect brilliant brilliant digression
thank you georgeos for uh taking part
and also sashan as well fantastic so
8:34 okay we got some time now if you
remember in the serve Doon before
after these things
take up to three param expect three par
three arguments the event for example
read The Entity for which that is
relevant and the
Handler
okay as in the anonymous function or the
the function reference let&amp;#39;s call it
like that let&amp;#39;s call it that way let&amp;#39;s
say it that way DJ come
on
because this after function here is
related
to an event read relating specifically
to the book&amp;#39;s
entity we use this second parameter here
right notice
that that&amp;#39;s got a question
mark which basically means you know it
it&amp;#39;s optional it may or may not be there
it may or may not be
required okay by the way by the way we
also talk didn&amp;#39;t we
um episode or two ago about somebody
said put in the chat if you&amp;#39;re here or
if you remember it somebody
said hm what about not
using you know a raw string as the
reference to the entity but using uh
using the the object reference CDs
entities does anybody use that maybe we
should do that as well put in the chat
if we should do
that but we&amp;#39;ll keep it with with because
I wanted to keep things simple earlier
on so I&amp;#39;ve just kept it simple with you
know just using the the literal
reference to the entity name itself
anyway with he with this this stop
on in this
case what is the event please do it
stubs welcome stubs please do it okay
okay we will right let&amp;#39;s do that then
now
um let&amp;#39;s just do that there we don&amp;#39;t do
we need that anymore um do we need that
reference total stock let me put that
over
there there okay that&amp;#39;s that&amp;#39;s better
right so a lot of the time you&amp;#39;ll see
when you read through and I do encourage
you to read through examples of uh of
cap uh CDs definitions and JavaScript
implementations and Java implementations
for that
matter you know you learn a lot and we
looked at a few last time didn&amp;#39;t we so
why do we have const this is what you&amp;#39;ll
see a lot of const something like that
something in there right you know let me
put XXX because dot dot dot means
something uh and then CDs entities and
then more often than not you&amp;#39;ll have for
example Bookshop the the name space or
the service okay and this is
destructuring
this is yes exactly so Thang is that how
you pronounce your name thing uh maybe
there&amp;#39;s an that accent means I have to
pronounce it differently tell me if it
is ah uh so John Murray says I find the
type helping is very useful when using
the object references yes exactly that&amp;#39;s
uh that&amp;#39;s WN advantage of uh types there
but let&amp;#39;s not go down that Avenue again
John uh I know you&amp;#39;re not bringing that
up and everything but for that debate
anyway DJ come on so what in
fact in fact
yeah I&amp;#39;m I&amp;#39;m trying to I know it&amp;#39;s 8:38
now I&amp;#39;m trying to rush through this but
actually here&amp;#39;s a
digression that may I think we might I
might allow myself to do to
take it&amp;#39;s a digression into finding out
what the heck this is all about how does
this work what are we getting here
what&amp;#39;s
happening should we do that should we
digress into and we&amp;#39;ll use the CDs
reppel what it&amp;#39;s a CDS reppel CDs reppel
in fact let&amp;#39;s look it let&amp;#39;s look it up
on don&amp;#39;t let&amp;#39;s look it up on the um help
thing there
repple uh come on r p what&amp;#39;s going on uh
repple there we go CDs command land face
CDs reppel there um CDs reppel to live
in use CDs reel to live interact with no
JS
apis I always think that whenever
there&amp;#39;s a
repple put in the chat what you think
reppel stands
for um whenever there&amp;#39;s a reppel in a
language it&amp;#39;s absolutely wonderful to to
to get to be have have some level of
comfort using it now I&amp;#39;m not quite there
yet you know I&amp;#39;ve not used the reppel
that much but I want to use it more so
let&amp;#39;s do that now has anybody in the
chat use the
reppel um one of the things we saw in
the output of the help was this using
CDs testing with CDs test is this and
this is the
magic that lets
us embrace all the things in the reppel
okay so falcan says no thank you that&amp;#39;s
good that&amp;#39;s a good answer so maybe we
should do georgeos the good old reading
eval yes the good old read evaluate
print Loop exactly that&amp;#39;s what reple
stands for um I think it probably comes
in my brain I always think that it
relates
to the context of one of the most
beautiful languages lisp right which is
you know uh language invented in
1958 I think created in
1958 um DJ don&amp;#39;t go there don&amp;#39;t go there
don&amp;#39;t digress down that rabbit hole
we&amp;#39;re all down Rabbit Hole already read
so John says read evaluate print loop I
think although I&amp;#39;ve not used one in
years ens says used with python exactly
the python repple is beautiful and it
allows us to sort of explore in real
time stuff and with you know with
languages like closure CJ re there&amp;#39;s a
reppel which I found absolutely you
could connect to a live running server
and manipulate things and everything
it&amp;#39;s amazing uh but yeah it comes from I
think the list okay perfect Ian says
agree I&amp;#39;m not sure what you&amp;#39;re agreeing
to but I&amp;#39;m going to take that you&amp;#39;re
agreeing to we should go into playing
around with the Reel a little bit um
because we can then find out what the
heck this cds. entities is and here
using CDs testing reppel you can use CDs
testing reppel for example by running
this from your command line into cap
samples CDs trle v test equals a weight
CDs test Bookshop okay um so in fact
let&amp;#39;s do that let&amp;#39;s do exactly that I
have no idea whether that&amp;#39;s what we want
what&amp;#39;s going on here uh but let&amp;#39;s try it
uh let&amp;#39;s bring that up here uh let&amp;#39;s
kill that get rid of that uh get that
there let&amp;#39;s do it there clear CDs
repple
okay now what do we do so agree with
python reppel being very good yes um
let&amp;#39;s paste that in VAR test equals a
wait CDs test Bookshop
uh ah okay yes Bookshop ah now uh okay
why is that happening well uh this is
because it it sort of tells us here try
this in the context of cap samples U
which is here Cloud Cap samples and
notice that this particular repository
this repo in sap
samples is a so-called mono repo um oh
it even says here find here a collection
of samples for cap organized in a
simplistic monor repo setup and a monor
repo is basically is it where is it what
that link
to all in one monor each sample
subdirectory essentially is a standard
mpm package some with
standard so basically what that means is
in this
particular repo Cloud Cap samples we
have multiple folders directories
Bookshop bookstore data viewer Fury
loggers media orders reviews test all
these individual things reviews for
example each of those is a
self-contained
cap project with it own package with it
own serve DB Etc right uh and same for
for example
Bookshop there DB serve test etc etc etc
so what I think is happening is
that this is a reference to this subd
directory so in fact what we should do
here what we go there for is just CDs
test and not refer to any
subdirectory amazing it&amp;#39;s working it&amp;#39;s
working so what is it doing what is it
doing it&amp;#39;s starting up the cap server
and in fact it&amp;#39;s also um uh let&amp;#39;s do
that get rid of that uh let&amp;#39;s do that
there fine
so it started up the cap server and it
started the cap server up on
interestingly I&amp;#39;ve not noticed this
before on a random Port who who here has
attended I know Matias you have who here
has attended the service integration
codam with cap and we played around with
mocking in an external service and we
CDs mock it will pick a random Port
rather than 404 is doing that here
interesting um which makes sense you
know because we want to possibly Poss
possibly we want to possibly run a
repple and run CDs test alongside and at
the same time as in parallel to our
already existing maybe CDs watch our
running CDs watch so we don&amp;#39;t want the
ports to Clash so we can run both at the
same time right I guess that&amp;#39;s the
reason what do you think um so now we&amp;#39;
got the prompt back okay notice also
that we got the promp back if we did
this let&amp;#39;s go out there again if we did
this Cs reppel and did that again um and
just just did this cds.
test we don&amp;#39;t get the prompt back
because everything in node.js is sort of
asynchronous everything is an event so
we got to await it so we can just press
return there right but let&amp;#39;s just do the
best practice here and do that again and
say uh a wait we don&amp;#39;t even need to
assign it to anything a wait CDs test
there we go okay so what gets assigned
to test in the previous invocation
invocation is all this stuff here which
is is basically the cap
server okay now we&amp;#39;ve got that we have
access
to the CDs facade right oh y Yos says it
starts a new CDs watch compile locally
it starts a new CDs
it starts a new cap server yes it starts
a new cap server it&amp;#39;s it&amp;#39;s not so much a
CD CDs watch has the connotations it&amp;#39;s
important to remember that CDs watch is
also a design time thing you know a
development time thing um and CDs watch
will check for changes to files and
restart this doesn&amp;#39;t do that of course
because you&amp;#39;re in the rep you don&amp;#39;t want
restarting under your feet hello hello
Dennis and welcome
welcome ah too much coffee um so cds.
entity
is let&amp;#39;s just put that and see what
happens what the heck is that what the
heck is
that um well first of all that&amp;#39;s
JavaScript that is Javascript it&amp;#39;s a
function definition isn&amp;#39;t it look it&amp;#39;s a
fat Arrow function definition that takes
one parameter NS Nam space Maybe um and
if there&amp;#39;s no name space this is a turn
turn operat look question mark colon if
that condition is true then children
otherwise this children of NS filter etc
etc but we don&amp;#39;t have to worry about
that if we have a look at the the
documentation we&amp;#39;ll we can see we can
infer that CDs
entities return something that is
iterable return something we can sort
iterate over for X in CDs
entities um I don&amp;#39;t know console.log X
what&amp;#39;s going to
happen now we starting to get feel we
can sort of this is the this is the
magic of any rapple and specifically the
magic of the CDs reel we can sort of get
super close to the inner workings of to
the brains to the heart of what&amp;#39;s in our
cap
server okay now um if we say here I
don&amp;#39;t know um CDs I don&amp;#39;t know will this
work
entities books
now why did that work what did I do is
this worth is this worth like like
continuing on to understand I know that
um I did ask a question and somebody
says yes do it please do it stubs says
please do it STS I&amp;#39;m going to blame you
in the nicest possible way that we&amp;#39;re
going down this this Rabbit Hole here
which I think is really interesting uh
visas welcome to you in BKK Thailand
hello everyone I forgot that we have a
cat B2B today what a shame we&amp;#39;ll cap up
the get okay no problem at all I wish
you a lovely evening uh in uh
excuse me in
Bangkok but notice right this is in
iterable and it felt like given what
it&amp;#39;s supposed to contain and deliver to
us it&amp;#39;s going to be S of an object based
iterable so we can say give me the value
of the
books property in this iterable in this
object and there we go look
entity also
do you recognize that do you recognize
that check it out CDs
compile we have I got back here no CDs
compile to yaml serve oh in fact bent
books um in fact uh DB schema can we do
that there look at that look wait where
is
it authors where is books there we go
look or qro books entity kind there
books
basically we get the season
representation of the books
entity okay and then we can refer to we
can use that to refer to do all sorts of
things in fact um interesting C inside
CS exactly it is stops it is interesting
to see inside of CDs so we get the we
get what what is it it&amp;#39;s an entity what
you know what kind of thing is it it&amp;#39;s
an
entity Does it include anything now what
does that mean what do you think that
means if we say um more
BB schema. CDs we can see
here it has this aspect from um here
aspect cuid and it includes or. qro it
includes that so because that there CID
is or. macro CID so we understand that
and what are the elements in it and this
is why I keep forcing myself to say the
word elements because that&amp;#39;s the the
proper technical term for the fields
basically what elements has it got it&amp;#39;s
got ID element um and the ID element is
straight from the CID
there title there author it&amp;#39;s an
association we get all that wonderful
goodness describing the association and
we get the author ID now that is an
element that has been sort of created
for us because this is a managed
Association so it will create this
autore ID for us automatically it&amp;#39;s got
stock and it&amp;#39;s got this urgency thing
virtual true core computed true etc etc
maybe we&amp;#39;ll come back
to the
reppel let&amp;#39;s have a little bit of a
sneak peek select or even better yeah
select cuz we&amp;#39;re going to we&amp;#39;re going to
want to do some cql art we to sort of
resolve this total stock so let&amp;#39;s just
put the tiniest toe in the
water select from can we do this CDs
entities just repeat what we have there
books is that going to do anything let&amp;#39;s
see how it
happens it generates a query for us
remember what we said about the fact
that everything is
asynchronous if we
say a
wait let&amp;#39;s see what happens you
ready so we can with the repper we can
start interacting with the guts of
everything okay so we&amp;#39;ll maybe use
this when we come to properly fulfill
the implementation for our total stock
okay uh so Jor says sorry yes when I
said type helping that probably wasn&amp;#39;t
the right terminology this is why I
referring to the available proper yes
yes exactly no I knew what you mentioned
yes but thank you for the clarification
thank you for okay so there&amp;#39;s the
reppel so now going back to st&amp;#39;s request
for us to do that we&amp;#39;ve got here const
books who knows what I mean what we
could what we could do what we could do
is say cons books equals CDs entities uh
Bookshop um books could we do that let&amp;#39;s
see in fact let&amp;#39;s see uh const books
equals CDs
entities
books um what oh sorry CDs
entities Bookshop because it&amp;#39;s the
Bookshop Nam space
books Let&amp;#39;s see if that
works
books yes so we can do that right
books now oops like
that now that&amp;#39;s okay and we all
understand what that is you know it
calls it it sort of returns the whatever
is the CDs entities for Bookshop all the
things the iterable but then says just
give us the one that is keyed with books
right the JavaScript
destructuring JavaScript
um D
restructuring
mdn Milla developer network uh is great
for documentation on JavaScript
destructuring maybe I&amp;#39;ll put that in
there as well
um
JavaScript D
structuring
there I&amp;#39;ll save that in a minute um
where are we there the oh no there sorry
there destructuring assignment have a
play with this it&amp;#39;s it&amp;#39;s very very
powerful you can sort of overuse it but
it&amp;#39;s extremely powerful so if you&amp;#39;ve got
an iterable or an object that you for
example or an array or something that
you want to pick something out of nicely
you can use destructuring destructuring
is a concept that&amp;#39;s not specific to
JavaScript I mean there&amp;#39;s destructuring
in all sorts of different languages you
know uh well I&amp;#39;m not even list too many
list so we can say here
books like that okay so that&amp;#39;s a that&amp;#39;s
a different syntactical way using
destructuring assignment of getting a
constant call books and having the value
of that constant to be that lovely
season definition on you know the the
object with small o inside the cap
server that represents the books entity
in the service does that make sense
Dwight says so oh message
retracted okay so that&amp;#39;s that so now
theoretically let&amp;#39;s just bring back our
test sort of you know ongoing test here
um books right books there we go is that
still work not done anything yet uh oh
I&amp;#39;m not reading CDs watch there we go CS
watch uh handle to be oh oh what&amp;#39;s going
on
ah let&amp;#39;s comment that out of course
there there we go okay fine so now we
should be able to
say um that shouldn&amp;#39;t we as in this book
is a reference
to this thing
here let&amp;#39;s save that and see if it
restarts successfully and yes so it&amp;#39;s
good so that&amp;#39;s a very very long winded
route to s a bite here oh yeah um very
very long-winded way of getting to the
fact that we&amp;#39;ve now got and we&amp;#39;re doing
what we see in lots of cap service
examples of having a proper object
reference and we&amp;#39;re going to use that as
well in our
hour C cql later on but let&amp;#39;s just you
know we got five minutes let&amp;#39;s just do
something stupid the simplest thing that
could possibly work right if we said oh
let&amp;#39;s go let&amp;#39;s just leave that there can
we do it can we get
another can we get another um terminal
in without being too small where&amp;#39;s my
head up the top there perfect uh let&amp;#39;s
have that there and
books uh
Bookshop total
stock let&amp;#39;s put that in quotes as well
okay we got it so Dwight says so books
at line two has only the CDs definition
of books or does it hold the actual data
great question Dwight great question it
is just the definition it doesn&amp;#39;t hold
the data but we can use we can refer to
the definition in a select statement
like we did just here where is it
there to get to the data okay
um okay you&amp;#39;re welcome that was quick
wow the uh the the delay the YouTube
delay is really really short it&amp;#39;s
brilliant um so uh what we&amp;#39;re doing what
we&amp;#39;re doing go to there yeah oh this
let&amp;#39;s implement this now let&amp;#39;s implement
this let&amp;#39;s comment this back in again
let&amp;#39;s have an error let&amp;#39;s just create an
error save bang error expected argument
that that&amp;#39;s another nice thing about
this listening plug-in even though you
know I wrote it myself but it&amp;#39;s very
simple but but it really helps me if I
get an error on the server it doesn&amp;#39;t
try to you know re reload request the
data because the server is not starting
listening it&amp;#39;s failed before the
listening so this the on that we do
total stock that is the event that is
the event and that&amp;#39;s the beauty of cap
one of the many beauties of cap
everything is an event so read is an
event a standard event right crud type
thing but total stock is also an event
right get that total stock and because
total stock um in this particular case
is uh well actually just forget I said
that in this particular case but total
stock is not a standard crud event
relating to an entity so we&amp;#39;re going to
miss out where&amp;#39;s the thing there uh not
there we&amp;#39;re going to miss out this
second parameter this optional
parameter and just go straight to the
Handler okay CU it&amp;#39;s not
related to you know to handling a read
or an update or whatever of an entity a
standard entity so let&amp;#39;s go back here
and say let&amp;#39;s have an anonymous function
what&amp;#39;s the simplest thing that could
possibly
work let&amp;#39;s put some dat put put put a
value in right we don&amp;#39;t care what comes
in and you know we just hard code what
goes out do we so that&amp;#39;s the simplest
thing let&amp;#39;s try it
save starts up value 99 so we can see
the total stock so yeah yes Ian it it is
Unbound exactly Ian it is Unbound in
fact in fact let me just show you here
ah where is it if we have a look at the
for example here we&amp;#39;ve got um a bound
function there um address line if we
look at the address line Handler in
main.js where is it address line you can
see maybe a bit bigger you can
see there&amp;#39;s there&amp;#39;s the equivalent of
what we&amp;#39;ve done with total stock
but
here we&amp;#39;ve got a function address line
but in this case it relates to it&amp;#39;s
bound to yeah does that make
sense okay so 858 all that&amp;#39;ll do
actually this finally I do an episode
where I&amp;#39;m not like going to the last
second we got a minute to go two minutes
to go so let&amp;#39;s leave that there we&amp;#39;ve
got the definition of here
an Unbound function very simple one
doesn&amp;#39;t take any parameters at all and
just returns an integer and we&amp;#39;ve got
the
simplest implementation for that
function that could possibly work just
to return some static data what I like
to see sometimes is that&amp;#39;s nice but I I
even like that oops I even like that
which you&amp;#39;ll see sometimes underscore
come on bang that still works as well
remember what we said about underscore
is convention it&amp;#39;s still a valid sort of
parameter name but it&amp;#39;s a convention
that if you see an underscore it means
there&amp;#39;s a parameter here but I don&amp;#39;t
care about what it is okay but notice
that Vico complains about it because
it&amp;#39;s saying you&amp;#39;ve defined that but
youve never used it so let&amp;#39;s just change
that back
to there&amp;#39;s no
parameters
okay right next week we&amp;#39;ll carry on
we&amp;#39;ll carry on and we&amp;#39;ll start using
what we&amp;#39;ve learned in the reppel and
play around with the reppel more to then
go and work out how to add up all the
stock of all the books and return that
okay um yeah that&amp;#39;s it so have a great
uh rest of Friday have a great weekend
and I&amp;#39;ll see you next week bye for now
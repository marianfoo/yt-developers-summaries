0m0s: e
0m49s: good morning good afternoon good evening
0m51s: welcome again to hands on sa Dev with me
0m53s: DJ Q macro welcome one and all um I can
0m57s: see al already we&amp;#39;ve got uh Dwight I&amp;#39;ve
0m59s: just realized uh Dwight you are ale ale
1m4s: star22 I I was thinking who is who is
1m6s: that Dwight person with a new hat logo
1m9s: there so um I just clicked on your
1m10s: channel I realize it&amp;#39;s um at Al star22
1m14s: which is awesome welcome and thank you
1m16s: don&amp;#39;t do Dwight says I&amp;#39;ll call you
1m18s: Dwight uh don&amp;#39;t do that to us where have
1m21s: you been well um in fact helmet gives a
1m24s: clue welcome helmet and good morning and
1m26s: good morning to Leo and good morning to
1m28s: AP in dorf Leo&amp;#39;s in Frankfurt and mine
1m33s: and and of course helmet is coming to us
1m36s: loud and clear from Bruns in Germany all
1m38s: in Germany so welcome everybody and uh
1m41s: yeah if you&amp;#39;re on the chat for the first
1m42s: time just say a quick hello tell us
1m44s: where you&amp;#39;re from and everything it&amp;#39;s
1m46s: all very friendly and welcoming here
1m48s: especially uh especially welcoming for
1m50s: beginners that&amp;#39;s what this series is all
1m52s: about so Niki good evening to you in
1m56s: Melbourne City of amazing coffee and
1m59s: some other amazing things of course as
2m1s: well but I always think of a coffee in
2m3s: I&amp;#39;ve never been to Melbourne but you
2m4s: know um Sasha veninger uh didn&amp;#39;t he used
2m7s: to live in Melbourne he&amp;#39;s now in
2m9s: Singapore he used to tell me about the
2m10s: amazing coffee anyway and oh hello Kiara
2m13s: bonjo Kiara and Al PES good morning to
2m16s: good evening to you in Sydney and VJ
2m18s: hello what hello to you in paloalto what
2m22s: the heck time is it over there tell us
2m23s: what time it is and alpes in Sydney Mark
2m26s: tman good morning M Mo to Mark in ke
2m30s: I&amp;#39;ll tell you about the why I&amp;#39;m looking
2m31s: over there in a minute um but zahed good
2m34s: morning to you in Sunny suly Hull I hope
2m37s: it&amp;#39;s sunny it&amp;#39;s freezing yeah that&amp;#39;s
2m38s: what I got my jumper on um so good
2m40s: morning to to you or good afternoon to
2m42s: you maybe already I don&amp;#39;t know Nesh in
2m45s: India uh Kiara says good morning all as
2m47s: well that&amp;#39;s right that&amp;#39;s we&amp;#39;re all we&amp;#39;re
2m49s: all friends here we&amp;#39;re all one family in
2m51s: the hands onb Dev uh show aren&amp;#39;t we
2m55s: Antonio good morning to you in Madrid so
2m58s: yes I&amp;#39;ve got um my I&amp;#39;ve lowered my
3m0s: screen my external screen it&amp;#39;s on a
3m2s: stand you know uh and I was just like oh
3m5s: yeah my neck was hurting so I&amp;#39;ve moved
3m7s: it down a bit I&amp;#39;m not sure that&amp;#39;s good
3m9s: ergonomically but any I moved it down a
3m10s: bit which means I can&amp;#39;t fit my
3m13s: Chromebook tablet mode under the monitor
3m17s: because that&amp;#39;s where I that&amp;#39;s where I
3m18s: sort of monitor the in fact I&amp;#39;ll show
3m20s: you there we go look there that&amp;#39;s my
3m23s: that&amp;#39;s how I see who is saying what and
3m26s: everything but now that it&amp;#39;s over there
3m28s: um I&amp;#39;ve sort of got to put it up plugy
3m30s: back in again uh that&amp;#39;s over there so
3m31s: it&amp;#39;s it&amp;#39;s a bit more difficult to see
3m34s: kaston Schlagel good morning to you in
3m35s: stutgart in Germany amazing so yeah it
3m38s: was so good uh so um Dwight the reason I
3m41s: was uh not here we didn&amp;#39;t do a stream
3m43s: last week was of course because as many
3m44s: folks know and as many folks were you
3m46s: know for example lots of people in the
3m49s: chat were also at this event last week
3m51s: code connect in h uh so for example uh
3m55s: mark and um Leo and uh who else have we
4m0s: got here helmet of course uh lots of
4m3s: people were at code connect which was an
4m4s: amazing event and what did what did you
4m7s: say um helmet uh the first time after a
4m9s: fantastic Cod connect week or as
4m11s: Mauricio laer from Australia uh said in
4m14s: his blog post it was great to meet Mario
4m15s: for the first time as well in his blog
4m17s: post the new sap Tech quote unquote so
4m20s: that was a lovely quote uh quite nice
4m22s: Marian Marian was also Marian was like
4m24s: Mar was was Mar Marian were you ever off
4m27s: the stage in cooc Connect uh Mari and
4m29s: did some amazing sessions as many people
4m31s: did as well of course Matias Matias was
4m33s: at code connect and also attended the um
4m37s: uh the cap uh Cod jam on the Monday as
4m40s: well welcome to you Matas and welcome to
4m41s: you visas in Bangkok Thailand amazing so
4m45s: actually talking of code
4m47s: connect uh for those of you who were at
4m49s: code connect of course it was um a recap
4m52s: on uh Tuesday and u5 cup on Wednesday
4m55s: and an abat conf on uh Thursday I had to
4m58s: travel on Thursday up to luse to do Coen
5m0s: there on Friday but I snaffled a load of
5m2s: um stickers from the tables so I&amp;#39;ve got
5m4s: some stickers uh for example I&amp;#39;ve got Al
5m6s: got some sap Community stickers from um
5m8s: s and Laura upstairs they were and I&amp;#39;ve
5m12s: got some uh recap 234 stickers and I&amp;#39;ve
5m15s: got some awesome silver shiny it&amp;#39;s like
5m17s: you know when you go magic the Gathering
5m19s: and you you buy sort of booster packs
5m20s: and you get like a shiny card it&amp;#39;s like
5m23s: a shiny uh Phoenix from ui5 and I&amp;#39;ve got
5m26s: ui5 con as well I&amp;#39;ve got an amazing cool
5m30s: a cap sticker uh cap logo a really cool
5m34s: ui5 logo and also hello from your
5m37s: motorbike I hope you&amp;#39;re not watching and
5m39s: riding at the same time Kaza hello and
5m42s: welcome Kaza on your motorbike I don&amp;#39;t
5m44s: even understand what that means but
5m45s: anyway welcome welcome everybody
5m48s: and these things here Dev toober Fest
5m51s: put in the chat if you know about Dev
5m53s: toober Fest if you&amp;#39;ve heard of Dev
5m54s: toober Fest if you&amp;#39;ve participated in
5m56s: previous Dev toober fests that&amp;#39;s nice
5m58s: cuz it&amp;#39;s not got a year on it and
5m59s: everything so it&amp;#39;s General Chala good
6m1s: morning to you as well and the really
6m3s: cool thing about these is they&amp;#39;re quite
6m4s: rare now because um uh our lovely
6m8s: marketing department is not as as as
6m10s: said we&amp;#39;re not allowed to use these
6m11s: stickers anymore because they&amp;#39;re not
6m12s: brand compliant so if you want one of
6m14s: these really cool like you know Black
6m17s: Market stickers because we&amp;#39;re not
6m19s: allowed to use them anymore send me as
6m21s: usual uh your postal address uh where I
6m24s: should send some stickers to and I&amp;#39;ll
6m25s: send you some stickers so there we go
6m28s: yeah these so
6m30s: by by Banning them the by being banned
6m33s: these are even more worth uh than they
6m35s: were before which is amazing so if you
6m37s: want some other stickers let me know uh
6m39s: send me uh on LinkedIn a direct message
6m41s: on LinkedIn whatever you call it or um
6m43s: on um masteron for example thank you to
6m47s: yakob flamman who is also there at COC
6m49s: connect he&amp;#39;s giving me uh some lovely
6m51s: Swiss chocolates so to have during my
6m53s: live stream so yakob thank you very much
6m54s: that&amp;#39;s a very kind of you so good
6m56s: morning to you in Brazil oh my goodness
6m57s: be so amazing we have a really good
6m59s: Global uh Global session today so let&amp;#39;s
7m3s: get going let&amp;#39;s get going um we got the
7m6s: May release of uh cap that&amp;#39;s just a Java
7m9s: release the actually the sap developer
7m11s: news was out yesterday so all these
7m13s: links are of course in the normal show
7m15s: notes show notes I I sound like a live
7m18s: streamer uh where do I put that um let
7m20s: me put that in the chat there whooo uh
7m23s: paste that in there so that&amp;#39;s all you
7m24s: need okay so that is this as as as many
7m28s: of you regulars know I always put a um
7m30s: an event page here in the community and
7m33s: then put one comment underneath it with
7m34s: all the links so we can all go to the
7m36s: links and I&amp;#39;ll add add to this if we
7m38s: have any more resources to share so we
7m40s: got the developer news we&amp;#39;ve got the um
7m44s: uh we&amp;#39;ve got the uh oh yeah let me tell
7m46s: you about that in a minute we got uh how
7m47s: to yeah Cap May 2024 release which is
7m50s: that one there get rid of that one now
7m52s: developer news get rid of that one now
7m54s: how many folks put in the chat how many
7m56s: uh do you have have seen our um YouTube
7m59s: shorts you should shorts for consumption
8m1s: on your phone um so check out they&amp;#39;re
8m4s: all about cap no JS at the moment we
8m6s: might do something else on different
8m7s: topic but let let us know if you&amp;#39;ve seen
8m9s: these shorts and let us know if you like
8m11s: them let us know if you don&amp;#39;t like them
8m12s: as well and if we can uh do anything
8m14s: different to make it better but the uh
8m16s: the cap nodejs YouTube shorts good to
8m20s: know um if you can think of also little
8m23s: topics that we could cover in an
8m24s: upcoming YouTube short on cap node.js
8m26s: let us know they&amp;#39;ve got to be really
8m28s: short because we&amp;#39;re only allowed to do
8m29s: 60 you know 60 seconds is a sure that&amp;#39;s
8m31s: a maximum time bioo says any plan for
8m34s: cap developer dashboard available OJs
8m36s: well that&amp;#39;s what that is the question on
8m38s: our lips as well it was announced for
8m40s: those of you at COC connect great
8m41s: question uh for those of you COC connect
8m43s: it was demoed in a session uh for the
8m46s: first time it&amp;#39;s an alpha version and
8m48s: it&amp;#39;s only available for Java at the
8m49s: moment and in fact if you watch this
8m51s: week&amp;#39;s sap development news our
8m53s: illustrious and feess leader Tom Yung
8m55s: did a an item on uh the cap May release
9m0s: and also talked about that developer
9m2s: dashboard and so Tom also says I hope he
9m5s: hopes we hope it&amp;#39;s coming to noj as well
9m7s: so we don&amp;#39;t know uh we know as much as
9m9s: you
9m10s: bbo uh that&amp;#39;s top that&amp;#39;s top uh all of
9m14s: them very cool well yeah just um as you
9m16s: know send me a message somehow private
9m18s: you know don&amp;#39;t obviously share your
9m19s: postal address a you it could be a work
9m20s: postal doesn&amp;#39;t matter you know just send
9m22s: me a postal address and also when you
9m23s: send it make sure you put it on line by
9m25s: line because some some addresses I don&amp;#39;t
9m27s: understand how the addresses are
9m27s: formatted in those different countries
9m29s: how to write it on the envelope and
9m30s: everything here&amp;#39;s my in fact I&amp;#39;m looking
9m32s: over here because this is my now full
9m35s: again box of stickers that I can send
9m37s: you anyway shorts are thumbs up thank
9m39s: you helmet thank you for the thumbs up
9m41s: okay
9m42s: now um oh yes uh yeah okay that&amp;#39;ll do
9m46s: that&amp;#39;ll do
9m47s: um now where were we last week um and I
9m51s: think I put in the description of what
9m53s: we want to cover here today um I&amp;#39;m
9m54s: already I&amp;#39;m already talking like really
9m56s: fast because i&amp;#39; this this my second
9m58s: coffee
10m0s: uh two quite close together so tell me
10m1s: to slow down if I need to slow down so
10m3s: Visa says yes I really like the shorts
10m4s: on YouTube thank you Visa as well thank
10m6s: you for the confirmation like like I say
10m8s: I&amp;#39;m not you know I&amp;#39;m not um fishing for
10m11s: praise here for our shorts if there is
10m13s: something that um you think we could do
10m15s: better um good suggestions you know let
10m17s: us know let us know you know um there&amp;#39;s
10m20s: always room for improvement
10m23s: so last week last week we finished oh
10m27s: it&amp;#39;s even still running I&amp;#39;ve sort of got
10m29s: it back back into the state where we was
10m30s: were before right last
10m32s: week we looked a little bit at the after
10m36s: Handler and we also sort of in the
10m37s: middle of last week not last week last
10m39s: episode let me say it last episode
10m40s: because it was a week before last
10m43s: um and we started playing around with
10m46s: the after Handler and let&amp;#39;s sort of
10m48s: summarize we we realized we learned that
10m51s: unlike the on Handler um or the on event
10m54s: the handlers for the on event and
10m55s: handlers for the before Event Event the
10m58s: first first argument passed to the
11m1s: Handler is not the request it&amp;#39;s the data
11m4s: that has by this stage by the stage of
11m6s: the after event has already been uh
11m9s: retrieved right so we get we we want a
11m11s: data parameter first to receive the data
11m15s: that has been retrieved probably or
11m17s: likely by the standard out of the box uh
11m23s: implementation from cap um to retrieve
11m26s: that data and we get the data and we can
11m27s: enhance it modify it change It Whatever
11m30s: right and so what we did here uh is we
11m34s: sort of basically went through each of
11m37s: the books in the data right and um added
11m42s: an exclamation mark okay so in fact uh
11m45s: there it is there it we can see the
11m46s: player of games exclamation mark hitch
11m48s: is out of the Galaxy exclamation mark
11m50s: let&amp;#39;s just change that just to see uh
11m51s: let&amp;#39;s put a question mark instead right
11m54s: there there we go um what we also did
11m56s: loading oh yes that reminds me as well
11m57s: we want to do something else um what we
11m59s: also did uh was add this little
12m1s: listening thing there we go it waited
12m3s: for the server to start up to you know
12m7s: to to be fair to cap as well um I&amp;#39;m
12m9s: running on a fairly okay Mac but I&amp;#39;m
12m12s: running inside a Docker container so
12m14s: everything is connected together and you
12m15s: know it&amp;#39;s not the most efficient setup
12m18s: in terms of performance from running
12m20s: anything really but I like Docker
12m22s: containers so I run everything in a
12m23s: Docker container right so um this is why
12m26s: it&amp;#39;s quite nice to have this sort of
12m30s: triggered call being made only when we
12m34s: get only when the server restarts and
12m36s: gets to that point where it starts
12m37s: listening so good morning a bit late
12m39s: today it doesn&amp;#39;t matter welcome uh you
12m42s: know the fact that you&amp;#39;re here is
12m44s: wonderful thank you for thank you for
12m45s: joining Chala says I&amp;#39;m getting error
12m47s: while opening cat B2B folder in Dev
12m49s: container stating no file directory
12m50s: found oh I trade placing folder in
12m51s: different locations any suggestions um
12m54s: well I&amp;#39;m using it here so I&amp;#39;m not sure
12m58s: if you&amp;#39;re still getting an error cha
13m0s: thank you for thank you for trying this
13m2s: out by the way B2B there we go if you&amp;#39;re
13m4s: still getting an error go to the
13m7s: issues and and create a new issue and
13m9s: put as much detail in as you can it
13m11s: might be that I&amp;#39;ve messed something up
13m12s: but I&amp;#39;ve not don&amp;#39;t think I&amp;#39;ve pushed
13m14s: anything uh recently update oh update
13m17s: episode 12 hours ago okay I don&amp;#39;t think
13m20s: yeah it could be something I&amp;#39;ve just
13m22s: pushed recently could be could be my
13m23s: fault probably is my fault um but just
13m26s: put an issue create an issue Chella and
13m28s: put as much detail as you can uh and
13m30s: then after this stream I&amp;#39;ll go and check
13m31s: it out as well but thank you for thank
13m33s: you for asking thank you for asking
13m34s: right okay let&amp;#39;s get there
13m38s: um so uh we did that and what we also
13m43s: had had was our own logger so let&amp;#39;s just
13m46s: log that out as well and we
13m49s: saw and what we did do as well is we saw
13m52s: that um we get one log output record our
13m56s: cap B2B log so we got this little logger
13m58s: thing here right
14m0s: and it logs a single value and that
14m3s: value is an array right an array of
14m5s: objects okay which is sort of and then
14m7s: we also what we also did remember we we
14m11s: did that okay and we did each now um oh
14m14s: what&amp;#39;s happening there oh ah what what
14m16s: what what what what on type data map is
14m19s: not a function what L data each ah yes
14m25s: ah there we go so that&amp;#39;s proving the
14m28s: point right that&amp;#39;s proving the point we
14m30s: played around a little bit well maybe
14m31s: you&amp;#39;re digging this to this again I
14m32s: don&amp;#39;t know maybe it&amp;#39;s not that
14m33s: interesting
14m35s: but when we do each let&amp;#39;s get rid of
14m39s: that for example let&amp;#39;s save that and
14m41s: I&amp;#39;ll explain what that is in a minute
14m42s: right there we go so there it&amp;#39;s now
14m44s: working again when we specify instead of
14m48s: a normal sort of event like read or
14m51s: update or whatever we specify this magic
14m54s: each this
14m56s: Handler there
14m59s: is called once per object once per
15m4s: record and of course then the record
15m6s: that&amp;#39;s passed the data that&amp;#39;s passed is
15m8s: not anymore an array of objects it&amp;#39;s
15m10s: just a single object so we can&amp;#39;t map
15m12s: over a single object can you right okay
15m14s: and as you can see here as well um we
15m16s: get three log records as in this line
15m19s: six here logger logger of data is called
15m23s: three times 1 2 3 we still get the same
15m27s: end result and you know when we let go
15m29s: as it were this this Handler when the
15m30s: Handler lets go and the the dispatcher
15m34s: takes control again you know the the
15m37s: data is sort of uh put together again
15m39s: and you know sent to the requester I.E
15m42s: this uh this curl command here we&amp;#39;re
15m44s: doing that remember um let&amp;#39;s uh send
15m48s: send to the requester as an entity set
15m51s: right now I&amp;#39;m getting quite warm um so I
15m55s: take my Jumper in fact I&amp;#39;ve got this
15m57s: jumper and it&amp;#39;s got like a little logo
15m58s: on it&amp;#39;s very hard to but I thought just
15m59s: in case I&amp;#39;ll put a badge on to sort of
16m1s: mask it uh cuz you&amp;#39;re not allowed to
16m3s: have you
16m5s: know uh you know what they call
16m7s: Commercial loo you not to have logos on
16m9s: your on your stuff unless it&amp;#39;s sap so
16m11s: there we go sap
16m14s: so comp DJ is compliant this morning
16m18s: okay so um Nik says can we register
16m20s: handlers for standard framework events I
16m22s: other other than crud once can&amp;#39;t think
16m23s: of a reason out at the top of my head
16m24s: but just asking what do you that&amp;#39;s a
16m26s: good question I think what do you mean
16m28s: by standard framework events let me know
16m32s: uh nikel sorry I just realized you&amp;#39;re
16m33s: doing that with each oh I see each event
16m35s: yeah well it&amp;#39;s I wouldn&amp;#39;t say each is a
16m37s: standard framework event but I mean you
16m38s: know put in the chat what you what you
16m40s: mean a little bit more because my brain
16m41s: is a bit stupid what do you mean by
16m43s: standard framework events Lauren
16m44s: Laurence good morning a little bit late
16m46s: that&amp;#39;s okay you&amp;#39;re welcome and
16m47s: everything and John Murray good morning
16m49s: John Murray in the house uh n which is
16m51s: the better approach for performance
16m52s: using each in or after after or using M
16m55s: well I think performance- wise is is
16m58s: negligible I would say
17m2s: however I think I think the simple
17m4s: answer is using each means that the the
17m7s: Handler mechanism so there are there are
17m9s: multiple calls being made to the same
17m13s: call back to the same Handler function
17m15s: and if your Handler function has lots of
17m17s: setup in it you know we&amp;#39;ve only got we
17m19s: got no setup between lines five and line
17m20s: six here but you know if you&amp;#39;re doing
17m22s: the same thing over and over again then
17m23s: of course each is less performant uh but
17m27s: to be honest you know I&amp;#39;ve not really
17m28s: heard of the fact you know having this
17m30s: called one one time per record is you
17m33s: know is detri is you know significantly
17m35s: detrimental okay good question good
17m37s: question so basically any event the cap
17m39s: framework is emitting under the hood
17m40s: other than the CR ones well yes one of
17m42s: the things that we did oh yes that
17m44s: reminds me thank you n one of the things
17m45s: that we
17m46s: did was we added if you remember we
17m49s: added um a a package this this little uh
17m53s: cap listening plugin which I talked
17m54s: about uh yeah in the previous episode uh
17m57s: the cap listening plugin uh cap
17m59s: listening plug-in is a the simplest
18m1s: plugin that could possibly work so I did
18m3s: this sort of partly just to do a plugin
18m5s: partly to show people how easy is to
18m7s: write a plugin um and um you know but
18m10s: also mostly to scratch my own itch C
18m13s: let&amp;#39;s put that in there as well um cap
18m15s: listening plugin uh
18m19s: edit uh cap uh
18m23s: listening plugin
18m26s: there um to scratch my own because
18m29s: basically I wanted something that would
18m31s: wait for the server to restart and start
18m33s: listening before it made the next
18m34s: request so that&amp;#39;s what this does and the
18m36s: way that that works is that if we look
18m39s: in the node modules you&amp;#39;ll see uh cap
18m42s: listening plug-in all it is it it
18m44s: listens
18m45s: to this life cycle event okay the tell
18m49s: you what um the I got in there as well
18m52s: uh yeah there we go there&amp;#39;s a Blog in
18m54s: the GitHub repository there&amp;#39;s a blog
18m56s: post a link to a blog post which
18m57s: Explains It All and there are life cycle
18m59s: events um so this is this is uh in
19m2s: response really to you your question
19m5s: nikel um the cap server has a number of
19m7s: events that are missed at various points
19m8s: in its life cycles so have a look at
19m10s: that quite interesting bootstrap loaded
19m12s: connect serving served listening shut
19m14s: down blah blah blah all that stuff right
19m16s: so check it out hope that answers your
19m18s: question a little bit or gives you a
19m19s: little bit of food for thought okay so
19m22s: um one thing I did notice is that we
19m25s: install this listening plugin you know
19m26s: mpm ad cap listening plug-in but I still
19m29s: had it in its sort of raw form in Serv
19m31s: so I&amp;#39;m going to remove I didn&amp;#39;t want to
19m32s: remove it before we started today so I&amp;#39;m
19m34s: going to remove it delete permanently so
19m36s: we&amp;#39;re not sort of double double
19m38s: listening and double writing a file okay
19m41s: so delete there so let&amp;#39;s let we go run
19m42s: that fine bang okay so there we go we
19m45s: got removed that CDs plugin fine cool
19m48s: thank you Nik thank you Nik for
19m50s: confirming
19m52s: yes well I think it&amp;#39;s time for a little
19m54s: chocolate um okay no it&amp;#39;s not
19m56s: um what do I want to do what I want to
19m58s: do
20m1s: is dig a little bit deeper and I want
20m4s: all your comments all the time in the
20m6s: chat what you think dig a little deeper
20m8s: into what actually is going on here in
20m11s: terms of passing of data now we talked
20m14s: about this last week and some of you I
20m16s: know Kiara you mentioned something and
20m18s: somebody else mentioned something as
20m19s: well you were on you were on the case it
20m21s: was all
20m22s: about pass by value versus pass by
20m25s: reference and how but I think I think
20m27s: it&amp;#39;s important for us to just dig in a
20m28s: little little bit more to understand
20m31s: what&amp;#39;s going on and one of the things
20m33s: that I that I looked at with you last
20m35s: episode in the previous episode was this
20m39s: example okay so this and I&amp;#39;ve put this I
20m41s: put a link I&amp;#39;ve put a link to this
20m43s: processor
20m44s: service JS file in here as well
20m47s: processor service implementation so it&amp;#39;s
20m48s: there right so you can have look at this
20m51s: later as well um NES how the log is
20m53s: different from console.log ah we covered
20m55s: that in not the last episode but the
20m57s: episode before very briefly look const
21m0s: logger you can create your own loggers
21m2s: you can also have the default sort of um
21m4s: verbosity as well but we didn&amp;#39;t do that
21m6s: so that&amp;#39;s that&amp;#39;s that there so line two
21m8s: defines his logger with the cds. log and
21m11s: then we can use logger and we get this
21m12s: cap B2B whatever we put in there as the
21m14s: ID right that&amp;#39;s how that works n great
21m16s: questions brilliant questions keep them
21m18s: coming all the time all questions all
21m19s: the time now um we had a look at
21m23s: this and I think and because we were
21m26s: looking at examples of after
21m29s: will
21m30s: we and
21m32s: I I think this is an interesting one for
21m35s: many reasons and I think we should try
21m37s: and implement this lift this bit of code
21m42s: and put it into our own
21m44s: code we&amp;#39;ll have to change a few things
21m46s: to to sort of hammer it in but I think
21m49s: I&amp;#39;m hoping that the process of doing
21m51s: that will make us think about what&amp;#39;s
21m55s: going on because the really interesting
21m57s: thing here is that we have a really
22m1s: simple call back a really simple Handler
22m4s: here which actually just calls another
22m5s: function here changes so let&amp;#39;s see think
22m8s: about how that works because
22m10s: theoretically right theoretically
22m13s: remember we talked about last week last
22m15s: episode if in a fat Arrow function we
22m19s: don&amp;#39;t have a a brace enclosed um code
22m23s: block then whatever the thing here is
22m26s: evaluates to that&amp;#39;s the return value
22m28s: that&amp;#39;s what&amp;#39;s returned from that
22m31s: function call so in
22m33s: theory looking at that you think oh yeah
22m35s: okay this will return something because
22m37s: you know why would you do that
22m40s: otherwise but then when we dig into what
22m42s: this change urgency due to
22m44s: subject is doing and how it works we&amp;#39;ve
22m48s: got this incidence for each and we
22m50s: talked a little bit last episode about
22m53s: the fact that for each doesn&amp;#39;t return
22m56s: anything I notice is Daniel in the house
22m59s: cuz Daniel has updated this well 10
23m2s: months ago but our wonderful friend
23m4s: Daniel um is uh you know has had a hand
23m7s: in this which is really great um so we
23m10s: can learn a lot from this so let me know
23m11s: in the chat please put in the chat
23m13s: whether you um whether you what you
23m14s: think about this because we&amp;#39;ll we&amp;#39;ll
23m16s: just have a bit of a recap because one
23m17s: of the other things
23m19s: is I wanted to um
23m22s: just just play around with something
23m24s: we&amp;#39;ve got this this I&amp;#39;ve got this file
23m26s: here called um Cat book
23m29s: dojason okay we got we got two records
23m33s: and in fact can anybody tell me where
23m35s: these two records come from I&amp;#39;m I&amp;#39;m
23m38s: deliberately using these two records two
23m40s: books records withing Heights and Jane
23m43s: air by Emily Bronte I think both of them
23m46s: I can&amp;#39;t remember uh and um they have a
23m49s: stock uh property as
23m52s: well they well let me know let me know
23m54s: in the chat where you think this data
23m56s: comes from it&amp;#39;s one of the standard fast
23m58s: sets when you do a um no get off there
24m2s: uh when you do a CDs in it add
24m6s: something you get that data which facet
24m9s: is that let me know in the chat um so we
24m13s: got this data so what and I also what
24m15s: I&amp;#39;ve got here is a little helper that
24m19s: just requires that Json okay so now we
24m22s: can go into the node
24m23s: reppel okay and say load which is like a
24m26s: reppel command a bit like SQL light you
24m29s: know we&amp;#39;ve got SQL light here for
24m30s: example uh let&amp;#39;s go to the um uh let&amp;#39;s
24m33s: open up another thing basically and say
24m35s: SQL
24m37s: light SQL light three sorry SQL light
24m39s: three and we can have these dot commands
24m41s: do help right it&amp;#39;s almost like the one
24m44s: level up rather than write SQL we want
24m46s: to write the SQL like command type thing
24m48s: there so in the same sort of way we&amp;#39;ve
24m51s: got rather than write this is not
24m52s: JavaScript this is this is a node.js
24m55s: reppel command like dot so CDs oh so uh
24m59s: so John says it&amp;#39;s tiny sample Tiny
25m1s: Dancer El what&amp;#39;s the what&amp;#39;s the Elton
25m3s: John film the other night it&amp;#39;s quite
25m4s: good um quite good it&amp;#39;s brilliant uh
25m6s: it&amp;#39;s tiny sample sample boxshop I think
25m8s: I can&amp;#39;t remember which and nites comes
25m10s: in there with
25m11s: the you know working with John saying
25m13s: CDs in it add tiny sample exactly so if
25m16s: we do this here CDs in it add tiny
25m20s: sample X and CD there and tree we can
25m26s: see there we have inde DB cat DB data my
25m31s: Bookshop CSV there they are weing
25m33s: Heights and J air that&amp;#39;s that data and
25m35s: that&amp;#39;s why I&amp;#39;m using that data so it&amp;#39;s
25m36s: sort of familiar right so Load
25m39s: Books so we have in books that here one
25m43s: of the things that we talked about was
25m46s: if we have for example um uh primes
25m49s: equal um primes equals
25m53s: 135
25m55s: 7 that&amp;#39;ll do 1357 right so we can say
25m59s: primes do map um X or P it doesn&amp;#39;t
26m3s: really matter you let&amp;#39;s use x cuz X is
26m5s: like a nice thing that&amp;#39;s kind thing X X+
26m8s: one right so we&amp;#39;re just adding one to
26m10s: each of the primes okay so if we were to
26m12s: say for example primes uh map x x equals
26m19s: 99 what we get out from the map is the
26m25s: result of that there right but what
26m27s: happens the primes it&amp;#39;s not modified
26m31s: it&amp;#39;s not
26m32s: mutated but if we were to say for
26m34s: example primes um equals
26m39s: uh p uh prime one I&amp;#39;m not prime
26m46s: three
26m48s: prime five I&amp;#39;ll do five for example
26m51s: right and if you did the same thing
26m54s: primes do Map X x99 we get 99 99 to 99
26m59s: of course we for each of the elements we
27m1s: you know we spit out uh the result of
27m5s: this what whatever this evaluates to and
27m7s: of course with an assignment it
27m9s: evaluates to not of course but it
27m10s: evaluates to the value of the what&amp;#39;s
27m12s: being assigned but
27m14s: primes we don&amp;#39;t modify the original
27m19s: right just like just like before
27m22s: however what we can do is say
27m26s: primes um
27m29s: map x. Prime
27m32s: equals
27m34s: 77 let&amp;#39;s see what happens there we get
27m37s: 77 77 77 but now primes we&amp;#39;ve
27m42s: modified the
27m44s: internal data inside each of the
27m48s: elements of the array now that still
27m50s: works if we do that let&amp;#39;s go out here do
27m52s: that again so we we can say um let&amp;#39;s do
27m54s: that here let&amp;#39;s clear screen let&amp;#39;s go to
27m57s: the start and say
27m59s: const so of you know make it a
28m3s: constant so then we say here Prime is
28m5s: fine then we say here primes do map now
28m9s: the question is yes exactly Dwight says
28m12s: complex objects are passed by reference
28m14s: so if we do a map
28m15s: now should this work this is a constant
28m18s: right we&amp;#39;ve now defined primes as a
28m20s: constant as in you know unchangeable
28m24s: immutable the value of primes is
28m26s: immutable however let&amp;#39;s do that just for
28m29s: the
28m30s: 66 of course map spits something out map
28m33s: returns something and remember last week
28m35s: last time we said oh yeah map is
28m36s: chainable because then we can add a
28m38s: filter or reduce or
28m40s: whatever
28m43s: however it&amp;#39;s still changed because we
28m46s: haven&amp;#39;t changed
28m48s: the overall value of primes primes is
28m51s: still an array of objects we&amp;#39;ve changed
28m56s: the things inside the object so beware
28m59s: right even if it&amp;#39;s a constant you can
29m2s: still mutate the inner values of objects
29m7s: because as um Dwight says complex
29m10s: objects are passed by reference do we
29m11s: get that now and the again another
29m14s: difference if we say
29m17s: um in fact um one of one of yeah one of
29m20s: the things we could do for example to
29m22s: primes is say primes map 60 and then we
29m24s: can say you know um red we could add
29m26s: those things together right reduce a x
29m29s: uh hold on um a x A+ X start start zero
29m33s: there we go we&amp;#39;re going add add those
29m34s: numbers together right yeah that&amp;#39;s
29m36s: that&amp;#39;s why you would like to sort of
29m38s: have map as a as a spitting something El
29m40s: so you could change something now for
29m43s: each because that is what&amp;#39;s happening
29m44s: here that&amp;#39;s what&amp;#39;s going on here
29m46s: incidents for each and just again to say
29m49s: um primes primes we&amp;#39;ve got Prime 66 so
29m53s: we could say primes for
29m55s: each X or p p x let&amp;#39;s do a console do
30m2s: log okay um uh
30m6s: console.log uh of x.
30m10s: Prime see there we go like that
30m14s: however this is the output from
30m16s: console.log and then this is the output
30m18s: from the actual call to for each and we
30m21s: did this last time
30m22s: right so if we
30m26s: see if we see for example a map function
30m30s: no well let&amp;#39;s not even go there right so
30m32s: we know that now so now we understand
30m34s: what&amp;#39;s going on with this okay that was
30m37s: just a little bit of a
30m38s: refresher so now we we&amp;#39;ve really seen
30m41s: that if we pass something in and we
30m44s: we&amp;#39;ve for each over something or map
30m46s: over
30m48s: something we can depending on the
30m52s: circumstance of the shape of the data we
30m54s: can potentially modify the original
30m56s: mutate the original whether that&amp;#39;s map
30m59s: or whether that&amp;#39;s for each okay so John
31m1s: says bit of a tangent tangents are
31m3s: always good uh but I read an interesting
31m4s: article the other day by the person who
31m6s: introduced const into typescript and how
31m8s: he regrets it now and that it should be
31m10s: removed oo John if you get a chance what
31m13s: what was to summarize the reason why why
31m16s: they regret it
31m19s: um can&amp;#39;t say I&amp;#39;m a big fan of typescript
31m22s: um I like JavaScript as it is I like the
31m25s: um uh the flexibility and the wonderful
31m28s: nature of java JavaScript and the sort
31m29s: of multi Paradigm nature um
31m35s: oh I&amp;#39;m also not really a big fan of the
31m37s: classes concept that was introduced with
31m39s: the
31m40s: S6 super ugly in my personal opinion ah
31m46s: okay mey
31m52s: JavaScript yeah you can find the article
31m54s: I&amp;#39;m not sure you a to paste the URL
31m56s: maybe sort of Disguise the URL so
31m58s: YouTube doesn&amp;#39;t see it as a URL in the
31m59s: chat and doesn&amp;#39;t sort of suppress
32m2s: it so Visa says I think the console log
32m5s: command produces the output on the
32m6s: console only but the log implementation
32m7s: usually has the ability to manage many
32m8s: kinds of standard out for example WR log
32m10s: file yes exactly there are there are
32m12s: more facilities with the logger as well
32m14s: exactly thank you
32m16s: weas so why don&amp;#39;t
32m19s: we would it be a good idea yeah let&amp;#39;s
32m21s: let&amp;#39;s copy
32m22s: this okay let&amp;#39;s grab
32m26s: that and
32m29s: yeah let&amp;#39;s do that let&amp;#39;s make make this
32m32s: a little bit bigger
32m35s: there
32m36s: [Music]
32m38s: and let&amp;#39;s ah yeah here we go here we
32m42s: go let&amp;#39;s talk very briefly before we
32m45s: start let&amp;#39;s talk
32m49s: um
32m50s: uh ah okay Maran says disagree with you
32m53s: on that slightly disagreement is always
32m55s: disagreement is good because we learn
32m56s: from each other so says typescript does
32m59s: not make sense on every project I use
33m0s: typescript and classes on my spreadsheet
33m2s: importer and makes my life so much
33m3s: easier absolutely and I think also it&amp;#39;s
33m6s: it&amp;#39;s a little bit of
33m8s: a it&amp;#39;s a little bit it&amp;#39;s partly not
33m12s: personal preference it&amp;#39;s partly what one
33m13s: is used to I grew up
33m16s: on dynamically typed
33m19s: languages while I like hll for example
33m23s: you know I&amp;#39;m not a huge hll developer
33m26s: but I do like the beauty of hll Elm for
33m28s: example
33m31s: um I just don&amp;#39;t get on with typescript I
33m33s: don&amp;#39;t get on with the concept of
33m35s: typescript in that
33m37s: why why constrict and constrain an
33m40s: already beautiful
33m42s: language know I fighting talk I know
33m44s: saying JavaScript a beautiful language
33m46s: but I think it
33m47s: is um but then again you know uh you
33m50s: know I I like writing stuff in bash so
33m53s: that explains a lot doesn&amp;#39;t it um
33m55s: especially when and helmet says Mar and
33m56s: even if projects get bigger Marian I
33m58s: especially when they get bigger then you
33m59s: regret not using T yes although I have
34m2s: heard maybe these stories are apocryphal
34m4s: I not really true um but I have heard of
34m8s: some large projects moving away from
34m10s: types back to JavaScript for whatever
34m12s: reason I don&amp;#39;t know anyway um I think
34m14s: the typescript JavaScript thing the the
34m16s: debate is super interesting and super
34m18s: wonderful and we learn from debates like
34m20s: that um but the debate will always be
34m22s: there I think so um yeah no I completely
34m25s: uh honor honor that opinion and
34m27s: everything and the disc agreement is
34m28s: great it&amp;#39;s
34m29s: great anyway one thing that we do need
34m32s: to have a look
34m33s: at is what&amp;#39;s all this nonsense here
34m36s: what&amp;#39;s what&amp;#39;s all this class here
34m38s: extends you know it&amp;#39;s looking like Java
34m40s: it&amp;#39;s in my personal opinion it&amp;#39;s
34m43s: like um and we have the you know init
34m45s: functions and everything so why why
34m47s: anyway DJ calm down uh typescript
34m51s: definitely slows down development how
34m53s: however it is worth it in the long run
34m54s: in my
34m55s: opinion got some good typ script fans
34m58s: here in the uh in the chat it&amp;#39;s
34m59s: brilliant it&amp;#39;s brilliant um Dwight how
35m1s: is this concept that primes are pass by
35m2s: value whether other complex objects by
35m4s: ref is so connected with the cap
35m5s: handless should we check the data type
35m6s: before any I don&amp;#39;t think we need to
35m8s: check the data type I think we just need
35m10s: to
35m10s: be aware as a good question dght why are
35m14s: we looking at this why are we digging
35m15s: into this a because it&amp;#39;s interesting B
35m17s: because you know I&amp;#39;ve got the microphone
35m20s: um but C I think we just I think it&amp;#39;s
35m24s: always good to have cap do everything
35m27s: for us right because you know it&amp;#39;s a
35m28s: it&amp;#39;s a DM do I mean philosophy which is
35m31s: fantastic but I think we also need to
35m35s: understand what actually is going on
35m37s: that&amp;#39;s that&amp;#39;s my that&amp;#39;s my
35m39s: um they went back to jto ah interesting
35m42s: yes with the with the comment blocks um
35m45s: they need to understand uh I think I
35m48s: like to understand what&amp;#39;s going on okay
35m51s: actually talking of that talking of
35m53s: that let&amp;#39;s do a little bit this this
35m55s: this I knew this was going to be a
35m56s: random episode I hope you don&amp;#39;t mind um
36m0s: but to see what&amp;#39;s going
36m3s: on to see how simple in a
36m6s: way the Handler mechanisms
36m10s: are let&amp;#39;s go into here let&amp;#39;s just put a
36m12s: break
36m13s: point okay let&amp;#39;s do that shall we and
36m17s: we&amp;#39;ll stop this stop running here we&amp;#39;ll
36m19s: stop that get rid of that and then we&amp;#39;ll
36m22s: start debugging oh This brilliant chat
36m24s: brilliant chat uh Mark tman the sooner
36m26s: gen I will do coding I it can&amp;#39;t it can
36m29s: decide what to do what to use typescript
36m31s: or JavaScript now that reminds that sort
36m33s: of harks back in my small brain to what
36m36s: John
36m38s: says which was typescript definitely
36m40s: slows down development one of the things
36m42s: that I&amp;#39;m still not sure about with
36m44s: generative AI based coding is it
36m46s: generates code for
36m48s: you and you know you code you get
36m52s: through coding
36m54s: faster that&amp;#39;s not the only benefit of
36m56s: generative a based coding yes I
36m59s: know but is more code and and more code
37m2s: faster actually
37m5s: better question mark I don&amp;#39;t
37m8s: know um You&amp;#39; still got to understand I
37m11s: think you&amp;#39;ve still got to understand
37m12s: what has been generated is it correct is
37m16s: it appropriate it reminds me in a
37m19s: really perverse way I think I&amp;#39;ve
37m22s: mentioned this before to somebody of you
37m25s: know in the 1980s when you know with in
37m28s: the Steve uh Steve Balmer era of
37m31s: Microsoft developers developers
37m32s: developers where prod developer
37m35s: productivity was measured in lines of
37m37s: code or klocks thousands of lines of
37m39s: code okay that&amp;#39;s not an era I want to go
37m43s: back to okay anyway John Marie depends
37m47s: if you&amp;#39;re asking the product manager or
37m48s: the
37m49s: developer very good observation that
37m50s: John okay so just to understand what is
37m54s: going on here in terms of how this after
37m56s: Handler Data Logger is being called
37m59s: let&amp;#39;s let&amp;#39;s let&amp;#39;s debug it let&amp;#39;s go bang
38m2s: CDs serve put break point there okay so
38m6s: let let it start up bum bum bum and I&amp;#39;m
38m9s: in theous function as we can see the
38m11s: normal output listening okay let&amp;#39;s just
38m13s: go to the browser and put 40004 in hit
38m16s: enter there nothing oops nothing there
38m18s: yet because of course we haven&amp;#39;t read
38m19s: the books so let&amp;#39;s go and do a where is
38m22s: it uh let&amp;#39;s request the books there now
38m26s: there we go
38m29s: oh I&amp;#39;ve already got a break point there
38m31s: what was what&amp;#39;s going there there we go
38m33s: so we now have let me do that again let
38m35s: me do it again let me let me S of uh go
38m38s: through there there let&amp;#39;s do that again
38m43s: run
38m45s: 404 what&amp;#39;s going
38m47s: on uh have I not run through there there
38m50s: we go right there we go there we go
38m51s: there we go run that one again and
38m55s: refresh 404
39m0s: where are we what&amp;#39;s going on are we here
39m3s: or oh yeah we&amp;#39;re here now we can
39m7s: see in the call stack we&amp;#39;re here right
39m11s: and here that&amp;#39;s where we want to be
39m14s: right so what&amp;#39;s
39m17s: happening it&amp;#39;s super simple
39m20s: uh typ Advantage object actually let&amp;#39;s
39m24s: let&amp;#39;s go back out out of here uh step
39m27s: over and
39m29s: step over there there there we go there
39m34s: we there it is there it
39m36s: is Rose for reach hand let Rose for
39m42s: reach where is it uh
39m46s: after after where is
39m50s: it phas after Handler read event read
39m55s: Handler is
39m58s: else
40m2s: okay okay okay
40m4s: okay where I want to find the thing that
40m7s: calls here uh after each logger data
40m11s: where are we here uh let&amp;#39;s go through
40m14s: here
40m15s: and there there log up what&amp;#39;s going on
40m19s: what&amp;#39;s going on can&amp;#39;t find
40m22s: it oh here we go as well um Maran says
40m25s: for you for your information the big
40m26s: open source project was called turbo
40m28s: thank you thank you Marian so Dwight
40m30s: says so that is why we are cloning repos
40m31s: and push them to beat that kpi yes
40m33s: exactly clone the repos and push yes yes
40m35s: more code more code more code um what is
40m38s: going on here let me um run that through
40m41s: to completion are we still are we
40m44s: running did we get the did we get the
40m45s: data books ah okay ah that&amp;#39;s why
40m48s: books there we go right
40m52s: now let&amp;#39;s step over that over that R for
40m58s: there we go Handler there oh of
41m6s: course I was playing about with this
41m8s: last week and this I thought I don&amp;#39;t
41m10s: recognize this line of code but this is
41m12s: the each look it even DJ read the
41m15s: goddamn code right it even tells us here
41m18s: so what&amp;#39;s happening here is we have a
41m21s: Handler okay but let&amp;#39;s tell you what
41m23s: then what we&amp;#39;ll do what we&amp;#39;ll do let&amp;#39;s
41m24s: just stop that stop that
41m30s: let&amp;#39;s change that back
41m32s: to read okay um there we go that&amp;#39;ll do
41m37s: t.m book whatever right let&amp;#39;s save that
41m40s: let&amp;#39;s save that and run it
41m43s: again have I I hope I&amp;#39;ve not lost you
41m45s: here um I think I&amp;#39;ve lost myself but
41m48s: anyway let&amp;#39;s go back here launch
41m50s: listening okay so let&amp;#39;s do that again
41m54s: R are we ready are we ready are we ready
41m57s: yes we&amp;#39;re ready go
42m0s: okay we&amp;#39;re now in our call back in a
42m3s: normal read
42m6s: right let&amp;#39;s step over this and out of
42m11s: the call back to the thing that called
42m13s: the call back out up to there there we
42m16s: go that I saw this I saw this line I
42m18s: thought this is a really interesting
42m20s: line where are we we are
42m25s: inside node modules at sap CDs lib serve
42m29s: serve
42m40s: dispatch.me or any sort of design time
42m42s: tools or development
42m43s: tools so this is the real thing and it&amp;#39;s
42m46s: in lib serve which you think okay well
42m49s: yeah this is the server stuff server
42m52s: implementations serve dispatch and you
42m54s: know when you dispatch you you sort of
42m58s: send out to the
43m0s: appropriate recipient the request for
43m3s: that recipient to um fulfill that
43m6s: request possibly or do something with
43m8s: that request okay that&amp;#39;s the whole point
43m11s: of the word dispatch here and look we
43m13s: see here um oh so John says on the
43m17s: constant thing I can&amp;#39;t find the article
43m18s: unfortunate but the main gist was that
43m19s: the con does not mean constant it means
43m21s: onetime assignment yes exactly that&amp;#39;s
43m23s: what we saw here wasn&amp;#39;t it when we were
43m25s: doing the primes it&amp;#39;s a one it&amp;#39;s a con
43m27s: so if I if I say uh We&amp;#39;ve managed to
43m29s: change primes here let&amp;#39;s do it again um
43m31s: primes map
43m34s: um primes do
43m37s: map if I change that to 50 44 for
43m40s: example primes is Now 44 however what we
43m43s: can&amp;#39;t do is say primes equals
43m47s: banana okay that&amp;#39;s what John I think
43m50s: you&amp;#39;re referring to right that&amp;#39;s what
43m51s: the the author is referring to it&amp;#39;s sort
43m53s: of misleading as in it&amp;#39;s not immutable
43m58s: generally it&amp;#39;s a one-time assignment is
44m1s: that is that what you&amp;#39;re saying John is
44m2s: that what you&amp;#39;re relaying what the
44m3s: author said and that makes a lot of
44m5s: sense um so
44m7s: now after handlers do after handlers
44m10s: running so the really interesting thing
44m13s: about cap node.js is that you can look
44m15s: at the source code and find out what&amp;#39;s
44m17s: going on now this is arguably not
44m19s: necessarily Back to Basics however what
44m22s: it does show you is that you know we&amp;#39;re
44m24s: not very far away it&amp;#39;s only on the other
44m26s: side of the fence
44m28s: from having a look if something you
44m29s: don&amp;#39;t understand something go and have a
44m31s: look what the context is of what your
44m33s: thing is doing or not doing and it might
44m36s: help so here we can
44m38s: see let&amp;#39;s go a go through all the
44m41s: handlers thisor handlers. after filter
44m45s: them all out and to make sure that that
44m47s: I mean I&amp;#39;m just reading from in an
44m49s: English perspective you know this is
44m50s: classic sort of cap noj flavor of
44m52s: JavaScript which is quite unique I would
44m54s: say um
44m57s: and to and obviously each Handler has a
45m0s: four okay which is a is some sort of
45m3s: property that will allow this filter to
45m5s: work to say is it for the current
45m7s: request okay because remember we&amp;#39; got
45m9s: handlers like this thing here but it
45m12s: might not be for that request that is
45m15s: for a read for books
45m17s: right if we&amp;#39;ve got any handlers as in
45m20s: you know if the length of this handles
45m21s: array is is um not zero there two in
45m24s: this case right then
45m27s: we just make sure that um if it&amp;#39;s readed
45m30s: if it&amp;#39;s not an array make it an array
45m32s: this is like a you know nested a nested
45m35s: turnery which is crazy crazy interesting
45m37s: crazy sort of you know whoa wow oh yeah
45m41s: brain uh and then it just goes whack and
45m44s: passes makes a call to each of the
45m47s: handlers look handlers. map for each of
45m50s: the handlers it makes a call so this is
45m52s: basically a dynamic call whatever the
45m54s: Handler
45m55s: is cuz of course the Handler is just a
45m58s: function and this is one of the one of
46m0s: the many beauties of JavaScript
46m2s: JavaScript has or and and offers the
46m5s: ability to uh use higher order functions
46m8s: and you can say do call so you call
46m10s: whatever that function is and this is
46m12s: anonymous this anonimous function here
46m13s: which is this that thing there that&amp;#39;s
46m16s: already highlighted in Gray
46m19s: right and first of all you have to pass
46m21s: whatever you want for this thing to be
46m23s: this is a JavaScript thing you know
46m25s: other languages as well and then you
46m27s: pass it the results okay and that&amp;#39;s it
46m29s: so there&amp;#39;s there&amp;#39;s no magic behind
46m32s: what&amp;#39;s calling this right anyway why am
46m35s: I why am I talking about this anyway I
46m36s: can&amp;#39;t remember
46m38s: um uh so John says exactly right it&amp;#39;s
46m41s: misleading as in most other languages
46m42s: constant actually means constant so it&amp;#39;s
46m43s: easy to assume that this applies to JS
46m45s: yes exactly I just found it John it was
46m47s: Ryan Florence and his talk let it be let
46m49s: it let me be let me be let me be oh let
46m52s: me be ah let const let Etc yes thank you
46m56s: very much John and Leo now um what were
46m59s: we doing what were we doing ah
47m3s: yes so I can&amp;#39;t remember why I was
47m6s: talking about that but what we want to
47m8s: do is grab this let&amp;#39;s grab this because
47m10s: I&amp;#39;ve only got 15 minutes left this is a
47m13s: bit of a random one I apologize um one
47m15s: thing that I um let&amp;#39;s put that in there
47m17s: right uh and we&amp;#39;ll have to sort of
47m18s: modify this a little bit because of the
47m20s: difference between what we&amp;#39;re using here
47m22s: cds. service.
47m25s: imple which is
47m28s: referred to in the capaya documentation
47m30s: as the old style the non-class style but
47m34s: if you have a look here I&amp;#39;ve got a link
47m36s: to how to provide custom server
47m40s: implementations um and the example the
47m43s: canonical example here is to use
47m46s: javascript&amp;#39;s es6 classes because
47m48s: basically what you&amp;#39;re doing is the cds.
47m51s: application service is a class that
47m54s: provides
47m57s: right all the default imp service
47m59s: provider implementation so you can you
48m1s: know you write your CDs and you don&amp;#39;t
48m3s: write any JavaScript at all and all of a
48m5s: sudden you&amp;#39;ve got a fully functioning
48m7s: crud plus q o data service how the heck
48m10s: does that work it works because of the
48m11s: CDs application service class that adds
48m15s: generic handlers as introduced in the
48m17s: cookbook guides right so what you&amp;#39;re
48m20s: doing
48m22s: here is you extend that you basically
48m25s: you know base on that
48m27s: and then you define what you want to do
48m29s: now you can say here alternatively use
48m31s: old style CDs service. imple functions
48m33s: okay so have a look at that have a read
48m35s: of that have a think about that and the
48m37s: reason I&amp;#39;ve been
48m39s: deliberately using CDs service. imple
48m43s: for our you know for our early Back to
48m45s: Basics episodes is because it&amp;#39;s simpler
48m48s: okay we I didn&amp;#39;t have
48m51s: to introduce the concept of classes
48m54s: which is in my opinion I might be wrong
48m56s: let me know in my opinion more complex
48m59s: than it needs to be just to start
49m1s: writing service
49m2s: implementations I&amp;#39;m just seeing I&amp;#39;m just
49m4s: see the word 6502 what um uh Frank toy
49m9s: welcome Frank I just finished my 6502
49m11s: machine language State machine regex
49m12s: Pac-Man engine I&amp;#39;m just here to relax
49m14s: excellent Frank welcome 65 so I had an
49m17s: acorn atom back in the 80 early 80s and
49m20s: it had this uh very strange dialect of
49m22s: basic called atom basic but also you
49m24s: know being a 6502 based 8 bit m micr
49m26s: processor home computer you could also
49m30s: embed bits of
49m33s: 652 assembl which is awesome sta LDA oh
49m38s: yeah memories memories coming back well
49m40s: done Frank and welcome Vall is there any
49m42s: way we can find out what version of cap
49m43s: uses which version of Express npm
49m45s: package yes there is maybe we&amp;#39;ll look at
49m47s: that next time because I I want to I
49m48s: mean this is a great question Vel maybe
49m50s: somebody can answer it in the chat um
49m52s: but we&amp;#39;ll maybe look at that next time
49m54s: um what I want to do is just add this so
49m57s: I&amp;#39;ll just do this here and say we&amp;#39;ll
49m59s: const uh change urgency due to subject
50m2s: equals and then we&amp;#39;ll make that into an
50m4s: anonymous function there we go is that
50m6s: um is that is that syntactically correct
50m10s: I&amp;#39;ve done everything let&amp;#39;s do a format
50m12s: save yeah okay um change urgency ju okay
50m16s: declared but never you I like that Meme
50m19s: what&amp;#39;s it called
50m20s: um uh calm down I am going to use the
50m24s: varable that Meme or is it calm down I
50m27s: am going to use the variable me there we
50m32s: go how good is that me to my ID calm
50m35s: down and I&amp;#39;m going to use the variable
50m37s: brilliant um anyway so we&amp;#39;ve got
50m41s: this and now we&amp;#39;ve got this this change
50m45s: urgency what we want to do is where is
50m48s: it just call it like this yeah so
50m52s: because we&amp;#39;ll also see that we can sort
50m54s: of maybe make that a little bit neater
50m56s: let&amp;#39;s get rid of this logger thing as
50m57s: well and now we&amp;#39;ll say um data no wait a
51m1s: minute um change urgency due to subject
51m4s: data there we go let&amp;#39;s get rid of that
51m6s: we&amp;#39;re not using the um the request let&amp;#39;s
51m9s: get rid of that let&amp;#39;s get rid of that
51m11s: break point as well okay so um exactly
51m16s: zahed uh probably we can check that in
51m18s: package Jon yes using using mpm I&amp;#39;m sure
51m20s: we can work out something um
51m23s: brilliant obviously there&amp;#39;s no incidents
51m25s: here so let&amp;#39;s chain actually let&amp;#39;s
51m27s: change
51m28s: um
51m30s: incident to book Global there we go
51m34s: right oh books oh I messed up didn&amp;#39;t I
51m37s: books books books there okay so we&amp;#39;ve
51m41s: got data if there is any data con books
51m43s: equals ARR that&amp;#39;s that&amp;#39;s this thing here
51m45s: it&amp;#39;s a similar sort of check isn&amp;#39;t it
51m48s: belt and braces to this
51m50s: thing here isn&amp;#39;t it how is books an
51m54s: array if it is fine if it&amp;#39;s not make it
51m57s: an array then we can do a for each okay
52m0s: books for each books book um books book.
52m3s: title book. urgency so we don&amp;#39;t have an
52m5s: urgency book. title to lowcase urgent we
52m8s: haven&amp;#39;t got any books with a title
52m10s: what&amp;#39;s our what&amp;#39;s our books here books
52m13s: uh load
52m16s: books with oh no it&amp;#39;s not those books
52m18s: it&amp;#39;s these books isn&amp;#39;t it
52m20s: [Music]
52m22s: um uh node what&amp;#39;s our book data Data
52m26s: Book
52m27s: oh yeah of course so let&amp;#39;s have let&amp;#39;s
52m29s: use harmless uh title includes harmless
52m33s: then book. urgent we don&amp;#39;t have an
52m34s: urgency but why don&amp;#39;t we say book.
52m36s: urgency equals
52m38s: Hi and
52m40s: then uh let&amp;#39;s
52m44s: open serve let&amp;#39;s open our main CDs let&amp;#39;s
52m48s: put it over
52m50s: here and what do we say here
52m54s: extend um all . cacro do books
53m1s: with now here we go here we go here we
53m4s: go um so oh oh we so Vel says it&amp;#39;s
53m9s: direct dependency of the package okay so
53m11s: that&amp;#39;s a conversation about the express
53m13s: and cap I&amp;#39;ll I&amp;#39;ll sort of look at that
53m16s: but then try and get on with this here
53m18s: uh and over the other we okay so
53m21s: um there is such thing as we can do this
53m25s: uh this is this is in ref to what Dan
53m27s: Daniel said last time about yes while we
53m31s: have the
53m33s: canonical the canonical sort of example
53m35s: where you had a you know 11% discount
53m38s: exclamation mark onto the end of the
53m39s: existing string like we were doing
53m43s: before um why don&amp;#39;t we have another fi
53m45s: virtual let&amp;#39;s have a virtual field
53m47s: virtual
53m49s: urgency string there right let&amp;#39;s just
53m53s: get rid of that get rid of that go back
53m54s: to the terminal let&amp;#39;s do a CD s
53m57s: watch I put my face down there because
54m1s: we can see that so all I&amp;#39;m doing is
54m3s: adding let&amp;#39;s see what happens if we do
54m5s: that um we go to here and go
54m8s: 404 uh look at the metadata we now have
54m11s: hopefully at property name
54m13s: urgency okay
54m16s: now um there&amp;#39;s no urgency this is not
54m20s: persisted in fact in fact we should
54m23s: see urgency there look
54m27s: annotations it gets automatically
54m30s: annotated with core computed true I.E
54m33s: this is a computed field not uh a field
54m37s: that should be persisted in the database
54m40s: layer which which is sort of you know
54m45s: not addressing but it&amp;#39;s sort of in the
54m47s: same mental space as what Daniel
54m50s: mentioned last time which was you know
54m51s: we shouldn&amp;#39;t really be changing well
54m53s: maybe you should maybe it&amp;#39;s maybe it&amp;#39;s
54m55s: not but anyway we&amp;#39;re now
54m57s: Computing on the fly a value for an
55m0s: element for a field that is virtual okay
55m3s: so it&amp;#39;s a little bit sort of quot and
55m4s: grot
55m6s: safer um so why don&amp;#39;t we do that so book
55m9s: urg is that does that will that work
55m10s: let&amp;#39;s see let&amp;#39;s
55m12s: see oh let&amp;#39;s let&amp;#39;s go here let&amp;#39;s go here
55m14s: and do it here because because we&amp;#39;re on
55m16s: the terminal uh there we go does that
55m17s: still
55m18s: work it worked look check it
55m22s: out we have here and because it&amp;#39;s a
55m25s: Virtual Field it doesn&amp;#39;t appear if
55m25s: there&amp;#39;s no I guess that&amp;#39;s interesting um
55m30s: that is very interesting so we don&amp;#39;t get
55m32s: virtual null or something virtual
55m34s: urgency string we&amp;#39;ve now done this
55m38s: now look what&amp;#39;s happening look What&amp;#39;s
55m40s: happen let&amp;#39;s move that over there look
55m41s: what is happening let&amp;#39;s put that down
55m43s: there may be one
55m47s: smaller we are
55m51s: now using the after event and we&amp;#39;ve
55m54s: registered this Handler here
55m58s: let&amp;#39;s do it on one line so we can sort
55m59s: of see it in one go there we go so we&amp;#39;ve
56m1s: got this Handler which starts here and
56m4s: goes all the way to
56m9s: here notice he even here okay I mean
56m12s: we&amp;#39;ve done this in a different way to
56m13s: here we&amp;#39;ve done this like where is
56m16s: it so let&amp;#39;s let&amp;#39;s remove our enclosing
56m20s: brace just like it says here just like
56m23s: it&amp;#39;s here
56m24s: there there okay save
56m28s: that still works
56m31s: okay so this
56m37s: theoretically is well sorry not this is
56m39s: calling this this uh function here is
56m42s: this function returning anything why do
56m44s: we do so uh why do we do this um const
56m48s: uh return Val equals
56m54s: that let&amp;#39;s do don&amp;#39;t need that
56m57s: anymore um and then
57m0s: console.log return
57m2s: Val
57m5s: return return Val right there we go
57m10s: there well what&amp;#39;s going on ah yeah we
57m12s: need obviously that don&amp;#39;t
57m15s: we what&amp;#39;s going on
57m19s: ah
57m22s: there undefined so we get return value
57m26s: there return value undefined so we&amp;#39;re
57m28s: not getting anything back from here but
57m30s: the point is because of the pass by
57m33s: reference because of this
57m36s: whole mutability actual mutability
57m40s: of theoretically only immutable
57m44s: values what&amp;#39;s happening inside of here
57m47s: inside this for which is is is looping
57m52s: over iterating over the values in books
57m55s: which is the data
57m56s: which is the data which is the data
57m59s: things will still happen the right thing
58m2s: will still happen but it&amp;#39;s happening
58m4s: because of lots of interesting reasons
58m7s: in fact while we&amp;#39;re
58m9s: here the final thing we could do
58m11s: actually what let&amp;#39;s get rid of that
58m13s: again like
58m15s: that can you noce this is a pattern I&amp;#39;ve
58m18s: just noticed
58m19s: that that&amp;#39;s fine and that&amp;#39;s what we&amp;#39;ve
58m22s: got here
58m23s: right this after read incidence data
58m26s: this changes BL calls that there right
58m29s: God it&amp;#39;s Ching it down but look at that
58m33s: we could simplify this couldn&amp;#39;t we let&amp;#39;s
58m35s: just let&amp;#39;s have a separate line so we
58m37s: can
58m38s: see it in parallel we could just do this
58m42s: um
58m45s: there is that not a lot more
58m49s: beautiful can you see what we&amp;#39;ve done
58m51s: there we&amp;#39;ve
58m53s: actually specified not an anonymous
58m56s: function as a callback now we were
58m58s: creating Anonymous fun that was like you
59m0s: know on thefly Anonymous function
59m2s: definition and then that is the function
59m4s: that is called as the call back for the
59m7s: after event for read of
59m10s: books but now here all we&amp;#39;re doing is
59m14s: we&amp;#39;re saying let&amp;#39;s this is the function
59m17s: this is the Callback function specify
59m19s: that so you don&amp;#39;t always have to Define
59m22s: your
59m23s: functions in line as anonymous functions
59m26s: and especially if you don&amp;#39;t need the
59m29s: request as the second
59m32s: parameter you can do that anyway um that
59m36s: was a bit random that episode I
59m37s: apologize but I think we&amp;#39;ve done enough
59m40s: now on the old
59m42s: um JavaScript and constants and maps for
59m47s: each pass by value pass by reference and
59m50s: everything um so I think I think we&amp;#39;re
59m53s: okay to move on let me know let me know
59m54s: in the chat before we finish now are we
59m55s: okay okay to move on and um there is an
59m58s: episode next week because I&amp;#39;m uh not
60m0s: away on Friday so yeah I shall see you
60m3s: next week so thank you so much for
60m5s: joining put in the chat whether this was
60m7s: okay and uh yeah I&amp;#39;ll see you next week
60m9s: bye for now
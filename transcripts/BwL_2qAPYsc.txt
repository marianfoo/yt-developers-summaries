e
[Music]
[Applause]
[Music]
[Music]
[Applause]
[Music]
good morning good afternoon good evening
welcome to Hands-On Sab Dev with me
again DJ cacro welcome one and all uh
welcome to visas
in Bangkok Thailand great to have you
again one of the uh one of the regulars
it&amp;#39;s great to see you Vis and Ravi Kumar
good morning to you or good afternoon
maybe yes uh I&amp;#39;m looking at my watch
here
801 yes good afternoon to you in uh was
it Bangalore and uh r r r r r what is
Cap well you&amp;#39;ve come to the right place
to find out good uh welcome uh cap is
short for cloud application programming
uh and more specifically sort of short
for sap Cloud application programming
model it&amp;#39;s a it&amp;#39;s a programming
framework uh that supports nodejs and
Java and it&amp;#39;s amazing it&amp;#39;s beautiful
it&amp;#39;s built by a wonderful uh uh set of
teams of people at sap and uh this is
what this uh this back to basic series
is all about the nodejs specific version
or flavor of cap so uh yeah stick around
and you&amp;#39;ll find out a little bit more
good morning to you helmet in branke in
and Antonio good morning to you and
Kiara bonjo and AJ good afternoon to you
and zahed good morning to you in suly
Hall Sunny Su Hall fantastic I&amp;#39;m just a
little bit further north than you I&amp;#39;m
I&amp;#39;m sort of where&amp;#39;s the nearest place
I&amp;#39;m in burco um which is sort of near Ms
Kirk uh yeah Ms Kirk that sort of that
sort of area Henrik good morning to you
in Denmark and ansha hi good morning to
you and Tom good morning from Greece
Hass uh fantastic and Ola Monica Rafael
good morning to you in Poland and
Raphael good morning to you in SCH in
Switzerland and ra R ra so no more abat
for cap uh oh I&amp;#39;ll come back to that in
a second to say all lots of good
mornings it&amp;#39;s fantastic thank you all by
the way for saying good morning I love
it because it&amp;#39;s nice to see who&amp;#39;s on and
you know it&amp;#39;s nice to see you
interacting sasu good morning to you in
Munich and anchel good morning to you in
uh I don&amp;#39;t know where you are but am I
from Germany No I um I&amp;#39;m from Manchester
in brexitland uh uh that&amp;#39;s where I&amp;#39;m
from um and I&amp;#39;m coming to you live from
the leads in Liverpool Canal from my
Naro as usual now um so
ra so no more for cap well um there is
an equivalent let&amp;#39;s call it equivalent
um framework for the abop developers
amongst us which is the restful
application programming model and they
share many similarities and they share a
almost like you know I remember that
phrase what&amp;#39;s that phrase uh the United
Kingdom and the United States of America
Two Nations divided by a common language
English obviously so you know just
different different sort of dialects
different sort
of yeah I supp versions of of of the
same language in the same sort of way
similar sort of way rap and cap both use
the declarative language CDs but there
are some subtle differences between the
two but yeah stick around and uh yeah
learn about a little bit about cap
fantastic ftic uh Angel lovely fantastic
to home of the Tom yes exactly home
brexit land home of the idiots welcome
so yeah we&amp;#39;re going to cover um let blow
my nose for a second we&amp;#39;re going to
cover compositions today when I say
cover I was like woring all week like oh
will we fit everything into the to the
one uh one episode about compe
compositions um I think we&amp;#39;ll do the
basics certainly in in this episode but
there are compositions are so important
and there they&amp;#39;re so
wonderful uh that we may have to extend
into another episode but anyway let&amp;#39;s
get going DJ stop talking anel says hi
this is annal from Mumbai welcome to you
annal and welcome to you Jennifer in
India and Mark good morning in to you in
ke hope to see you about comt and recap
yes I&amp;#39;ll be there at code connect uh in
June early June uh good morning DJ uh
good morning to you NES as well
fantastic let me let me move to the main
screen so I can start sharing stuff so
we&amp;#39;re going to be looking at
compositions today we&amp;#39;re going to be
using the the cap B2B repo that we&amp;#39;ve
been working on you know nice simple
repo we
moving uh moving from what we&amp;#39;ve got so
far which is just books and authors with
an association which is sort of related
to compositions but not quite the same
we&amp;#39;ll talk about that in a
minute and we&amp;#39;ll sort of
try
transmogrify that stuff into uh
something we can start thinking about
composition compositions with um and it
also says here let&amp;#39;s just jump in for a
second cat run times provide these
special treatments to compositions out
of the box so we&amp;#39;re going to be seeing
if we can see these treatments
experience The Wonder of these
particular these three treatments deep
insert update cascaded delete and auto
Exposition Auto Exposition is that the
right word Auto exposure Exposition Auto
exposure of uh composition targ what
even does that mean we&amp;#39;re going to find
out today uh hopefully uh so anyway
before we get on um uh oh by the way so
before I used to sort of you know pre
preload the chat buffer here with all
these URLs so of course then you have to
go back to the chat and find out where
these things are what the heck is that
face doing there I don&amp;#39;t know what was
going anyway
um let me do that Bang there perfect uh
get rid of that stuff um so uh but I
thought of a better idea I have been
doing this in the past let me know in
the chat um we have uh in the sap events
in the events part of the new sap
Community platform we have sap Community
event I will share that link because
that&amp;#39;s really all you need I suppose uh
put that down there and then in each
each um what&amp;#39;s the word each week I will
put in if I remember an entry so people
can sort of subscribe to that and
everything and blah blah blah you know
you don&amp;#39;t have to do that but this is
also good because that is therefore also
where and you can go back and look in
the calendar go back to
previous uh you know there&amp;#39;s there&amp;#39;s um
uh where is it go back to April and have
a look there you can see uh back to
basic back to basic back to so there&amp;#39;s
one we did on the 8th of March for
example and you can go back there and
look at all the links to all the
resources we talked about and so instead
of putting all the URLs to all these
different things I&amp;#39;m going to show you
I&amp;#39;m going to put them in I&amp;#39;ve just
started started typing them in while I
was waiting for 8:00 to start and
everything so I&amp;#39;ll put them in here if
that&amp;#39;s okay let me know if that will be
uh a better option for you okay so all
these things in here are all these tabs
here you can go back later on have a
coffee after the live stream finished
and get all the links from here oh by
the way hello and welcome to um anel are
we doing sap analytics Cloud oh uh no
we&amp;#39;re not um so my very good friend and
colleague Vitali um is is uh is the
person to talk to there about sap
analytics Cloud this is sap Cloud
application programming naming what&amp;#39;s
that what&amp;#39;s that adage uh in computer
science there are two hard
problems uh cash invalidation naming
things and off by one errors see what I
did there see what the joke did there
anyway so yeah the names can be
sometimes confusing this is the cloud
application programming model um and
it&amp;#39;s about you know um a programming
model that allows us to build Services
backend Services primarily for our Cloud
applications it&amp;#39;s amazing um so Antonio
good night good good night from Mexico
good good yes good early morning uh and
welcome and thank you for joining at
asok thank you for joining uh in uh to
you in Belgium amazing so uh we have the
SB developer news there it came out last
night there&amp;#39;s Antonio talking about Sab
Co jams talking about sa Co jams here&amp;#39;s
all the sap code jams upcoming and again
you can get all the links in here um Tom
and Rich our illustrious uh pair of
abers uh in the developer Advocates team
we of course got Miki as well um but
they they have moved over they traveled
over this week and they&amp;#39;re in uh where
are they in uh in in in in in Amsterdam
so they&amp;#39;re doing a CO Jam they&amp;#39;re
starting a CO Jam right now so there&amp;#39;s
another uh what&amp;#39;s it what&amp;#39;s the word uh
Road road trip Cod Jam so check out all
the Cod jams there
the developer challenge being run by uh
Daniel we&amp;#39;re in the the next week and
it&amp;#39;s all about formula so check out the
developer Challenge on sap build apps
it&amp;#39;s amazing so Ian uh Ian th put a news
item in the news this week about that um
and I when I was sort of thinking about
the compositions there&amp;#39;s a couple of uh
like oh yeah I&amp;#39;ll write about this
because it&amp;#39;s you know maybe some
somebody might be interested so have a
look at this so there&amp;#39;s a blog post here
that I wrote um about basically
sometimes um if you&amp;#39;re maintaining some
Json data in a in in the project
directory in a cap project directory and
of course you you maintain that for
whatever reason you want to use that as
a payload in a curer request in a post
request for example you might not want
the cap server to restart and if you&amp;#39;re
running it in CDs watch mode it will
restart because that&amp;#39;s usually what you
want so here&amp;#39;s a little bit of a hack as
to how you can stop it automatically
restarting as in stopping how we can
stop the normal void the normal behavior
so check out that blog post there the
link again is in this thing here um and
also yesterday uh what I&amp;#39;m doing now is
uh and what we will be doing is you know
having lots of terminals as normal and
you know you know having all sorts of
things on our vs code and sometimes uh
or previously uh we had the the uh The
Prompt ending here so I started sort of
typing here and it wasn&amp;#39;t very long to
type I like typing on a nice clean line
so this blog post here um it just is a
bit of a little bit of a hack on the
PS1 um uh environment variable and a
nice sort of light SED hack to say ah I
want to move the dollar sign round to
the next line in fact I personally
prefer a semicolon because you know I&amp;#39;m
cool or I like to be I like to think I&amp;#39;m
cool I&amp;#39;m not I&amp;#39;m an idiot but there we
go there&amp;#39;s the thing so that&amp;#39;s that&amp;#39;s
why we&amp;#39;re now starting typing on a new
line and if you want to know how I did
that basically uh tail
I did that by doing that right and that
is explained in this blog post so
there&amp;#39;s a blog post there and finally
the final sort of announcement before we
get started um as you know we&amp;#39;re in sort
of the test drive period for sap build
code which is amazing and um we&amp;#39;re going
to do Tom uh Tom young and I are going
to do a live stream oh look who&amp;#39;s I
idiot uh Tom going to a live stream at
the end of the test drive period which
is going to be Friday April the
26th and then uh I good friend Steve
pointed out DJ you idiot um there you
know you&amp;#39;re doing a test drive doing a
test drive live stream but that doesn&amp;#39;t
really cover uh the
Americas uh for this special event so
we&amp;#39;ve added a new uh second live stream
you know know have to go to one of them
doing very similar things in both live
streams but on the same day um 12 1200
EDT I think is 5:00 p.m. UK uh I in 1700
UK 1800
EST so we got an extra live stream there
so there we
go uh now what&amp;#39;s going on here are we
still connected yes we&amp;#39;re still
connected let&amp;#39;s go let&amp;#39;s go let&amp;#39;s go
okay clear don&amp;#39;t clear that one because
I want to I want to keep adding things
to that clear that one there we go so
compositions somebody put in your chat
just to start us off um what you think
compositions are good for uh and while I
give you a chance to put that in the
chat uh let let&amp;#39;s go back and see
remember where we are let&amp;#39;s get rid of
that as well remember where we are um in
our back to basic sort of um repo and as
as you know you can probably find if
you&amp;#39;re not aware you can find the cap
B2B B repo here I should add that to uh
there we go um let&amp;#39;s put it at the top
there oh no let&amp;#39;s put that there
actually let&amp;#39;s put it as we go um Cap B
Tob re
working
repository there there there we go
perfect uh in that
repo we have and we&amp;#39;ve been doing it
deliberately simple we&amp;#39;ve got a
single CDs file services. CDs in the
sort of the project route uh we&amp;#39;ve got
some data as well in a data directory in
the project route okay um and in that in
that CDs file we&amp;#39;ve got um a service and
inside that service directly we sort of
on the Fly Define two entities a book&amp;#39;s
entity and an author&amp;#39;s entity and we
have a relationship
between uh those two entities with this
Association now somebody put something
in the chat please just to make sure the
chat I&amp;#39;m not sure my chat is updating so
or maybe I could put something in the
chat hello from
myself will that will that appear in the
chat oh there there it is there you&amp;#39;re
just all very quiet am I am I um am I
boring you to death
already somebody put what you think um
what you think compositions are good for
and we&amp;#39;ll get around to it um so there
we go so um so we have this now before
we get into compositions and before we
start to modify this to move not move
away from associations we can see that
associations
here are about expressing relationships
between what essentially a I can I&amp;#39;ve
already sort of seen the pattern of text
I&amp;#39;ve not read the text from Henrik but I
think Henrik is absolutely beautifully
spot on and and I was hoping that we
would allow ourselves to get to exactly
that um so Daniel says classical header
items coming up wink exactly exactly
exactly exactly now so in contrast to
that which we&amp;#39;ll de into in a second
books are independent things authors are
independent things you know a book
exists as a as a thing an author a human
exists as a thing and they can be indep
dependent right once you once an
author&amp;#39;s written a book that book still
exists so that&amp;#39;s why um there&amp;#39;s no sort
of otherwise inherent dependency between
those two and the relationship in this
case then we express with an association
an author is associated with a book A
book is associated with an author right
however however however however has as
Henrik Henrik uh says absolutely
beautiful and refers to it as classical
why is the word classical use here by
Henrik because we&amp;#39;re thinking back
to I don&amp;#39;t mean back as in you old
fashioned I mean just thinking
about the classic the the
normal unit of of of of work almost in
sap R2 and R3 systems S4 H Hana
documents a document header and document
items or positions okay and that&amp;#39;s and
that is really the in my in my small
brain the main raise onra of the
composition type of relationship it&amp;#39;s
where you have a relationship between a
parent and children that are dependent
upon that parent and and yes while while
p parent child in the human in the human
context is still you know they&amp;#39;re still
independent things but it it makes it
makes more sense to think about
positions of document items of a
document and as not really having that
much meaning outside the context of that
document
okay so where you have a dependent
relationship does it say that in the
thing let&amp;#39;s have a look um uh yes
contained in there we go comp
compositions represent contained in
relationships okay so when we want to
express a classic thing like a doc a
purchase order with a header and items
or for example I know a a Goods receipt
document or a whatever invoice header
items this whole sap Enterprise you know
basic unit of work is a document right
so um Daniel Scher hello world hello
world Daniel nice have you Daniel on the
on the on the on the on the stream Sunny
hello everyone and DJ Adams good
afternoon from Mumbai good afternoon to
you in Mumbai as well and zahed
compositions are good to create document
structures fantastic so zahed and Henrik
are absolutely spot on so and we can see
here here&amp;#39;s an example right modeling
document structures the clues in the
name right the clues in the title entity
orders orders has this thing called
items notice the capital I right we&amp;#39;re
moving away in or away but in this
particular case where we&amp;#39;re
expressing uh or defining an element
which is is being defined when when
we&amp;#39;re defining an element which is being
described as being of type composition
you can see here that the con ition is
to actually capitalize the first letter
of that element name items okay and it&amp;#39;s
a composition of many order
items and then we have this this on
condition we&amp;#39;ll come to that later and
these order items here is another entity
right okay so we&amp;#39;ve still got two
entities maybe next week we&amp;#39;ll have to
do this next week but we can use aspects
to have sort of
inline uh contained entities down there
for example how beautiful is that right
but we&amp;#39;ll do that maybe next week let&amp;#39;s
get Basics out the way the basics Basics
so
associations independent entities
compositions contained in relationships
but before we do anything else I think
819 I think what we should do is um sun
says this is my first time watching DJ
Adams in capitals video live I always
use recorded videos well welcome sunny
and thanks thanks for joining live I
hope you um take advantage of and enjoy
enjoy the chat which you are doing which
is fantastic you make you you&amp;#39;re um
you&amp;#39;re a good example and a good role
model for uh for everyone here who joins
live chat chat chat give me your opinion
give me your questions as many as you
want um I can&amp;#39;t answer any of them maybe
I don&amp;#39;t know but anyway let&amp;#39;s let&amp;#39;s keep
going so what we&amp;#39;re going to do is we
going to move away from this sort of
simple single Services only and data and
then move back to where we started from
right at the start when we do a CDs in
fact let&amp;#39;s go over here uh CDs init uh
temp uh temp
project if we go to Temp project
now and have that we have we get three
directories as we all know this now
because we&amp;#39;ve done we know we looked at
the other previous episodes here we get
an app director a DB director and server
we&amp;#39;re going to go back to that now so
let&amp;#39;s go back there from RF temp from
temp project and let&amp;#39;s make deer uh
let&amp;#39;s make a DB directory and also a
serve
directory okay um and in those
directories ahim hello sap myap friends
uh my sap friends that&amp;#39;s a good Emoji uh
that&amp;#39;s a good name as well actually um
uh so if we do that oh Sunny has my
question which is good environmental cap
mass or Visual Studio Cod either are
great either have the same um that&amp;#39;s a
good question either have have the same
uh what&amp;#39;s it called where is it called
where is it ah Dev it&amp;#39;s in the dev
container don&amp;#39;t locally installed um the
same sap CDs Lang language
support extension which makes developing
cap stuff magic it&amp;#39;s fantastic so if you
want you know a cloud-based um uh
approach then the business application
studio if you want uh you know a local
approach use vs code but actually
they&amp;#39;re the same thing you know business
application studi these days based on
code OSS which is the open source
portion of vs code and there&amp;#39;s all sorts
of relationships between them you can
sort of you know go from vs code and you
can attach to a Dev space in B and all
sorts of different things so it&amp;#39;s the
same thing so great question though uh I
think some of the previous uh episodes
we talked a little bit about that okay
so now what I&amp;#39;m going to do I&amp;#39;m going to
move uh or let me copy first of I&amp;#39;ll
copy Services into uh DB let&amp;#39;s call it
schema. CDs okay uh and then open that
uh uh code schema CDs uh Services
services on that one there there we go
uh there let&amp;#39;s move that there now I&amp;#39;ve
now split off let&amp;#39;s go back to the um
thingy here I&amp;#39;ve now split off uh I want
to split off here so we got to get rid
of services and get rid of that and
format that i&amp;#39; I&amp;#39;ve worked out why I
can&amp;#39;t do this keyboard shortcut because
I&amp;#39;m already using that keyboard shortcut
for amethyst my window manager so there
we go so there we go let&amp;#39;s let&amp;#39;s have
some some sort of beautiful formatting
so now we&amp;#39;ve moved from defining having
these entities defined inside a service
inside a services. CDS file in the
project route to defining these just the
schema layer so you know in the DB
directory more like persistence things
okay so got books okay and and and
authors and now we&amp;#39;re also going I&amp;#39;m
also going to copy the services into uh
serve and call it main. CDs for example
right um and code serve main.
CDs and now we get get rid of that and
we want to bring oh actually want the
services but now we want to bring in
something in there okay let me move that
across to
here uh there I&amp;#39;m put my head down the
bottom okay do that okay so this is
where we start to think
about not separation of concerns but
using the beauty of the CDs language
itself in how it enables us and
encourages us really to think about
cleanly and
separately defining the things that make
it a little bit more maintainable and
clean and beautiful so over here what we
want to do is give it give give these
entities a name space we don&amp;#39;t have to
but it makes our lives easier and also
of course when you start working in
larger projects larger than just one
person you know it makes it a little bit
more
um explicit in what you&amp;#39;re changing what
you&amp;#39;re importing and so on so I&amp;#39;m going
to say uh Nam space um or. macro think
of my um think it might sort of what&amp;#39;s
it called k.org domain name right
that&amp;#39;ll do right so in this file we&amp;#39;ve
now got the same entities and this
aspect I could I could import the aspect
from sap CDs comma but leave that there
for now let&amp;#39;s not go down that route 824
DJ come on I&amp;#39;m sort of panicking um and
now we can go into here and say using
org
from DB
schema Deb what&amp;#39;s going on here schema
we don&amp;#39;t need the CDs um what&amp;#39;s it
called the CDs extension because that&amp;#39;s
automatic using or schema there we go
and we get that squidly underline
because of course it&amp;#39;s saying DJ you
haven&amp;#39;t used or but we&amp;#39;re going to do
that now so so now we can sort of bring
in those two entities into our service
and have exactly the same as what we had
before in that same
in in that single services. CDs file
which had both in right so we&amp;#39;ve now
separated out the service definition
from the schema level definition entity
books as
projection on
org. Q look at that see see so going
back to your question Sunny whether you
use uh business application Studio or
whether you use vs code with this
extension you get this
beauty cacro do books
and then just have that there
authors and there let&amp;#39;s have that save
that why don&amp;#39;t we also do a CDS watch
okay uh so uh huno welcome huno says and
I like the chat between you as well uh
both passes based on the open source
version of V code exactly exactly you
know thank you for that uh do what uh do
a definition of artifact Bookshop in
Services Bookshop uh what&amp;#39;s going on oh
ah why why do we get that why do get
that because I&amp;#39;ve still got well check
it out actually um CDs watch um it&amp;#39;s
bringing
in uh list in fact
find uh max depth 2 just send one
directory here in One Directory name
star. CDs what have we got we&amp;#39;ve still
got services. CDs remove services. CDs
CDs
watch there we go now okay so now we&amp;#39;ve
oh H says on the other hand on your
local machine you will have to take care
of everything by yourself yes true very
true yeah so some people like that some
people like it to be you know managed
for them best of both
ones so basically now we&amp;#39;re almost back
but I would like to
also move the data directory into the DB
directory because the data Direction at
the moment is in our project route but
now really we should sort move it I&amp;#39;m
not going to drag I&amp;#39;m going to say move
data into DB DB and there we go uh CD
data
and really now Bookshop let&amp;#39;s let&amp;#39;s
clean that one up as well we we did that
just to prove a point that it&amp;#39;s Dash or
dot so let&amp;#39;s say move Bookshop dot uh uh
there&amp;#39;s a bookshops Das um
authors. CSV uh sorry I&amp;#39;m going do it
books. CSV there we go CDs watch
oh I&amp;#39;m in the wrong directory CDs and
wrong directory again CDs watch there we
go Lauren laurren good morning to you
from the Netherland struggling with
Cloud so happy to finally join a light
Breeze with cap a light Breeze with cap
maybe I should rename the series a light
Breeze with cap brilliant um there we
go so we&amp;#39;ve now got same as we have
before um let&amp;#39;s bring in a um another
bring that to there another little
thingy here and start going to um
404 this is what we had before bookshops
authors there we go same thing right we
got everything there that we we&amp;#39;ve had
before we got the metadata looks nice
there beautiful we got our enti type
books enti type authors and we&amp;#39;ve got
the books and authors exposed and we can
look at the data there we got the player
of games s i guide and mostly harmless
and we&amp;#39;ve also got that okay so we&amp;#39;re no
further on than we than we were before
but now we&amp;#39;ve got a a lot more in my in
my opinion um
beautiful clean separation between the
persistance layer DB schema. CDs where
we got the entities defined in in a name
space and the service definition so we
could have multiple service files and
different Services looking at different
at different sort of views
on different combinations of these
things so now um we can start to think
about compositions and why don&amp;#39;t we go
here and um grab the I&amp;#39;m I&amp;#39;m pointing
this screen you can&amp;#39;t see my finger can
you grab this code here and start with
that oh I see a question from sunny
sunny your qu your your uh question few
is very strong today brilliant could you
please share the use cases when we need
to use a cap based framework or a r
based framework assuming using Cloud for
both cap and R I said that&amp;#39;s the classic
question and I will answer it very
briefly um by saying if you know if you
have if you have AB developers if you&amp;#39;re
an AB
developer and have a lot invested in
that uh area which of course is you know
uh very likely CU it&amp;#39;s awesome and and
you know very likely because of uh um
history then it makes a lot of sense to
keep investing in that area about cloud
and rap but if you are you know if
you&amp;#39;re got a different organization and
you you have developers that are not
vers in abat then cap is the perfect cor
coroller is that the right word I don&amp;#39;t
know I just came to me the perfect sort
of alternative okay so if you&amp;#39;ve got
Java developers or JavaScript or
typescript developers then
cap is um is an appropriate framework to
use so you know that&amp;#39;s one very very
basic way of thinking about it but it&amp;#39;s
also something that makes sense to me
you know use the developers that you
have and therefore use the languages
that they&amp;#39;re proficient in and
comfortable in and so on uh so oh uh
Henrik says perhaps a session on the
magic of CDs watch could name it who
watches the Watchers quis custodiat IPOs
custodios is that the
pheis
codet yes oh c yes we go chis custo not
custodes custodes Latin I&amp;#39;ve not done
Latin for a long time um but there we go
who guards the guards who guards those
guards that&amp;#39;s where the original phrase
is from in fact I should put that in the
thing as well shouldn&amp;#39;t I there we go um
put that in um there uh quis
custodiet ipsos
those
custo that&amp;#39;s accusative plural isn&amp;#39;t it
but it&amp;#39;s like third or fourth declension
I don&amp;#39;t know I can&amp;#39;t
remember um we I think we did some on
the magic of CDs watch didn&amp;#39;t we on
previous uh on a previous episode in
this series I think we did uh Lorenzo
says hi DJ the convention for mock DB
data should be namespace entity
shouldn&amp;#39;t it how is it loading anyway
datas with Nam oh without uh you know
what I was hoping somebody would spot
that um that&amp;#39;s a great question can I
come to that question a little bit later
um because it it it is very very subtle
it will load it um so basically as you
can see here uh well no let&amp;#39;s answer
that question now sounds like question
because it&amp;#39;s a great question and a
thousand points for observing that what
we have in here um did oh yeah here we
go we removed it right DB data Bookshop
authors Bookshop uh uh books let&amp;#39;s think
about that for a
second okay the um in fact we can think
about it with the help of where is it
where is it where is it with the help of
I think uh the metadata let&amp;#39;s bring that
back there let&amp;#39;s look at the metadata oh
I&amp;#39;m not running CDs watch CDs
watch metadata come on come on come on
come on
metadata oh come on come on come
on there metat go right we have
here we can
see that we have this namespace Bookshop
where is that namespace coming from it&amp;#39;s
coming from the service sort of
context in which these two entities are
defined okay and the the automatic CSV
data loading mechanism is actually quite
cool in that it will
recognize that you&amp;#39;ve got files that are
named after the entity in that context
there but also I think also let&amp;#39;s just
do this um oh tell you what let&amp;#39;s do it
here let&amp;#39;s do it here let&amp;#39;s CDs watch
and also let&amp;#39;s have that there let&amp;#39;s go
to books and also let&amp;#39;s go to um
authors there&amp;#39;s the authors let&amp;#39;s rename
this Bookshop Let&amp;#39;s do let&amp;#39;s do Q macro
no or. qro or.
macro there we go and also um there or.
Q
macro can you see it&amp;#39;s still doing the
initialization in it from DB data or Q
macro and if we refresh
that it&amp;#39;s still there so it&amp;#39;s very I
mean one of the things one of the things
you got to think about in cap and in
specifically to do with uh what Henrik
was saying about you know the magic of
CDs
watch there&amp;#39;s a there&amp;#39;s a there&amp;#39;s
a a br I think we&amp;#39;ve talked about this
before a long time ago there&amp;#39;s a an
adage uh a motto
um uh DM it&amp;#39;s not it&amp;#39;s not the
distribution I want it dim do what I
mean do what I mean dim pill there we go
there we go writing pear programs do
what I mean and I would I would argue
that the CDs design time facilities the
tools follow the dwim philosophy I.E
just do it do what I mean you know I
don&amp;#39;t have toel it out to you just you
know you know what I mean just do what I
want you to
do okay and this is an example I think
of cap doing that um so it will say well
well you know you&amp;#39;ve got these files
here defined for an entity in this name
space recognize that namespace but
basically but basically also where is
it let&amp;#39;s put that there also that acts
as a sort of name space so it&amp;#39;s taking
it from it will take it from either or
both and even if we move let&amp;#39;s let&amp;#39;s do
this let&amp;#39;s open up another terminal um
uh there we go how do I do that oh yes
there what&amp;#39;s going on I thought I knew
the keyboard shortcut for opening oh
there right there we go it&amp;#39;s uh command
backslash uh if we say for example move
DB data to
serve move that okay it&amp;#39;s not going to
restart because it&amp;#39;s not watching for
that sort of thing but if we do CDs
watch now we still it&amp;#39;ll still find
those data files 836 okay I&amp;#39;m panicking
it&amp;#39;ll still find those data files those
CSV data files but in the serve because
it&amp;#39;s got this this this hierarchy of
roots remember we talked about this
before cdsn roots
that it will look in not only for CDs
files for the overall CDs model but also
for data okay so in the same way it will
also you know be very lenient in terms
of well yeah okay you know books within
the oq macro or books within the book
shop have it let&amp;#39;s have it does that
make sense that was a really long answer
I apologize that was okay though um some
more yes there we go um so Lorenzo I
hope that sort of uh I don&amp;#39;t know
answers your question addresses your
question talks about your question uh
but these questions are great so let&amp;#39;s
answer the questions um whoo says cap no
JS Java versus rap ab app normally if
you want to do real scalable apps you
would go with cap in the other hand if
you developers you would go oh that&amp;#39;s a
that&amp;#39;s fighting talk I would have to
disagree with part of that I think one
of the most scalable
platforms um and languages is the abat
platform and the abat language
especially with rap okay so it&amp;#39;s not
about whether you need to have something
scalable I think it&amp;#39;s um you know the
way that these uh these Services you
know some of the largest
Enterprise um Enterprise systems in the
world are up based systems on the based
on the R3 architecture you know s S4
Hann is still on the R3 architecture
which is a beautiful architecture and
that scales beautifully so it&amp;#39;s not I
don&amp;#39;t think it&amp;#39;s about
scalability um I think for me it&amp;#39;s more
about language uh if you forgive me for
saying that who know um put in the chat
if you disagree that&amp;#39;s Al also cool sun
says addition to question in terms of
client client will prefer which
framework yes exact that&amp;#39;s very true
that&amp;#39;s very true you know you go to a
client I worked in a long time decades
in the sort of Consulting World in sap
and you know different clients different
customers have different different ways
they like to do things so yeah it&amp;#39;s also
client driven uh nit hello and helmet uh
huno uh oh helmet is is going with you
huno that&amp;#39;s helmet that&amp;#39;s that&amp;#39;s that&amp;#39;s
that&amp;#39;s that&amp;#39;s a good opinion to have uh
strong opinions uh loosely held I think
that&amp;#39;s another phrase strong opinions
loosely held uh I&amp;#39;ll put the oh did I
put the do what I mean in there H what
we talk about um there we go let put in
let me put that in there as well ah
Pearl and dwim there and
strong strong opinions
loose held who said that Lucy held um
this is the go beong strong opinions Luc
held
[Music]
uh anyway let me just put that um
search in there because they&amp;#39;ll remind
you to look it up there we go strong
opinions loosely held strong opinions
Loosely it&amp;#39;s a good it&amp;#39;s a good
philosophy interesting philosophy held
held there right go right okay brilliant
brilliant brilliant so youo says
probably the only one probably the only
one which cost less for him for the
client so his business people do not
care about the technical stuff that&amp;#39;s
true sadly true uh in the sap world most
of customers would have saved with ECC
if they would not be forced to upgrade
ss4 I&amp;#39;m not going to get into that who
know uh it&amp;#39;s uh it&amp;#39;s a big it&amp;#39;s a big
it&amp;#39;s a big discussion so Renzo and so
that is the reason why we can mock even
data from external services with the
same convention right exactly yeah if
you have a look at if you have a look at
um H what&amp;#39;s it called uh service
integration code jum in
here service
integration with cap code Jam there if
you have a look at that you will see in
one of the exercises where we bring in
an external service and we would Define
some data locally for that to be served
in the mocking of that external service
exactly the point Lorenzo so helmet says
unfortunately I know helmet&amp;#39;s always got
great opinions unfortunately or there&amp;#39;s
not any real it strategy at customer
side Sab customers wait for what sap
leads to and decid to take the route
that cost
less yes exactly but this is all about
cap so let&amp;#39;s talk about cap um so we&amp;#39;ve
got this fantastic this is brilliant
though I love it I love it I love it
let&amp;#39;s get to the first part let&amp;#39;s see if
we can get get a composition going in so
get rid of that there we go so I think
we&amp;#39;ll leave the data there uh should we
leave yeah let&amp;#39;s leave the data there it
doesn&amp;#39;t matter so we got the data in
there LS LR tree serve there we&amp;#39;ve got
yes okay that&amp;#39;s put oh no actually
because it&amp;#39;s got or. caker it makes more
sense to me to move uh serve data back
to DB because that&amp;#39;s where the orq macro
is right so tree DB we got that there
tree serve we got that there fine okay
now have I still got that in my um
buffer no let&amp;#39;s copy that and let&amp;#39;s
bring that in okay let&amp;#39;s get rid of that
we don&amp;#39;t need that for now um do we need
that no and no let&amp;#39;s go down here and
add those
things let&amp;#39;s now start to a it&amp;#39;s taking
me 41 minutes to type in a composition
but let&amp;#39;s get rid of that because that&amp;#39;s
just you know uh from the from the from
the example uh there uh there but let&amp;#39;s
let&amp;#39;s subtly leave this commen in to be
accessed through orders only what does
that mean what do you think to be
accessed through orders only means it&amp;#39;s
one of these three um three what&amp;#39;s it
called uh three treatments special
treatments okay have a look at that I
keep going to my uh screen one um okay
thank you
Lorenzo so what have we got entity
orders let&amp;#39;s define an entity orders
let&amp;#39;s have another called so we can see
which ones which cuz goids are really
hard to look at with my eyes so comment
let&amp;#39;s have a comment in the order you
know this order is placed by whatever
string right okay and T do T do so what
have we got here what have we got we&amp;#39;ve
got an orders
entity and we&amp;#39;ve got this composition of
many order items very similar to
Association of too many um something
things remember we have the books the
author&amp;#39;s Association the backlink
association where we said for example
here oh there it is there it is
Association too many books on books to
author equals Dollar Self we&amp;#39;ve got a
similar too many Association too many
relationship but this time it&amp;#39;s a
composition and also note this I just
love the subtle
um the subtle difference between the
preposition here two Association two
okay which implies a sort
of
equal existential existentially equal uh
relationship between the books and
authors both of which can uh exist
independent of each other whereas here
notice that the preposition used is of
so that sort of implies also this thing
here where it says what is it um
where uh contained in see that contained
in so composition of that should give
you a clue and start your brain thinking
about this header items relationship
that uh Henrik uh Henrik uh
mentioned many order items we still
because it&amp;#39;s to many we still need to
have this sort of condition okay but
basically it it follows the same idea we
have how do you define the condition the
first part of the of the left hand of
the of the equals for example left hand
of the the um equality uh condition says
items what is that referring to that is
referring to the name of this element
and then this element points to
something okay it points to the order
items so the the right hand part of the
or let&amp;#39;s say this part of the uh left
hand side of the equals after the dot is
an element in the pointed two thing so
it&amp;#39;s there pair even highlights it for
us right so
basically Dollar Self is effectively the
key of this entity is me right Dollar
Self me this order right this this
instance of the order as entity has to
be the same as the key of this because
remember oh also we need um we need to
have don&amp;#39;t we don&amp;#39;t we have the CU ID
right let&amp;#39;s put the CU ID in there
comment items orders uh should we have
the C see we&amp;#39;ll see what happens if we
just take that um we probably need a CU
ID don&amp;#39;t we anyway or some ID so let&amp;#39;s
start let&amp;#39;s start that up and have a
look what we get okay first of all let&amp;#39;s
save that let&amp;#39;s go and open here CDs
watch and now let&amp;#39;s bring in let&amp;#39;s bring
that back in again we don&amp;#39;t need that
one um let&amp;#39;s go back here back there
back there what&amp;#39;s going on here oh ah
why aren&amp;#39;t we getting that because we
haven&amp;#39;t exposed it idiot DJ so let&amp;#39;s
bring that in and open up um what&amp;#39;s it
called main. CDs and let&amp;#39;s just expose
and let&amp;#39;s just sort of think about what
we&amp;#39;re doing here we want to
expose
um just our orders because we have
composition targets are exposed Auto
exposed in service interfaces let&amp;#39;s
start taking
a A Towing in the water approach to
thinking about what the heck that might
mean so we want to say here for example
uh let&amp;#39;s do that orders as and as there
okay let&amp;#39;s do that
uh come on restart please thank you very
much there we go now there we get
orders okay no orders in fact let&amp;#39;s add
some orders let&amp;#39;s add some a couple of
orders let&amp;#39;s go and get um yeah let&amp;#39;s
have a let&amp;#39;s well let&amp;#39;s have look at the
metadata first of all in the
orders there orders entity type there&amp;#39;s
the entity type
definition have you noticed what&amp;#39;s
missing there right what&amp;#39;s missing there
is something like this where we have a
key property defined property o data
term element CDs term right so this of
course is just a you know this is just a
the important bits of an entity
definition so we do need a Cy of course
obviously need a key so let&amp;#39;s go back to
um schema. CDs and add in here uh
willing fatless let&amp;#39;s annotate it with
annotate it is that the word no let&amp;#39;s
decorate it with the CI aspect okay oh
LAX say good morning good afternoon to
you could you also show how the DB table
gets created the DB table gets created
um what do you mean specifically there I
think I might know what you mean or I&amp;#39;m
going to take a guess as to what you
mean which is the SQL light thing here
um or do you mean for example um do you
mean let&amp;#39;s just get do this for example
this thing here so we can look at SQL
previous squel Daniel SCH pointed us
this week brand new in March 2024
release of cap we can see the SQL so
this is how um the schema. CDs
translates into SQL so we have ddl
statements here um that are based upon
the definitions in here so we have the
create table org qro orders so the the
the name space gets translated as it
were into a
prefix for the table in the persistence
lay in the ddl okay and here for example
orders the
cuid which is basically the CU you can
see the cuid key ID which adds basically
adds an an element called ID which is a
key element of Type U
ID that gets translated into ID narr 36
why is it 36 because a u ID is 36
characters long it&amp;#39;s sort of like a
string but not a string it&amp;#39;s like an
opaque
string yeah opaque you do not look at it
do not interpret it do not pass go do
not collect to
00 have a comment and and then we get
the primary key ID it&amp;#39;s the primary key
is the ID so is that what you mean or we
can also do a deploy to the SQL light
database and have a look at that as well
let me know let me know in the chat if I
probably not answer any question um so
now let&amp;#39;s let&amp;#39;s have a look here and
refresh that and now we get what we&amp;#39;re
looking for here which is something that
is sort of capable of maintaining a
contained in relationship where the
children can point back go to their
parent Association to orders look and
that because this is an managed
Association composition doesn&amp;#39;t
necessarily mean that you know two
contained in relationship doesn&amp;#39;t mean
that you only use compositions you use a
composition to express the you know the
pointing to the the contained in thing
but that contained in thing can point
back to its parent through a managed
Association ah okay perfect thank you
very much uh laxa um so now we can see
here the order items has two key uh
properties the parent ID where is that
coming from that&amp;#39;s coming from the manag
association remember the manag
association takes the the from part the
parent and the two part that it&amp;#39;s
referring to which is the ID in orders
there ID and squ them together with an
underscore okay and generates that as as
let&amp;#39;s do that again uh in the main CDs
oh no let&amp;#39;s do it here I&amp;#39;ll do in in
there what what what uh no don&amp;#39;t that
what&amp;#39;s it what&amp;#39;s going on SQL there um
in there parent ID okay
right 850 we&amp;#39;ll have to do a second
episode in this because there&amp;#39;s so much
to explore in competitions we&amp;#39; only just
got started right um so let&amp;#39;s add some
data let&amp;#39;s add some
data um because because because because
because
because um we don&amp;#39;t have any data let&amp;#39;s
add some data and let&amp;#39;s go here and say
let&amp;#39;s have a uu
ID in fact let&amp;#39;s have two orders U ID um
U ID let&amp;#39;s copy those that&amp;#39;ll do
uh and let&amp;#39;s bring that into there and
let&amp;#39;s now open let&amp;#39;s just that there
again and let&amp;#39;s open up um let&amp;#39;s have
another file let&amp;#39;s have another file um
data new file oh doc can you hear my
stomach rumbling I&amp;#39;m starving
orders. CSV oh no DJ what are you doing
we can we can be lazy can&amp;#39;t we lazy one
of the three main features of a of a
great programmer be lazy any can anybody
put in the chat what I&amp;#39;m referring to uh
that the famous Larry wall uh adage the
three the three um aspects of a great
programmer laziness something and
something so I&amp;#39;m going to say CDs add
data what&amp;#39;s going to happen here what is
going to happen
here I&amp;#39;ve got it to give me to create in
the data directory in DB data the files
are missing we&amp;#39;ve still got the authors
we&amp;#39;ve still got the books but now we&amp;#39;ve
got those two files there I don&amp;#39;t have
to create them with the names and also
it&amp;#39;s got the things here so ID let&amp;#39;s put
that in there and comment first order uh
second order second order there we go
and let&amp;#39;s add the items as well right so
we got the items we got um parent ID
let&amp;#39;s have uh position one position one
and quantity 10 and quantity 10 let&amp;#39;s
have in the second order let&amp;#39;s
have uh sorry in the second position
second line item we&amp;#39;ll have sorry in the
second order will&amp;#39;ll have two positions
two items item one and item two where
the quantity is 10 in the first one and
you you know what I mean right okay ah
there so let&amp;#39;s just have a look at that
together let&amp;#39;s put that over there so
they go we got our order ac5 there&amp;#39;s AC
5&amp;#39;s item single item with 10 quantity
and Order 609 there we got two order
items one with 10 and one with 20 fine
okay so now CDs
watch let&amp;#39;s bring that back again and
refresh there we go but the really so
we&amp;#39;re going to we&amp;#39;re going to be able to
capture or start to have a look at and
stare
at
one just one for now let&amp;#39;s
are you okay put in the chat somebody
who&amp;#39;s somebody who&amp;#39;s put in the chat
already put some more in the chat if
you&amp;#39;re okay in us doing a second episode
I think we need to do a second episode
on compositions put in the chat you know
tell us it&amp;#39;s all right to do a second
episode on compositions so we can we can
do it
justice um notice what I haven&amp;#39;t put in
let&amp;#39;s put that over there a bit uh let&amp;#39;s
go here get rid of that get rid of that
get rid of that in our main CDs in serve
Main CD you can see serve that&amp;#39;s quite
nice there the breadcrumbs serve main
CDs in Bookshop right I&amp;#39;ve
defined I&amp;#39;m exposing an entity called
orders and it&amp;#39;s a projection on the org
qro orders which I&amp;#39;ve imported from the
schema level thank you visas thank you
thank you so much right
okay but I&amp;#39;ve not
exposed order
items because it says here composition
targets DJ are Auto exposed in service
interfaces
so let&amp;#39;s have a look what that means
first of
all we&amp;#39;ve already seen partly what put
my head at the top again we&amp;#39;ve already
seen partly what that means look down
here we&amp;#39;ve got our books entity type
we&amp;#39;ve got our author&amp;#39;s entity type and
we&amp;#39;ve got our sorry authors entity type
we&amp;#39;ve got our orders entity type we
haven&amp;#39;t said anything about order items
but it&amp;#39;s in the metadata why is it in
the metadata because it needs to be in
the metadata in order in order to have
this relationship expressed in the
service and that&amp;#39;s what this is
partly referring to Auto exposed in fact
in
fact if we have a look here get rid of
that for a second if we have a look at
the let&amp;#39;s look at the
yaml if we collapse this is basically
the yaml encoding the yaml language
encoding rather than Jon encoding of the
core schema notation the sort of machine
readable version of this of main right
but we&amp;#39;ll we&amp;#39;ll dig into that a little
bit more this you know this is a back to
Bases we&amp;#39;re not going to look at this
too much but looking at this stuff tells
us a ton of stuff so org Q macro orders
org Q look at this don&amp;#39;t look at that
bottom bit yet look at that there we&amp;#39;ve
got where is
it oh damn move oh miss oh yeah oh it&amp;#39;s
because I&amp;#39;m I&amp;#39;m not used to VSS code
let&amp;#39;s do that again and double click so
it stays there right let&amp;#39;s just go down
there uh or cacro orders no orq macro
order items that reflects exactly this
thing here Order items right order items
it&amp;#39;s an entity it&amp;#39;s got these elements
parent pause and
quantity but the Bookshop order items so
going back to your question uh Lorenzo
this is why this the C the cap Server
doesn&amp;#39;t really well distinguish es of
course it distinguishes but it has both
it&amp;#39;s thinking already about both
prefixed things order items in the OR
qro context and Order items context
again is an overloaded word in the OR
cacro Arena and Order items in the
Bookshop Arena Bookshop service or qro
namespace these are separate things but
they both exist and look at that CDs
Auto exposed with a d you may have
already seen the CDs Auto
expose without a D annotation we&amp;#39;ll get
to that so zahed and Ravi says thank you
yes thank you very much for responding
in the chat chat is great uh so
that has been generated when it&amp;#39;s when
this schema. CDs is converted and the
main CDs converted of course as well you
know the whole when the model is
built it&amp;#39;s this it&amp;#39;s a season that
matters and what we get in the generated
season is this CDs Auto exposed true
that means you know in my brain the fact
that it&amp;#39;s a past participle Auto exposed
with a d means that it&amp;#39;s done for us
right and that relates exactly to Auto
expose even says there Auto expose you
know clues in the name type thing what
does that mean that means that we get it
there but what that also means
is across there a minute what that also
means is when we go to
orders we can say can we say can we say
can we say will this work
expand equals what&amp;#39;s it going to be
items items because let&amp;#39;s get rid that
for a second that get that there because
this is the the relationship the
navigation property in od data terms
that we&amp;#39;ve defined because of this
composition that we&amp;#39;re using items
capital I expand equals items will this
work
yes yes yes and more yes what I want to
leave you with though is a really
straight
thing um oh no actually no that&amp;#39;ll do
for now that&amp;#39;ll do for
now so let&amp;#39;s just recap in the in the
final
minute we have defined let&amp;#39;s get rid of
that there we&amp;#39;ve
defined a new entity orders and a new
entity order items two separate entities
next week hopefully we&amp;#39;ll get round to
looking at where we don&amp;#39;t have to
define a separate entity which is you
know is sort of very subtly slightly
not cumbersome but you know flat footed
you know we I don&amp;#39;t know it it would be
nice to define something like this sort
of in line so that&amp;#39;s what we&amp;#39;ll look at
as well but we&amp;#39;ll also look
at more on the auto
exposure right and the difference
between oh tell you what tell you what
really subtle 858 and the difference
between Auto exposed let&amp;#39;s do that let&amp;#39;s
do that um and Auto if I say CDs Auto
expose without a D Auto exose as in I&amp;#39;m
doing it as a human annotating that I do
that that will restart if we now go
here refresh it&amp;#39;s there right there&amp;#39;s a
subtle difference between Auto Expos and
auto exposed Auto exposed is sort of
internal implicit and auto expose now we
can look at the order items right before
we couldn&amp;#39;t and in fact the final thing
if we get rid of the auto Expos oh my
goodness me get rid of that and save
that uh did I get rid of that
no come on down there down there down
there delete save restart oh go there
and go back there again but if we re
refresh that it&amp;#39;ll say entity bookshops
order items is not explicitly exposed as
part of the service bombshell to leave
on so we&amp;#39;ll look at what the heck that
means what that means in terms of the
composition targets Auto expose
we&amp;#39;re going to do cascaded deletes next
week which is like
beautyful and then we&amp;#39;re going to do
some deep inserts as well so basically
this is a classic sort of again going
back to what Henrik said right at the
start this is the classic document
structure header items often you want to
create a whole document with the header
and the items together bam compositions
are what are beautiful for that okay
that&amp;#39;s it for now thanks for joining
have a great weekend and see you next
time
[Music]
bye e
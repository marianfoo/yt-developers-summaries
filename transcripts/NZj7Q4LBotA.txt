[Music]
[Applause]
[Music]
[Music]
[Applause]
a
[Music]
good morning good afternoon good evening
welcome to Hands-On sap Dev with me DJ
qro um what&amp;#39;s going on it&amp;#39;s uh is it is
it g blank oh my goodness me already
what&amp;#39;s going on live uh let&amp;#39;s see um oh
what&amp;#39;s going on hello yeah I think I
should be here um can you hear me okay
uh hello can you can you see me okay uh
my life
playback um is uh it&amp;#39;s sort of blank in
YouTube studio uh I&amp;#39;m not sure what&amp;#39;s
going on uh so put in the chat whether
you can see me please um so welcome
welcome one and all anit welcome and
visas oh I&amp;#39;m here uh that&amp;#39;s really weird
there was a bit of a delay thank you
Mark sound is great good morning from me
uh mesc yeah oh thank you Kate thank you
Kate so um yeah let me say hello to
everybody uh anit you you sent a message
and need retract I&amp;#39;ll come back to that
in a second uh just to make sure I
understood visz good morning to you in
Thailand Angelo good morning Mark good
morning yellow good morning Callan uh
CDH CDs watch Das Das live I like it
like it
Kiara uh good morning to you too and AJ
good afternoon to you AJ um and Ashok
good morning and everyone to you in
Belgium and Kate good morning thank you
for the message by the way Matias good
morning AR&amp;#39;s learning lab good morning
to AR&amp;#39;s learning lab excellent sadish
good morning uh and uh toron cling by
seros uh C Babu oh c Babu Aloo welcome
back long time uh long time no see
brilliant to see harendra Hello and
zahed in suly Hull Sunny suly Hull I bet
the weather&amp;#39;s down down there is as
terrible is up here I&amp;#39;ll tell you about
that in a minute um
chika I always pronounce your name wrong
sorry sorry it&amp;#39;s chanaka chanaka isn&amp;#39;t
it yes good morning uh just want to
check with you if you can discuss on the
tool MBT and its life cycle some info
yes but not yet um you know good things
come to those who wait and I&amp;#39;m sure you
can wait um
uh that is so by the way the folk uh for
folks who are not sure the Tool uh to
which uh chakia is referring the M uh
multi-target application build
tool that is used when we want to start
to put together a
deployment um for cloud Foundry or Kea
um of all the things that we&amp;#39;ve built
with cap and other services but that&amp;#39;s a
little bit further down the line Caston
schel hello in hello to you in Germany
in stutgart excellent fantastic so um
while the uh intro was playing I put
some uh URLs in the chat so we can get
those out of the way basically the the
sap developer news there&amp;#39;s a a reboot of
sap code talk check that out Daniel good
morning and welcome Daniel in house uh
it&amp;#39;s a new co- talk series rebooted by
Ian but also um more of the developer
Advocates doing doing the interviews and
maybe some are being interviewed as well
as you&amp;#39;ll see with Ian and Tom uh and
also what else did I put what playlist
oh yes so I&amp;#39;m not sure if Antonio is
here but um Antonio has been
creating a playlist of uh video
premieres the First Premiere was
Wednesday on edge integration sale from
sap integration Suite so there we
go so let&amp;#39;s get going um thank you all
for joining uh it&amp;#39;s it&amp;#39;s you know it&amp;#39;s
so lovely to see you all in the chat and
everything I love the chat and I&amp;#39;ve got
my tablet in fact that message you might
have seen this morning you know tap tap
is this thing on it was just so I can
send it from my main machine and see if
it appeared on my tablet which you know
if you watched last week it didn&amp;#39;t
really work on my tablet um Angelo when
is my interview is there something I
don&amp;#39;t know uh what interview are you
talking about Angelo interview oh my
interview sorry yes on code talk I
thought you meant like oh um I I
interviewed um one of the many wonderful
people in the cap team uh and uh that&amp;#39;s
that was on cap and Neo that&amp;#39;s coming
out shortly I&amp;#39;m going to be interviewing
Daniel actually because Daniel&amp;#39;s a
superstar as well so I&amp;#39;m going to be
interviewing Daniel as well and we&amp;#39;re
going to be talking I think about CDs
plugins oh yes um that&amp;#39;s the other thing
that&amp;#39;s the other thing FCA good morning
to you um I think I think Ian&amp;#39;s going to
interview me about working on this
narrow booat uh which could be fun so uh
yeah there we go I don&amp;#39;t know when
that&amp;#39;s happening but um I don&amp;#39;t know
anything really uh yes so the other
thing the other URL let me know in the
chat somebody let me know in the chat if
those you URLs are still there still
scroll up aable to um and yes so the
February developer challenge being run
by Tom uh is on cap plugins and week
three came out this week and it&amp;#39;s all
about uh change tracking is awesome so
there we go good morning Sanjay to you
in Delhi India Delhi comma India
fantastic right so let it let&amp;#39;s go let
me go and uh go to oh there it is in
fact there it is um there&amp;#39;s the February
developer challenge plugin week three
and it&amp;#39;s pretty awesome but anyway um
there&amp;#39;s loads of things always loads of
things we want to cover got my coffee
and oh yeah so by the way
um I think anit you said and then I
think you deleted this the comment but
it did remind me thank you very much it
did REM remind me to remind you all um
if you have a look at
the uh replays of you know for example
last week or the week before let&amp;#39;s say
let&amp;#39;s go for last week let&amp;#39;s just pause
that play play back for a second you
will see if you expand the text there I
always go through the video after we
finished and I all the different um
links um that we mentioned uh all the
all the different resources that we
mentioned in the uh live stream I put in
a comment here there we go so all things
in that live stream that we mentioned uh
they&amp;#39;re all linked there so just look at
the um the what&amp;#39;s it called the the
description and there&amp;#39;ll be linked to a
comment in the community with all the
links so there we go that thank you
thank you for reminding me sound uh URLs
in the chat yes you are elsr in the chat
thank you Angelo for letting me know uh
Martin vavic sound now in uh not very
far from here in Liverpool sound is a
word that&amp;#39;s used to mean great sound
that&amp;#39;s sound uh so I&amp;#39;m not not sure
whether you&amp;#39;re saying in that way or
what is just a word sound I don&amp;#39;t know
so um let me know what you mean by sound
um okay where where we left off last
week um we would we&amp;#39;ve been doing a few
um odate operations we did uh a query we
did a read and we did we did a um create
and we did a delete and all those sorts
of things using this um test HTTP thing
there I&amp;#39;ve I&amp;#39;ve um updated did that and
pushed that to the repo so if you have a
look in the repo if you want to have a
look um it&amp;#39;s all there so uh what&amp;#39;s it
called CAP
B2B there is it there yes oh hello test
H been large isn&amp;#39;t it there we go so
there uh Excellence so I&amp;#39;m not sure what
sort of format this HTP is but anyway
you can see there it is so it&amp;#39;s there um
now Martin my bad oh oh anyone have
sound uh I think the sound is okay um
yeah so it might be it might be a
problem you right I don&amp;#39;t know by the oh
yes by the way rrick uh Rish uh should I
say good morning to you in Frankfurt
uh fact attemped to F I was going to say
the reason my voice is is better than
normal is because I went for a run this
morning a little bit of a bonus quick
run um and the weather was horrendous
and all of a sudden I ran into a hail
storm which was freezing and basically
all the way through that Hailstone which
was for about 5 minutes I was shouting
cuz it was it was 5:30 in the morning I
was shouting um on the on my run the f
word CU it was really painful so I&amp;#39;ve
been um I&amp;#39;ve been enunciating before
this uh live stream anyway DJ stop
talking nonsense and get on with
it John muray last week mentioned guids
and there was a really good conversation
in the chat about guids so what I
thought i&amp;#39; would do today
is have a bit more of a look at
guids okay so uh
whereabouts did we encounter guids and
what are guids because one of the things
is that at the moment in our data um
just for ease of use if we got the you
know books here there we go just for
ease of use we&amp;#39;ve got really simple IDs
one two three and in fact I think what
we did was we put um you know had a
meaningful you know DJ Breaking All the
Rules a meaningful sort of key uh where
I see 101 you know if it&amp;#39;s 100 series I
said it was you know always an author
anyway that is not really scalable and
you know we should
embrace um better practices here uh
there&amp;#39;s a link Daniel or somebody remind
me to find that thing in cap in capir in
capaya uh talks about uu IDs and and
best practices there uh it&amp;#39;s really good
so we&amp;#39;ll have a look at that in a minute
but at the moment then what we&amp;#39;ve got is
if I have a look at uh um not only the
data the data that&amp;#39;s put it there put it
there um Bookshop books oh my goodness
me this is crazy is it Bookshop books
and put down there so we&amp;#39;ve got a
Bookshop service within the service
directly defined and we&amp;#39;ll hopefully get
to that as well directly defined we&amp;#39;ve
got a books entity and a author&amp;#39;s entity
and we&amp;#39;ve got we went back to the
explicit key ID and we&amp;#39;re using integer
and that&amp;#39;s why for example note that
when we have a look at the actual um
entity set Jason the Jason
representation of the entity set we get
one two and three or you know we get you
know 10 101 102 103 and also if we have
a look here we can you know do a OD data
what is it a read operation 102 and
there we go
now what I think we should do is just
briefly Embrace let&amp;#39;s have a look at the
let&amp;#39;s have a look at the um cap capire
let&amp;#39;s the documentation uh so we can
find it uh CU ID let&amp;#39;s go from from the
aspect that we&amp;#39;ve already played about
cui you know documentation is fantastic
um so we&amp;#39;ve got aspect cuid which we
know about learn more about canonical
keys and
uuids so does anybody know what a uid is
in fact does anybody know because it&amp;#39;s a
standard what RFC you know like so for
example who knows about r as in uh and I
don&amp;#39;t this is an
sap live stream so of of course we&amp;#39;re
all thinking oh remote function call
function modules function pools ab app
forever uh but I don&amp;#39;t mean remote
function calls um I I mean um request
for comments it&amp;#39;s one of the
standard documentation Styles templates
formats for
encoding encoding as in for writing down
officially uh standards for example of
the the top of my
head because it&amp;#39;s one of my
favorites um the atom publishing
protocol which is you know which is upon
which the uh odata standard is
originally based is RSC
5023 but maybe more more well known RSC
2616 who knows what RSC 2616 is oh there
we go it&amp;#39;s it&amp;#39;s there it&amp;#39;s in my history
even um because I refer to it quite a
lot
um in fact oh I must have referred to it
last week when
um uh when we uh when we did that OD
data create operation we got a 2011
created and and in fact uh the newly
created resource can be referenced by
the UI returned in the entity with the
most specific URI found in by the
location head of field anyway RFC 2616
RFC one of my favorite sort of meta ones
is RFC oh DJ stop digressing but RFC to
not too anyway no let&amp;#39;s let&amp;#39;s not even
go there so RFC 4122 I think it&amp;#39;s 4122
there we go 4122 a universally unique
identifier Ur name space that&amp;#39;s a bit of
a mouthful for a Friday morning however
oh yock says as well exactly right y
Universal unique identifier uu ID and
basically this is an incredibly
interesting um RFC that describes what
uu ID is and sort of how to generate
them as well and it&amp;#39;s got an example
somewhere um there we go the following
is an example of the string
representation of a string
representation of a universally unique
identify as a UR uh we leave that sort
of prefix out so that&amp;#39;s what a uuid
generally looks like 128 bits um so
we&amp;#39;ve got like this you know
uh was it four bytes uh two bytes two
bytes two bytes what&amp;#39;s that one two
three four five six by one two three
four five I can&amp;#39;t count eight maybe I
don&amp;#39;t know um
so that&amp;#39;s a uu ID and if we have a look
here we can see that in fact we looked
here didn&amp;#39;t we we looked here we looked
here we looked here CU ID go and have a
look in there and uu ID U sorry the CU
ID is
defined as an ID element let&amp;#39;s use the
right word I think I I&amp;#39;ve been using the
word
property but I think element is a better
a better word to use Daniel or anybody
let me know what you use to refer refer
to
things inside of entity definitions I
use properties sometimes sometimes I use
fields which is sort of more at the
persistence layer but I think I think
official cap
nomenclature it&amp;#39;s a big word for Friday
morning as well is
element anyway so the cuid aspect is
defined as a single a singular element
marked as being key and also being
defined of the Type U ID U ID is one of
the built-in types in CDs attribute
interesting Mark attribute that&amp;#39;s good
as well oh there goes a um a goose can
you hear that
then flying past um so uid is a standard
sort of builtin canonical keys and uuids
there we go so uh prefer uids for keys
I&amp;#39;m not going to read all this but in
fact let me just put that in the chat
because that&amp;#39;s super important go back
and read that later
don&amp;#39;t interpret U IDs all sorts of
things um all sorts of things here CDs
comes with a small set of buil-in types
U ID Boolean blah blah blah blah blah so
why don&amp;#39;t we switch back here to what we
had before which was to use the
cuid let me put my face down the bottom
cuid um uh aspect uh
cuid and do that there as well and then
we can get rid of that and that let&amp;#39;s
save that now one of the interesting
things is
that the U type which incidentally as we
I think we did see didn&amp;#39;t we maps on
to a standard you know so the entity
data model part of the OD data standard
also recognizes this thing this type and
it calls it a guid u ID Cu uh guid same
thing right
um it recognizes it so have a good
morning question is it possible to
deploy data models in SQL likeing cloud
found sub accounts just for PC yes it is
yes it is it&amp;#39;s not a good idea for
production of course um but yes
absolutely and people do that in fact I
think um for
the developer Challenge on apis last
August I created a service and I had
some sort of static data that I wanted
to have for that being to be served for
that service and I stuck it in a SQL
database and you know I didn&amp;#39;t need it
to scale this thing so it&amp;#39;s just sitting
there because of course you know um it&amp;#39;s
a very good question but but of course a
SQL like database maybe we should do
that next actually a SQL like
database not Cloud Foundry but secq is a
file okay so it&amp;#39;s a file sitting in a
cloud foundary deployment right and so
if you scale out what&amp;#39;s going to happen
to that you know this is why backing
services I don&amp;#39;t know where that phrase
came from this is why backing services
like postgress service or sap hand the
cloud with hdii container they&amp;#39;re more
appropriate for production because of
course you know there&amp;#39;s a separation of
concerns and you don&amp;#39;t have to worry
about the fact that if you destroy a a
pod a container kubernetes or you know a
cloud Foundry
um I can&amp;#39;t think of the word a cloud
Foundry build pack based deployment and
recreate it or scale it out you know if
you you got your data in a file is no
good right so what people do in EG me uh
Daniel says I I would say I would
usually say element what a very polite
way of saying that Daniel yes I yeah so
I&amp;#39;m trying to use the word element so
remind me in a minute jaier or somebody
why don&amp;#39;t we also have a look at um
deploying because at the moment we&amp;#39;re
using in memory aren&amp;#39;t we uh so let&amp;#39;s
remind me to have a look at SQL light we
will cover that today um by the way I&amp;#39;m
away now next week uh so they won&amp;#39;t be
one next week so let&amp;#39;s give you a chance
to catch up with everything uh jaier
yeah it&amp;#39;s file but required a SQL like
to be installed on the Diego Diego cell
yes oh yes in the where the cap services
on yes um exactly exactly so what was I
doing I can&amp;#39;t remember oh yes so we&amp;#39;ve
just removed the explicit integer based
integer typed key ID and we&amp;#39;re going
back to the Cy which is basically best
practice as we you&amp;#39;ll see in that
documentation from cap when you read it
however there are some subtleties that
we need to be aware of of which we need
to be aware of course you know we can
still get uh you know make a o data
create U query operation but look now
the actual sort of you know core in fact
where is it the I&amp;#39;m sure I saw it
somewhere um see list of built-in types
look at that U uu ID an opaque opaque
string let put in the chat what you uh
what you understand by or why there&amp;#39;s a
remark here and opaque string what is
that
implying what does that tell us as
developers right put in the chat what
you think that
is here&amp;#39;s an example an example value
and look it&amp;#39;s got single quotes around
it so basically it&amp;#39;s a it says it&amp;#39;s a
string there basically it&amp;#39;s a string and
it&amp;#39;s stored in an nvar
36 now also then look suddenly the
values that came from here are now
strings but
also and I&amp;#39;m showing you this because I
hit this thing and I was thinking what
is going on my brain wasn&amp;#39;t working and
this is what David uh last week
helped me out on and you know DJ DJ you
idiot it&amp;#39;s this no he didn&amp;#39;t say that in
my brain I said
that now if we were to go and try and
specify a key to do an OA we
operation we get something weird right
and
that&amp;#39;s we haven&amp;#39;t got time to dig into
exactly why but I wanted to show you
this basically if you&amp;#39;re going to define
the
key or the property in general the
element in general to be of type uid and
we are doing you know implicitly by
using the CID aspect then the actual
values do need to be
uu IDs so let&amp;#39;s put one in or
uh oh no what we&amp;#39;ll do what we&amp;#39;ll
do is first of all we&amp;#39;ll refresh that
and then we&amp;#39;ll go and we&amp;#39;ll use this
testing we use this testing so here we
go we did that service name I&amp;#39;ve tided
this up a bit so we got the first
service name books and I&amp;#39;ve got the
proper sort of names here I think Daniel
quite rightly pointed out that I had
some stupid names for my actual requests
here so I&amp;#39;ve cleaned up queer books
again oh um good morning to CER opaque
oh thank you yes for uh for uh answering
the question I asked opaque
noninterpretable exactly the string
should not be passed for embedded
information or meaning I couldn&amp;#39;t have
said it better myself fantastic yes so
basically treat it as some data that is
atomic as it were don&amp;#39;t try to work out
things based upon the actual structure
of the U ID or even the values in it
exactly uh oh and Y also says it has no
inherent meaning or structure that can
be interpreted by the system or
application processing
excellent 100 points for all of you
fantastic right so uh if we do a send
request what&amp;#39;s going to happen we&amp;#39;ve got
this thing here and we&amp;#39;re not specifying
oh got stock here what&amp;#39;s the stock doing
let&amp;#39;s get rid of that for now um let&amp;#39;s
save that
um uh let&amp;#39;s send this request let&amp;#39;s see
what happens good morning to you
Lawrence in the Netherlands welcome old
friend Ro hands on as if de welcome so
send request it&amp;#39;s going to happen there
we go
now what&amp;#39;s happened and what did and
didn&amp;#39;t didn&amp;#39;t I do I didn&amp;#39;t
specify a value for remember um let&amp;#39;s
just go uh oh we&amp;#39;ll go here you know I&amp;#39;m
also in that same directory in my
terminal so if I say CDs compile to SQL
the services CDs um we see that I I
should have put
not only a title but an ID okay so all I
specified though was a title so and I
think it says somewhere here uh will
autogenerate uh I can&amp;#39;t think um
somewhere in here it will tell you that
you can basically
have a uid based typed
field DJ stop saying field element and
in O create operations for example it
will be generated for you if so I can do
another one let&amp;#39;s do another one here we
go um let&amp;#39;s run run run run run send
request send request send request bang
look at look at these things change here
look at those things change bang bang
bang bang we&amp;#39;re generating U IDs each
time shout out hey mlan sorry mlan
mallix Luciano shout out
um shout out I did ask you to remind me
of something I can&amp;#39;t remember what it
was which is why I asked you to remind
me was that a shout out to remind me of
something tell me what it was to do oh
there some sort of um aquatic bird
behind me I can hear it
going um so now oh yes SQL squel yes so
now if we have a look
here check it out we
get new entities in our entity set
because we&amp;#39;ve been creating them but
also these entities are in fact let&amp;#39;s do
one where it&amp;#39;s got a different um
different name um bananas bananas so
let&amp;#39;s do one there and send that so we
can see
it uh oh there we go bananas right so
let&amp;#39;s go for that one so let&amp;#39;s get that
and now we
can let&amp;#39;s see let&amp;#39;s see what happens if
we do that we can do that remember
remember
remember this is like the new sort of OD
dat trendy trendy what am I talking
about DJ V4 sort of you know single key
style OD data read operation but we can
also I think do that right oh no we
can&amp;#39;t ah no we can&amp;#39;t we have to we have
to do it um slightly differently um but
anyway what was
it I can&amp;#39;t remember which way around to
do
it let&amp;#39;s go um oh yes um ID equals oops
we can do that even
I
think no uh books I oh that&amp;#39;s not the
right segment is it is it there dedm
value count for key ID equals that oh
books ID ah I know I know I know I know
what I&amp;#39;m
done no okay anyway let&amp;#39;s get not let&amp;#39;s
not get sidetracked if somebody can
figure out what I&amp;#39;m doing wrong here my
brain&amp;#39;s like going a million miles an
hour and zero miles an hour at the same
time well key thing is you need to
specify you can do like let&amp;#39;s go back to
what we had which was that in order to
be able to specify like that you the
values need to be U IDs now by the way
by the way by the way this came up in um
the conversation I had with um books one
two yes that&amp;#39;s it exactly uh books that
that works uh Veron
if um it&amp;#39;s a if it&amp;#39;s not a uui but if we
because if we do that oops without the
single quote so if we do varon&amp;#39;s uh
there we go ah of
course I was I was just still thinking
of the uh the single quotes fantastic uh
go goo yeah equals look at look at all
these different things here let&amp;#39;s all
try all the different things oh my
goodness me so we&amp;#39;ve got that one and
we&amp;#39;ve got um that one let&amp;#39;s just do that
GID is that what you&amp;#39;re saying
here
I&amp;#39;m not sure oh is it not on equals but
is it I can&amp;#39;t remember um so yeah if we
were to do that I
think H come on TJ what are you
doing yes there we go oh we&amp;#39;ve done that
already yeah uh without the single
quotes fantastic fantastic okay
anyway see I told you I don&amp;#39;t know what
I&amp;#39;m doing um
now so that&amp;#39;s that so that&amp;#39;s that a bit
of a digression one of the things that
um I said oh you know when I was having
a chat with uh darid it&amp;#39;s like you know
oh generating U IDs this is how I do it
you know for example node uh require
there&amp;#39;s a
crypto Library built in and that has a
random U
ID um
function okay so you can do that
so what you could do for example is say
um uh node
node by the way while I&amp;#39;m typing this
somebody put in the chat what this
triple less down sign thing is it&amp;#39;s a
bash
ISM let me know what you think it is
uh
console.log require uh we need to escape
these dou quotes
cryp to escape quote Oh you random you
ID oh require crypto
uh conso oh no I don&amp;#39;t need that do I
here we go don&amp;#39;t need to escape those
there we go so let&amp;#39;s do that
again so I thought ah I can generate uu
IDs like that and then I can say you
know Alias put that in an alias or in in
a script but then also notice that that
will put a new line right console log
will always do a new line so when I when
I&amp;#39;m in the in the terminal which is
mostly you know that&amp;#39;s nice I want that
but when I&amp;#39;m in an editor that wants to
sort of call out to a a bit of code to
insert something I don&amp;#39;t want a new line
and if we say instead
um uh in fact let me show you let me
show you I don&amp;#39;t want to
digress uh too much U ID I put I did
this last night if B basically if it&amp;#39;s a
terminal if the context of the this node
execution is a terminal then just use
console log otherwise use process.st
standard out. write because that doesn&amp;#39;t
put a new line so I can say here
um if I say that uh uu ID I&amp;#39;m in a
terminal uu ID I&amp;#39;m in a terminal if I
say uid word count length uh zero
because there&amp;#39;s no l sorry word count l
L there&amp;#39;s no lines if I say
um uh that there we go for example see
there&amp;#39;s not there&amp;#39;s a non- useless use
of cat DJ pull yourself out of this
digression and get back into the program
but basically you can do that so that
for example we can go into here and say
data
bookshops uh what is it authors CSV if I
say that and then say um o NOP waway uh
change
word uh control R equals system U ID I
could put something in there right and
that&amp;#39;s that&amp;#39;s what I love about um uh
Vim because I can anyway anyway DJ
digressing in fact let&amp;#39;s do another one
right uh let&amp;#39;s do a
um system mu ID there now now if we load
it up and restart
here the
authors should all I a bit big should
also have uu IDs okay anyway what time
is it 8:33 I can&amp;#39;t believe it right oh
Manish is saying hi Von excellent
friends on the chat uh brilliant
now one of the things is that if I go
now oh CU I restarted it didn&amp;#39;t I I
killed it just with contrl + C and I
restarted it so how many books you think
we&amp;#39;re going to
have we&amp;#39;re back to square one all those
books I
inserted uh man it&amp;#39;s okay to say hello
to people it&amp;#39;s great uh all the books I
inserted in this test. htps are gone why
is that tell me why that
is what are we doing here the simplest
thing that could possibly work but what
are we doing here which causes let me do
that one again look I&amp;#39;m going to send a
request to to um create a book with
bananas send a request refresh there it
is but now if I contrl + C stop the cap
server and start it up again go here and
refresh that entry is gone and all we&amp;#39;ve
got are the
three bits of data that were in the CSV
file that were loaded automatically in
it from databook shop.
books tell me what you think
local testing yes speos this is for
local testing but also sometimes local
testing I might want to persist some
data right um and what is happening what
is going on for me you know grow as you
go convention over configuration that is
causing me to have my data that I will
you know create with OD data create
operations to disappear when I restart
the cap
server put it in the chat I&amp;#39;m yeah I
think sometimes I go too fast and then I
get the digressions so I&amp;#39;m going just
calm down for a second and put in the
chat what you
think is happening here and in fact we
can see it on the screen
here let me know shout out in the
chat meanwhile meanwhile while you shout
that
out let me move that down
here close that close that close that I
want to go back to in oh chanaka
fantastic thank you chanaka yes in
memory
database right which is great you know I
mean look successfully deploy to
inmemory
database uh and CA says because it was
saved in SQL like inmemory nonp
persisted database yes and Kim says
memory and data CSV file yes that&amp;#39;s
where the data is coming from data CSV
files clears after every restart y
janaka now if we wanted to have a little
bit more of a persistency
for our testing this is still in test
mode of
course we have the ability to say I want
to put this in an actual SQL like
database which goes back to the
conversation we had earlier talking
about who asked the question was it
Havier asked the question about um using
SQL light databases as in you know DB
files for example in Cloud Foundry so
let&amp;#39;s have a look at that because we&amp;#39;re
going to need that once we start playing
around a little bit more
if we search here let&amp;#39;s use the cap
search what&amp;#39;s going on let&amp;#39;s use cap
search with uh K and um cql
light um SQL light for using SQL light
just I love the I love the uh
documentation brilant using SQL
development deployment persistent
databases look at that now you can also
use P just put that there in the chat
just put in the chat there you can also
use assistent SQL like databases follow
these steps to do so specify database
name database file name in your DB now
for those of you who have used cap um
you know before a while
ago when you
did a CDS deploy which I remember
remember remember the 5th of November um
CDs have all have all has all these
commands and we&amp;#39;ve used some of these
commands one of the commands we haven&amp;#39;t
used yet is um CDs deploy oh Kim says
can this connect to sap business one as
well and is it using server layer um cap
can connect to anything that&amp;#39;s got an
API that&amp;#39;s got some sort of HTP
interface or that&amp;#39;s got some sort of you
know event style inter you know rabit mq
or um mqtt or you know all these
different event protocols cap can speak
as well so no I&amp;#39;m not a business one
person I think I reviewed a business one
book once which I&amp;#39;ll learn a little bit
from um but I don&amp;#39;t know and I don&amp;#39;t
know what you mean by especially as one
word is that a specific thing server
layer so if you can explain a little bit
more to me to my small brain what that
is um and what you&amp;#39;re referring to as it
is it using server layer uh I&amp;#39;m not sure
what you mean there so please explain a
bit more and why do that um we&amp;#39;ve got
CDs deploy deployed to databases or
Cloud okay CDs deploy d-el if you have a
look
here somewhere I was having a look
through this and
somewhere there&amp;#39;s this no save option
which we don&amp;#39;t need anymore because
before when you did a CDS deploy uh to
SQL light for example it would
automatically and nicely put in for you
what it thought you probably wanted for
a require section in your package or in
your CDs environment okay but notice
that it&amp;#39;s deprecated the package Json
file is no longer modified now there&amp;#39;s
different reasons I can imagine for that
most of which revolve around the fact
that it might not know exactly what you
want to do so rather than guess it
doesn&amp;#39;t but also I like the
approach of um BAS basically being able
to specify from the scratch what you
want so you know what you what you&amp;#39;re
doing okay so uh Matias I am a business
one person too mat Matias
welcome Matias how is your uh sticker I
just I always think of your huge laptop
with all those stickers on it and um the
fact that you come to about a million a
million Cod jams it&amp;#39;s amazing so uh
respect to you Matas so Kim says Service
L is s business one exposing an OD API
oh okay well I mean if if sap business
one exposes o data then you know it&amp;#39;s
easy for um cap to consume that
stuff service layer is the new way of
building Integrations against business
one instead of the old
SDK uh yeah don&amp;#39;t we all love the old
sdks who who here used to program with
the RFC SDK some of the first webbased
systems that had an sap backend I built
from scratch with in C using the RFC
SDK oh my goodness that was uh those
were hey days
Stone Age um anyway so why don&amp;#39;t we do
this let&amp;#39;s do this let&amp;#39;s put that in
here and let&amp;#39;s go back to here and let&amp;#39;s
open up package Json
right you&amp;#39;ll
notice you&amp;#39;ll notice
that I love the way that I think it&amp;#39;s
really cool I love the way that you know
when you move away from the copy code
let&amp;#39;s get rid of that thing when you
move away from the sort of the the code
thing here
all the bits that are not specifically
relevant the context gets blurred out
and yet focus on what we&amp;#39;re talking
about but you get the context as well
just
like
beautiful so I&amp;#39;ve copied all of this CDs
requires now
CDs remember the CDs EnV um let&amp;#39;s do
this thing
here CDs EnV look at that CDs n
get
requires I mean there&amp;#39;s millions of
things right there look C this n get
requires middlewares or in fact we could
see here CDs and get
requires JQ Keys what are the keys what
are the top level things in that Json
out but all DB and middlewares right so
we can see there&amp;#39;s all sorts of
different things in fact
look implicitly oh my goodness me
requires. DB we&amp;#39;re discovering things to
together ourselves oh so um it&amp;#39;s
basically uh Microsoft SQL Ms mssql
based that&amp;#39;s
cool we&amp;#39;re learning things all the time
and we&amp;#39;re learning things together here
because I&amp;#39;d not noticed this CU my
brain&amp;#39;s too small but implicitly we
haven&amp;#39;t
specified this anywhere so out of the
box there is a sqlite type of
persistence database layer
the credential where what is the URL
this is like a special you know special
uh value that says do it in memory and
it&amp;#39;s implemented by the package cap JS
SQL light me check out as well mpm
search mpm for that it&amp;#39;s come on
internet what it&amp;#39;s there CDs database
service for SQL light look at that let&amp;#39;s
share that as well
bang okay so we don&amp;#39;t need that anymore
um what we&amp;#39;ve got already is that but
now what we&amp;#39;re going to do is replace
not replace but
augment the environment with this thing
here let&amp;#39;s copy this and bring it in to
our package Json so let&amp;#39;s get rid of
that and paste that it&amp;#39;s going to
be we don&amp;#39;t need that sort of outermost
layer of things there CDs and we also
need a comma right and also let&amp;#39;s format
it uh format
documents uh Kim SL service layer runs
on both Hannah and mssql awesome awesome
so what have I done I&amp;#39;ve added a new top
level key top level property to our
package Jason because it&amp;#39;s a very common
and sensible place to put core
configuration that&amp;#39;s specific to your
cap server requirements okay you can put
put in cdss rc. json. cssrc Json you can
put them in the N environment you
remember this sort of effective
environment is a gathering up and
mashing together of all these values in
all these different
places so now what does this what does
this do this
says we have a requirement for a DB of
kind SQL light but the credentials the
URL remember remember the thing was a
plane going there&amp;#39;s lots of noise
outside today there&amp;#39;s a plane going
overhead now
amazing CDs is it still there get
requires DB so we&amp;#39;ve got credentials URL
DB SQL light because now I&amp;#39;ve overridden
that
thing so if we now do a CDS
deploy what do you think is going to
happen CDs deploy now oh yes yes uh what
we&amp;#39;ll also do keep an eye there they are
coming to get me they&amp;#39;re coming to take
me away cuz I&amp;#39;m just talking nonsense um
they&amp;#39;re coming to get me speos help um
uh CDs
deploy keep your eye on this file list
here let&amp;#39;s see what
happens check it out
db. SQL light db. SQL light so basically
what&amp;#39;s
happened is that remember when we had
that error last was it last week and we
Dig Dug into
error and the error occurred when we&amp;#39;d
remove the ID from the definition of the
entity then we try to start up with CDs
watch and of course it automatically
tries to load anything it finds in CSV
files in certain places into and it said
oh I can&amp;#39;t find I&amp;#39;ve got this thing in
CSV it&amp;#39;s got an ID field and there&amp;#39;s
nothing corresponding in the persist in
memory right that was actually in in the
deploy phase wasn&amp;#39;t it remember and
we&amp;#39;re doing a deploy here
right so
now we&amp;#39;ve now got a db. SQL light I&amp;#39;ve
got SQL light in here yes I I think in
my yeah in my Dev container
definition in the docker file no in I
think I think Christian&amp;#39;s pull
request oh I&amp;#39;ve still got the old one
here in Christian&amp;#39;s pull request um he&amp;#39;s
changed it to a features thing for me
but basically in here look I&amp;#39;ve got
install of the SQL
light um what&amp;#39;s the word client so we
could say SQL light um db. SQL light and
that will allow us to have a look
inside the database do tables check it
out oh my goodness me check it out okay
um so let&amp;#39;s remove that um that&amp;#39;s an old
database SQL light oh well it doesn&amp;#39;t
matter
um so anyway uh
oh missed that um Antonio says ha I was
wondering about the plane excellent we
can include SBO service layer via CSN
but the positions of the documents are
only accessible via array in S4 Hannah
the positions are exposed via separate o
data point this is fascinating um don&amp;#39;t
uh don&amp;#39;t apologize Matias this is
amazing seel light the only day base you
will ever need in most cases great thank
you for sharing that I&amp;#39;m going to read
that
later as you can see in my uh SQL light
can we do this like table I&amp;#39;m not sure
you can do that oh there we go look at
that you can put the command as the
second parameter uh you can see I&amp;#39;ve
been messing about here with other
things um so I&amp;#39;m not sure DB did I
already have a DV SQL light tell you
what we&amp;#39;ll do tell you what we&amp;#39;ll do
we&amp;#39;ll remove db. SQL
light and we&amp;#39;ll also put
[Music]
um uh what should we call it hands on
Sab Dev oh no we&amp;#39;ll call it
Bookshop and then we&amp;#39;ll say CDs
deploy uh
Bookshop there we go that&amp;#39;s better so
ignore the stuff I don&amp;#39;t know I don&amp;#39;t
know where that DB that it suddenly
reappeared
again you have a bit of a premonition as
to what what I want to play around with
you next right or generally next so we
have here um tables and in fact let&amp;#39;s
come to here TQ light tables um select
star from book
Shop books semicolon there we go so we
can play around with SQL
light but the more important thing is if
now we do CDs
watch what&amp;#39;s missing and what&amp;#39;s
there I&amp;#39;m going to take I&amp;#39;m going
because yeah I think this is this is
really
interesting when we compare this to the
output and this is why and also those
who who
have um been subject to subjected to my
ramblings in code jams on cap will know
will remember like a nightmare bad
dream I emphasize that it&amp;#39;s super
important to become friends with the
output of the cap server because it
tells you so much and then the
difference between what happened before
and what&amp;#39;s Happening Now what&amp;#39;s being
output now tells us things as well so
what can you see
here that&amp;#39;s different and what can you
not see
here that we used to
see y says in memory is missing exactly
and also remember that deploy things
loading data from booksh shops. CSV and
loading books. CSV and loading data from
authors. CSV that&amp;#39;s not happening either
because remember does anybody know why
be let&amp;#39;s can open up a split terminal
here um split terminal bash the one true
shell um if we do a
CDS watch d-el let&amp;#39;s just retrace our
steps let&amp;#39;s put that up here as well
right oh no let&amp;#39;s leave that there so we
can see it here right
help no init from exactly kaston says no
in it from CSV perfect we&amp;#39;re not getting
that and why are we&amp;#39;re not getting that
well we&amp;#39;re doing a CDS watch so let&amp;#39;s
have a look at the help for CDs watch oh
CDs watch is just a convenient shortcut
for CDs serve all D- with MOX D-
inmemory question mark and remember CDs
serve help right CDs serve help is
what&amp;#39;s happening here let&amp;#39;s make that
one small it&amp;#39;s all nice and neat in
memory check it out that question mark
there which is an optional thing
automatically adds a transient inmemory
database that&amp;#39;s what we&amp;#39;ve all been
talking about here and you&amp;#39;ve been
saying in the chat as you know us the
reason why the the data that we add sort
of via HTTP after we start the server
the reason that data disappears when we
restart the survey is because it&amp;#39;s a
transient in memory database right which
is bootstrapped on each
restart adds a question
mark to apply a more defensive
variant which respects the configured
database here in fact why
why don&amp;#39;t we
try um what was it the shortcut for CDs
serve um CDs serve help CDs watch help
let&amp;#39;s do it let&amp;#39;s just run that look at
that but without that let&amp;#39;s not put the
question mark let&amp;#39;s see what happens I
have no idea what
happens but why is that a uppercase
why CD CDs serve all Das with mock in
memory
let&amp;#39;s move that across here a bit what
do you think is going to happen I&amp;#39;m
curious now check it
out this is amazing where&amp;#39;s that your
memory thing there we go let&amp;#39;s put that
there and put my head up here a bit main
top by the way I keep I don&amp;#39;t know you
can see or not I keep pressing there&amp;#39;s
my little stream deck and press the
different
scenes now what has happened happened
what has
happened we didn&amp;#39;t use the question mark
on the
end
there so the question mark applies a
more defensive variant of this thing
which does respect any database if it
happens to be configured and only an in
memory database if no persistent one is
configured right but the what we the
variant of this in memory option that
we&amp;#39;re
using is this
one so it&amp;#39;s saying you want an inmemory
database I&amp;#39;ll give you an inmemory
database okay so we&amp;#39;re back to where we
were connect DB SQL light URL memory
ignores this thing here because we&amp;#39;ve
said I want it in memory does the normal
init from data blah blah blah
successfully deploys this to IM memory
database because of course you know it
need you know I&amp;#39;ve covered that already
and then says go right now but if we do
this again and say question mark only do
it to in memory if there&amp;#39;s not
already a configured
database
bang look at what a difference a
question mark makes
right so
now we&amp;#39;ve got Bookshop SQL
light there&amp;#39;s no deployment here cuz you
know it doesn&amp;#39;t need to deploy anything
because database is not new you know the
the new database that needs to be
deployed into is this inmemory database
but we&amp;#39;re not having an inmemory
database here so there there&amp;#39;s no
explicit deploy in the logs here so now
let&amp;#39;s go back to um this thing here we
get the three values as normal
okay actually what I
yeah what I should do really starts me
to go on and put um put U IDs in
shouldn&amp;#39;t I let me just go back here um
uh data bookshops I&amp;#39;ve got I&amp;#39;ve got uu
IDs there so let&amp;#39;s edit that and um yeah
let&amp;#39;s get rid of those and say uh system
sorry um system U ID in fact what I&amp;#39;ll
do is uh I&amp;#39;ll record a thing here so
insert uh system U ID
there and stop recording now I can say
at you and at you look at that the power
of Vim what what other the editor ID do
you need right so let&amp;#39;s do that but also
of course now we have to redeploy don&amp;#39;t
we so let&amp;#39;s get rid of that get rid of
that get rid of that um get rid of that
let&amp;#39;s just blast that away just in case
bookshops SQL light CDs
deploy and C uh SQL light Bookshop do um
there select star from what&amp;#39;s it called
bookshops do books Bookshop books there
okay fine now CDs
watch in memory question mark defensive
variant I never know why that you know
if I do a control D to exit
the exit 130 I don&amp;#39;t
know so now we have things with proper U
IDs okay that&amp;#39;ll do oh by the way oh my
goodness it&amp;#39;s almost time but I just
want to show you this because it&amp;#39;s so
cool right it&amp;#39;s so cool you can generate
the U IDs you know we&amp;#39;re using this
crypto library in nodejs random uid
however when we start to think about
application logic which we&amp;#39;re going to
be right using the CDs libraries check
this out and this is just a little
Glimpse there&amp;#39;s a repple there&amp;#39;s a
reppel command tell me what you think
in oh yeah Vim oh yeah Vim tell me what
you think or what reppel means what it
stands for It&amp;#39;s actually an
acronym
cds. ms. uid check it out I mean how
beautiful is that he could I mean we
could do a whole series on the CDs
reppel and you know the the the fact in
fact Ka Kaa uh K uh no k k cds. utils is
it there there we go look at that oh
first one look at that this is all
within CDs definite no where is it where
are we I don&amp;#39;t know uh anyway yeah there
it is common utility functions let&amp;#39;s put
that in the chat as
well can anybody tell
me can anybody tell me don&amp;#39;t need that
either um where are we can anybody tell
me I can&amp;#39;t even think the question what
the question was what what was I asking
I can&amp;#39;t remember anyway
anyway now if we go and bring back the
test
htps let&amp;#39;s have yeah that&amp;#39;ll do bananas
that&amp;#39;ll do fine let&amp;#39;s just run that send
request and now and notice
here by the way
that the cap server does the right thing
gives us a 2011 created it gives us
remember we looked in the the RFC 2616
earlier in this episode and we saw the
2011 created requesting it basically
says you know it&amp;#39;s good to put in the
location header of the response the
actual URL in fact there&amp;#39;s the clue as
to how to get to that thing look check
it out books it&amp;#39;s relative obviously
it&amp;#39;s relative because it doesn&amp;#39;t start
with the slash so paste that in bang go
straight there bananas back and if I
refresh the entity set we get it there
let&amp;#39;s do two more uh send request send
request right we get we got five right
we got five
uh count equals true we got six in fact
1 2 3 four five six Pine fine now I&amp;#39;m
going to stop the server and I&amp;#39;m going
to restart the server CDs watch what you
think is going to
happen drum roll Bookshop C SQL light
now how many books let&amp;#39;s go back to the
thing here just to make sure there&amp;#39;s
nothing up my sleeve how many books do
you think we&amp;#39;re going to have
they&amp;#39;re all there they&amp;#39;re all persisted
because it&amp;#39;s not in
memory there&amp;#39;s so much stuff so much
stuff I wanted to cover I wanted to in
fact one thing before we go before we go
so we
just if we have let&amp;#39;s say we wanted to
have um country of
birth there&amp;#39;s a
[Music]
CDS type country right country of birth
and but now check out this this check
this out if we have a look in here let&amp;#39;s
get rid of that last thing last thing
last thing come on DJ quick quick quick
country annotate country anate country
country country there look type country
it&amp;#39;s a type but what is the type of this
country type it&amp;#39;s an association so now
if we CDs uh compile to let&amp;#39;s just have
a look services. CDs the last thing
we&amp;#39;ll do right now
is check out all that stuff that we get
oh
my oh my
goodness and we get country of birth
go it&amp;#39;s so exciting we get this managed
association between books and another
entity which is represented by sap
common
countries mind-blowing I to cover that
next time thanks for joining uh have a
great Friday have a great weekend there
so much to discover it&amp;#39;s beautiful
see you next time
bye
e
good morning good afternoon good evening
welcome again to another episode of
hands on SCP Dev with me DJ qro oh I&amp;#39;ve
not turned I&amp;#39;ve not turned the um the
elato key light on wait a minute oh my
goodness me oh there we go ah so I&amp;#39;m so
relaxed at the moment this morning cuz
this weather&amp;#39;s so nice the weather&amp;#39;s the
sun is shining it&amp;#39;s been horrible
weather here uh in the northwest of
England in West Lancashire the past few
days just R and windy the whole time and
now it&amp;#39;s like really sunny I&amp;#39;m getting
some decent ampage coming into my solar
panels uh so it&amp;#39;s all good as I&amp;#39;m
feeling very nice and um off grid and
everything so uh yeah I was just I know
making the coffee and in fact I just I
thought I I have a piece of bread with
some peanut butter as a little treat and
um yeah I I was like oh yeah I&amp;#39;ve got a
process I&amp;#39;m going to turn on the the
fairy lights behind me in fact there&amp;#39;s a
boat just went past before so I opened
the the duck hatch behind me there and
said hello and um I&amp;#39;ve got my key lights
here my Elgato key light which is good
um but yeah I&amp;#39;m sort of you know
disorganized as usual but disorganized
for good reason I think I&amp;#39;ve just
relaxed so welcome one and all welcome
to Lawrence and Alex and vus early birds
so good morning to Lawrence in amfor uh
in the Netherlands and uh Alex says
hello DJ on the decks with his latest
single bound to an entity I like that
yes wees good morning to you in Bangkok
Thailand and also rri I hope you managed
to get your coffee and kaso um in time
for this and everything I hope you enjoy
them AJ good morning to you friend and
colleague over there in India
and Dennis good morning all hello that&amp;#39;s
a little wave isn&amp;#39;t it that&amp;#39;s zero and a
slash and hands Peter HP zit ahy a nice
I see what you did there aoy in Manheim
from Manheim and zahed good morning to
you in Sunny Sully Hull and welcome
kaston Schlagel good morning to you in
stutgart and Kiara bonono to you in
breia amazing so um yeah I&amp;#39;ve been
looking forward to well I always look
forward to these episodes Cu uh it&amp;#39;s
great to chat with you all um and of
course you know what I know I keep
saying you know on all the live streams
you know put something in the chat put
it in the chat put it in the chat put
your thoughts in the chat it&amp;#39;s because
basically I&amp;#39;m talking effectively to the
camera to the wall um and I can see you
on the on the left hand my left hand
side here the chat and everything so the
more chat text appears the more I feel
I&amp;#39;m you know in the same room with you
as it were so uh you know it&amp;#39;s it&amp;#39;s it&amp;#39;s
great it&amp;#39;s great so that&amp;#39;s why I keep
encouraging you to say whatever comes
into your mind
yeah I&amp;#39;ve already drunk half this coffee
it&amp;#39;s my second coffee of the day I was
it quite early this morning anyway DJ
stop rambling because got a lot to get
through um let me switch already uh to
the main scene and the sap developer
news is out uh by the way um let me just
share that thing there I&amp;#39;ve already
started putting in i&amp;#39; just just done it
now 759 a.m. um uh a couple of links
this week&amp;#39;s sap developer news let me
put the link to that thing in there so
everybody&amp;#39;s got a a meta link a link to
the links as it were um so SCP developer
news I record you
know I think a lot of my uh colleagues
do some
awesome uh developing new episodes
recordings at different locations some
do walk and talk some do just you know
outside where they live or whatever or
you know
something oh scream outside um a little
baby screaming um uh
and uh I I thought I&amp;#39;ll sit so I sat on
the toe path um was it was it yesterday
yesterday morning I sat on the tow path
and recorded this thing here um with the
Naro behind me just give people an idea
of uh you know what it&amp;#39;s like outside
out there that chimney there um is a
chimney that belongs to an Old Mill
flower Mill it was right on the canal uh
it&amp;#39;s in burco and um it&amp;#39;s now you know
the the the flower Mill is now has been
converted into apartments and everything
but the chimney remains and the pump
house remains you know from the
Industrial Revolution so that&amp;#39;s where I
am and in fact I thought I&amp;#39;ll show you I
took a picture um last month I think it
was a couple of months ago so it&amp;#39;s not
as a you know I&amp;#39;m not recent this week
but I took a picture standing on the
other side of the canal to where I am
where roughly where that tree is there
and that picture is there so I was
sitting there so this is you know
weather was pretty horrible but that&amp;#39;s
um where I am that&amp;#39;s where I live and
right now I&amp;#39;m behind those uh windows
that duck hatch so that duck catches
that thing behind me so I&amp;#39;m broadcast it
coming to you loud and clear from
hopefully loud and clear from uh there
so that&amp;#39;s that so anyway check the news
out and one of the news item bonono Kaza
bonjo once again grabbing a coffee and
waiting for capaya waiting for capir
exactly alexe hello from Germany in
pador excellent pador yeah is yeah pador
I know pador I used to listen to bfbs
radio and I think they broadcast from
pador pador and good morning to you
Matias in Dortmund p
good morning to you in Poland nice to be
nice to have you
here anyway so uh welcome one and all um
another one of the news items uh is the
fact that uh the June developer
Challenge from Vali is now at an end you
know still time to to do the develop
although I think Vitalia sort of
summarized the participants and
everything and so we&amp;#39;re into July
obviously and we have a July developer
challenge for you and what I thought I
did put a call out on LinkedIn I think
cuz anybody think it&amp;#39;d be a good idea to
go through this and other folks have
contacted me directly and said yeah
let&amp;#39;s have a look let&amp;#39;s have a quick
look at the new developer challenge
because it&amp;#39;s all about cap and it&amp;#39;s all
you know I designed this um or I put
this together let me let me not use the
word design I&amp;#39;ll tell you why in a
minute I put this together um with folks
like you in mind uh good morning to you
helmet in Brunswick in Germany and uh
sus
uh sus uh should I call you s is that
the right pronunciation swis uh swis
good morning to you inuk uh where is
that in
Switzerland where is I shouldn&amp;#39;t know
really shouldn&amp;#39;t I oh my goodness be
Nasim good morning to you in India good
afternoon to you in India I don&amp;#39;t know
what time is it uh five and a half hours
maybe from the UK I don&amp;#39;t know um so
we&amp;#39;re going to have a look at this okay
um let&amp;#39;s have a look at this spend half
an hour on this and then do the rest of
it on
um uh on the uh where we were I&amp;#39;ve got
everything oh terminal bash process ter
kill that where we were I&amp;#39;ve just
committed the stuff there in uh last
week&amp;#39;s episode we had I think yeah
exactly what we we
just finished implementing total stock
which is an Unbound function and then we
Define right at the end of last week we
defined
this stock value didn&amp;#39;t we we put down
we Define the stock
value function as a function but it&amp;#39;s a
bound function and the way we Define it
as a bound function is we add it as a
sort of a a block to this actions clause
on the end of this entity definition so
this stock value function here is
effectively bound to the books entity
and we&amp;#39;ll understand a little bit more
of what that means and how to resolve
in a given call to that function what
particular book entity it relates to
right so we do that and Robin van off
good morning to you in the Netherlands
and tug is near toi in Switzerland ah
yes I thought he was in Switzerland yes
thank you very much SWS uh and good and
uh have I missed anybody oh ol oh ol
says as well is south of Z excellent
excellent but shall we put in the chat
uh what should we do first what should
we do first shall we do the um uh the
total stock first or shall we have a
quick look at the uh the new sap
developer challenge the reverse apis and
by the way you folks are the first to
see this because I just did it about
half an hour ago I think um I&amp;#39;ve just
published the second task task number
one in this developer challenge um some
of you may have not seen this developer
challenge yet the whole idea is that
it&amp;#39;s reverse apis the idea so the whole
idea this developer challenge is sort of
like a reflection of the inverse of a
developer challenge we did last August
on apis where you had to make calls to
API
endpoints um and good morning to you
Daniel I missed the last few sessions
hope I can still of course you can still
follow Daniel and you&amp;#39;re always welcome
and everything and we may be talking
about this development challenge so um
we&amp;#39;d love to get your your thoughts and
insights on um you know the way we can
carry out these tasks here on the devel
challenge
um and uh actually the the inspiration
the idea for last year&amp;#39;s last August
developer Challenge on apis was came
from my son Joseph we a coffee and he
said oh why didn&amp;#39;t you do this I said oh
great idea and then I was over in dorf
with him um after the uh code connect
actually and we were in this really good
co great coffee place called
um uh light roast um in in dorf and uh
we having in a chat and he said why
don&amp;#39;t you do the opposite why don&amp;#39;t you
get get folks to create apis and you as
the person running the developer CH you
will call them and see if they
implemented the apis correctly it&amp;#39;s like
what a brilliant idea so I&amp;#39;ve actually
put down at the bottom here no where is
it
um uh put down at the bottom here uh the
idea for this challenge for my lovely
son Joseph so thank you Joseph um anyway
so the idea is like I like I just said
you over the course of July are going to
have to
create three services
good morning Antonio good morning and
welcome uh three services and within
those three services you&amp;#39;re going to
have to create uh a total of 10 uh end
points so in the first service you&amp;#39;re
got to create three end points in the
second service which is going to be a
rest a plain rest service you&amp;#39;re going
to create a couple of end points and
then um you&amp;#39;re going to basically also
create a North Breeze service very much
like the north Breeze service that we
had in August&amp;#39;s challenge last year
you&amp;#39;re going to implement it and then
you&amp;#39;re going to implement various end
points some are just entity projections
some uh there&amp;#39;s one that is as select
type projection there&amp;#39;s a a bound action
there&amp;#39;s an Unbound act function there&amp;#39;s
a bound function all sorts of different
things and you&amp;#39;ve got to you got to
implement them basically um so that&amp;#39;s
what this is all about uh so nobody&amp;#39;s
put in the chat yet what we should do
first so while I&amp;#39;m talking about this I
might as well just sort of talk through
for the next 10 10 minutes uh I think
some some folks have already started so
yeah generally let&amp;#39;s let&amp;#39;s have a look
through this here we go look here we go
um so the whole idea is that um there&amp;#39;s
a tester service in the cloud so uh test
server uh uh wow in fact let&amp;#39;s go here
let&amp;#39;s go to the um it&amp;#39;s quite a every
time I edit this you get white spaces
added and you can&amp;#39;t get rid of them um
easily uh so there we go tester service
there we go there&amp;#39;s a tester service let
open that in a new tab
and in fact if I go there up here on sap
uh BCP The Foundry environment I&amp;#39;ve got
this little cap server
running and it has a single service
tester and if we look at the metadata of
the tester yes it&amp;#39;s got an entity type
and it&amp;#39;s got an entity set there but
we&amp;#39;re not really interested in that
let&amp;#39;s get rid of the annotations as well
we&amp;#39;re not interested in the annotations
um uh there it&amp;#39;s basically you
know uh some are um some are annotations
because of the um common uh cuid and
managed uh aspects that I&amp;#39;ve used for
that particular entity definition and
others are because I&amp;#39;ve actually made
that entity read only the key thing is
let me make that bigger the key thing is
it&amp;#39;s got It&amp;#39;s got an Unbound action and
the Unbound action is called test server
so the whole idea is that when you
follow the
instructions let me put that over there
yeah let me put that there for example
and then just scroll up a bit there we
go when you put the um when you follow
the instructions you&amp;#39;ll be creating
services and in those Services you&amp;#39;ll be
creating API endpoints and the whole
idea is then that you say okay I&amp;#39;m ready
with my API endpoint I would now like to
see if I implemented it correctly and
therefore I&amp;#39;m going to make a call here
we go let&amp;#39;s just um uh make a call uh
that&amp;#39;s going too fast actually um make a
I tell you what I&amp;#39;ll do I&amp;#39;ll show
you scratch this is my thing where I
create all these stupid things for um
for links in and everything but down
here I think I I did the there we go yes
there we go all of that gif here in
workings of DJ&amp;#39;s brain let me put on the
other side um it&amp;#39;s just it&amp;#39;s just like
an animated gift for these things here
right so basically once you&amp;#39;ve defined
your service
here and you implemented or you defined
an endpoint and you&amp;#39;ve implemented that
endpoint then you make a request let&amp;#39;s
put full screen then you make a request
please test this endpoint and you make a
request to the test service right which
is um a a call to this test server
action
right and that test service then makes a
call
to the end point that you&amp;#39;ve told it
about that you&amp;#39;re ready with and then it
will return whether you know whether
that call has been successful or not
good morning Rafal to you in Poland so
that&amp;#39;s that okay so that&amp;#39;s um what it&amp;#39;s
all about let me move that back across
there as well right so all you got all
the details here the link is in the um
uh the link to this blog post is in the
this this week&amp;#39;s episode here um and
then we&amp;#39;ve we&amp;#39;ve started out with a
challenge overview the services so
you&amp;#39;re going to be doing an Unbound
function with no parameters Unbound
function with parameters action with
data bound action so what we&amp;#39;re doing on
this Back to Basics at the moment is
exactly sort of in line with you know
giving you help as to or knowledge about
what you&amp;#39;re going to have to implement
there so I see a question from zahed uh
is there any sizing guide available to
calculate the resources required on btp
for a cap application
I
think I have a feeling there is there is
a sizing guide I mean I would be just
Googling it as much as you would be
zahed
um uh oh uh I&amp;#39;m sorry I&amp;#39;ve just seen
your VES comment there um so I&amp;#39;m I&amp;#39;m not
sure I think there are sizing guides I
would encourage you to um let&amp;#39;s have a
look uh site help.sap.com uh sizing
btp uh sizing guide there we go sizing
guide so there we go the power of Google
uh let me put that in the um in here uh
just as answer to your edit there we go
there we go uh
so to Z&amp;#39;s
question um sizing guide in btp for
btp
there there we go look at that
fantastic um so yav I hope that answers
your question go and have a look at that
and see what see if that helps zahed um
yav says good morning from YouTube
mobile the chat option is not displayed
in web app weird um when I go on the
YouTube um mobile on my phone I get I
can get the I can see the chat there
sometimes I actually watch the
chat in this live stream by looking at
the YouTube mobile app um so you you say
web app so maybe maybe you need to use
the actual you know the Android or iOS
app rather than the native web thing um
so I&amp;#39;m not sure you have us uh sashan um
good morning to you San and visas I
still remember we had lots of fun and
learned a lot from the last year&amp;#39;s API
developer chance thank you Visa thank
you for remembering and thank you for
having fun as well unless it do know
sadly I didn&amp;#39;t participate in any sap
developer challenge this year because I
haven&amp;#39;t be very bus project that&amp;#39;s okay
that&amp;#39;s okay we can&amp;#39;t all do everything
we can&amp;#39;t all do everything Benjamin
Benjamin Ben benjam Benjamin Ben in fact
I was think I&amp;#39;ll tell you I was thinking
you yesterday in Tesco actually Ben
hello cap Pirates fantastic yes thank
you for remembering the amazing phrase
that we came up with you last week so
yes I got some uh I got some of those
lengers and uh I have one today who was
quite good and yeah I feel better thank
you uh so Hussein good morning to you
Hussein okay so um that is that and one
of the things that some people stumble
on some beginners stumble on which is
completely
understandable is how to make my cap
service easily available to the
interwebs to in the cloud and so we got
this simple deployment here to btp um
and and because because it&amp;#39;s me I did it
as a
oneliner um and um so I think we should
just go through this just so you&amp;#39;ve got
at least a starter to start working
on um uh the the task that I&amp;#39;ve just
released today so task zero if you look
at task zero here let&amp;#39;s go to task zero
the whole idea is that you go back to
this blog post every day or whatever and
say oh yeah is there a new task yes oh
there&amp;#39;s task zero there&amp;#39;s task one I&amp;#39;ve
just added this this uh section and Link
and the next task I&amp;#39;m going to publish
on Tuesday um but if we go to task zero
this is all about getting a server up
and running okay um so blah blah blah
blah blah um so go and it says basically
go and follow either the simple
deployment to btp approach or the local
deployment plus nro tunnel in fact
here&amp;#39;s something I&amp;#39;m going to ask you to
put in the chat we&amp;#39;ll do this but shall
we do the local deployment uh using enro
or shall we do the simple deployment to
btp right now on this uh live stream
episode and we&amp;#39;ll do that and then we&amp;#39;ll
switch over to looking uh continuing to
look at the um stock value bound uh
bound function so let me know good good
morning to you in Slovakia slim good
morning so yeah let me know put in the
chat either simple deployment to btp or
local deployment plus enro which one
shall we do it&amp;#39;s like one of those um
it&amp;#39;s like one of those uh adventure
books where you know you read it and
then you decide where to go next what
are they called BCP uh Alex simple BCP
but whatever the team prefers thank you
Alex and thank you Hussein okay Hussein
thank you Hussein for um making a
decision that&amp;#39;s brilliant and putting in
the chat that&amp;#39;s what we like so let&amp;#39;s do
btp so Kiara says can we do local tell
you what why don&amp;#39;t we do both why do we
do both yes why do we do both okay so
the whole
idea is that you want to start you want
to have a basis let me go into
here and here we go let&amp;#39;s go ah here
yeah yeah okay let&amp;#39;s go into temp let&amp;#39;s
do it in temp this is actually the the
repo I&amp;#39;m using for in fact I&amp;#39;ll show you
uh this is the repo that&amp;#39;s got the
candidate that I&amp;#39;ve written to with all
10 API end points in all three tasks um
i&amp;#39; been I&amp;#39;ve been using containers for
this for testing and everything locally
um I&amp;#39;ve got the tester service which is
the thing that&amp;#39;s in the cloud right now
that I showed you um and I&amp;#39;ve also got
the tasks and I I edit the tasks in
markdown because markdown and you know
it&amp;#39;s a lot easier to create than writing
on the um on the thing here um so that&amp;#39;s
that but let&amp;#39;s go into temp okay
um so uh this the okay so the whole idea
is that you in order to have the tester
reach your server and your service
implementation and specifically the
given endpoint for the given task in
that service implementation of course
it&amp;#39;s got to be on to the on the
interwebs so simple deployment to btp so
these are just links back to certain
sections in the blog post that letter us
here simple deployment to btp so that&amp;#39;ll
take us here okay now let&amp;#39;s let&amp;#39;s just
copy this and run it and then let&amp;#39;s just
talk about it before we run it okay so
what in fact let&amp;#39;s just let&amp;#39;s just walk
through it here in color so we can see
uh we don&amp;#39;t need that anymore anyway so
we can see what&amp;#39;s going on we&amp;#39;re going
to do a CDs in it we do CDs in it all
the time initialize a cap project and
we&amp;#39;re going to add the tiny sample just
so we&amp;#39;ve got a tiny bit of
data to serve just to you know just to
do something to be able to kick the
tires going to call give it a name now
some folks have have used this name uh
use your own name use your own name just
make something up
um so you know qro me Etc and then we&amp;#39;re
going to move into that directory so we
initialize the project which creates a
directory and then we&amp;#39;re going to CD
into that directory that dollar
underscore if you&amp;#39;re using a proper
shell like bash or Zell even I think um
that refers to the last argument of the
previous command Okay so it&amp;#39;ll do a CD
into Q macro simplist deployment and and
then we&amp;#39;re going to do some JQ just to
add some CDs configuration to the
package Jon look it&amp;#39;s package Jason down
here um so that we can just deploy
without thinking about productionizing
it we don&amp;#39;t need to productionize this
this cap server that we&amp;#39;re going to be
running it&amp;#39;s just a test server that we
want to stand up some API end points in
a service and then have that be tested
and then you know tear it down again if
we want to this whole idea is of course
when you when you modify a file in light
you modify the file modify the package
Json and write it to a temporary file
and then if that&amp;#39;s successful and and
then move the temporary file and re
rename it to package Json basically
modifying package Json sort of in
place the last thing we do before we um
try to push it to the cloud is to add
the SQL light npm package because the
whole idea is that we don&amp;#39;t want to use
any persistence layer we don&amp;#39;t want to
use a backing service because you know
we want the simplest thing that could
possibly work um and then we&amp;#39;re going to
push it with CF push and again you don&amp;#39;t
have to use a m multi-target application
incantation mta. yaml all that stuff
which is very important when you&amp;#39;re
doing real life stuff but this is simp
the simplest thing that could possibly
work so we&amp;#39;re just doing a CF push okay
and all you have to do with a CF push is
give it the name that the application
should be called on btp on cloud Foundry
and for though I in fact i&amp;#39; put there
yeah I put I&amp;#39;m using by the way by the
way
um blogging in um in our new sap
Community
platform I like to use sort of a
monospaced font for things like this you
know so dollar you know uh sorry open
double quotes dollar bracket base name
blah blah blah blah blah but you it
doesn&amp;#39;t allow you to make it monospaced
so I&amp;#39;m just using Mark what I would do
in markdown raw markdown with the B
ticks so mentally when I see the
backticks like that mentally I see that
in monospaced font so I&amp;#39;m hoping you do
to put in the chat if that&amp;#39;s how also
because you know markdown is very easy
to read in raw form um uh CD there VI
tasks uh1 there so I&amp;#39;m reading that and
you know that&amp;#39;s just like fine you know
there we go look backspace backspace
backspace backspace these these will
come out properly formatted when they&amp;#39;re
properly s rendered um like in fact like
this uh I
347 um in a work in work workings
again uh there and um repositories where
is it developer challenge 20247 tasks uh
there look how nicely that&amp;#39;s rendered
there that&amp;#39;s that&amp;#39;s what I want and
that&amp;#39;s what I see in my brain okay
anyway right so let&amp;#39;s copy that we
copied that haven&amp;#39;t we copy that again
just make sure
um there we go let&amp;#39;s go into Temp and
let&amp;#39;s just run the whole thing in fact
before we do that um CF are we logged in
CF F applications let&amp;#39;s just have a look
what applications are running that&amp;#39;s so
by the way um let&amp;#39;s just show you what
I&amp;#39;ve got in my uh btp trial account
right now good morning good evening to
you Andrew barard in melbour Australia
hope you got your glass of wine with you
there&amp;#39;s my free tier thing there let&amp;#39;s
have a look let&amp;#39;s have a look using you
know using a gooey because you know
because it&amp;#39;s Friday uh and so we know
we&amp;#39;re not doing things properly um so
I&amp;#39;ve got this tester service which is
the actual tester service I&amp;#39;ve got a
route going to that there we go look at
that there&amp;#39;s a route uh so we can
develop a challenge 20247 so we can go
there look tester service that goes to
the tester Service uh so that&amp;#39;s the
thing that&amp;#39;s running our thing that&amp;#39;s
not very descriptive DJ um so let&amp;#39;s yeah
let&amp;#39;s do that so that&amp;#39;s that&amp;#39;s what I&amp;#39;ve
got at the moment uh where are the
applications I&amp;#39;ve got a developer
challenge Q test don&amp;#39;t know Li is um and
there we go okay fine so I&amp;#39;m already
logged in so I can do a CF push right
see I push and what we&amp;#39;ll do here oh no
we don&amp;#39;t do that what&amp;#39;s going on it&amp;#39;s
pushing nothing um developer challenge
tester why is it doing that
H interesting why is it picked develop
oh have I got something in there okay so
um oh anyway CF push what I wanted to do
is get it to show us the help okay so if
we have a look at that we can see all we
need is is CF push app name okay that&amp;#39;s
the name of the app and that is
basically
what this thing is doing here so let&amp;#39;s
run it and see what happens in fact no
let&amp;#39;s run it one one thing at a time
let&amp;#39;s do it one thing at a time so we
can see what&amp;#39;s happening step by step
can you sound St making this as I go
along Okay so we&amp;#39;ve initialized a new
project let&amp;#39;s go into that project Q
macro in fact we do that right dollar
underscore go into there Q macro
simplist deployment um and if we have a
look at that we get all the standard
stuff we get beautifully given to for
free by the cap init um
command uh we get app folder directory
nothing in there DB we got a nice little
data model with some books right
Bookshop books we got the service just
exposing that books thing there all the
normal stuff that we know right um and
we get this package Json which is pretty
much devoid of any specific CDs
configuration I.E any
configuration in the in the in the CDs
sort of node here uh node that&amp;#39;s a
overloaded word to use don&amp;#39;t use the
word node DJ in this context in the CDs
section of this Json okay so the next
thing we do is we&amp;#39;ll do this JQ as just
do that there temp file by the way if
you&amp;#39;re wondering this backslash here put
in the chat what you think that
backslash is actually doing okay what is
it actually
doing um so let&amp;#39;s just copy that and run
that so watch this now um in fact let&amp;#39;s
do that
watch uh JQ package Json is that make it
a little bit smaller all right
uh in fact watch use the uh control
characters JQ sorry use the control
characters and then say JQ and then X
spit out the control characters
regardless of what context you&amp;#39;re
running in there we go that&amp;#39;s better got
color color now uh continue line exactly
Matas it&amp;#39;s continue line but what
exactly this is this is the Nuance I&amp;#39;m
looking
for what is the backslash actually doing
it allows us to continue line but what
does the backslash actually do why is it
a backslash why do we need to use a
backslash okay there&amp;#39;s nothing to do
with cap I think it&amp;#39;s interesting so
let&amp;#39;s do that bang and then say move um
temp file package
Json Bang there that&amp;#39;s it that&amp;#39;s what we
get so we we basically add
these things we have CDs features in
memory
DB so it will force the cap server to
continue using the colon memory colon
SQL light thing here in the credentials
and we also add in the requires DB kind
SQL light credentials database memory
and it also adds the or mocked to say
basically we just want to have this
mocked explicitly asking for
mocked okay so that&amp;#39;s what that&amp;#39;s all we
need and then we can push this and
because when you do a CF push in a node
context right um Andrew Well Done Andrew
Andrew is on it like a carb on it as
usual Andrew says backlash so that the
CR LF uh nicely nicely on the fence
there brilliant uh is ignored exactly it
actually escapes the new line okay so in
a in a proper shell you know the new
line character is a new line uh not crlf
it&amp;#39;s a long history of why CR in Windows
um it was CR on one one type of system
it was LF on another Windows CRF anyway
it&amp;#39;s an amazing story uh you know if
you&amp;#39;re boring nerd like me uh read it
find out but basically it escapes a
backass escapes things in bash and in
various other shells so it escapes the
new line which is the next character
okay anyway um a story for another time
exactly um so now if we do what what&amp;#39;s
the next thing we do um this is actually
going going uh taking longer than I I
expected mpm ad there we go mpm ad uh
I&amp;#39;m just we&amp;#39;ll just add SQL light as
well okay so Visa says for anyone who
has Legacy P account before we have the
universal ID I found that recently I had
to change the Legacy password to do the
same as universal ID to be yes exactly
the universal ID um has tripped me up
quite a bit as well uh so that&amp;#39;s a good
tip there from visas yes you have to you
have to change the password for some
Legacy um cloud found
accounts or accounts on B2B in general
exactly well on Visas so now we&amp;#39;ve got
everything we can actually do a CDS
watch right let just do a CS watch I
don&amp;#39;t think I&amp;#39;m running anything else on
40004 there we go there 40004 and we get
that in fact we go there and um it&amp;#39;s
actually the for reasons for reasons for
container Reasons I&amp;#39;m mapping 404 to
4444 um because this this is all running
inside a container right so so that&amp;#39;s
what we&amp;#39;ve got now all we&amp;#39;re going to do
is this thing here right uh CF push in
fact let&amp;#39;s do this first right what is
that um Echo
that okay that&amp;#39;s that&amp;#39;s the same as
saying you know base name
PWD dollar PW is an environment variable
sorry dollar
echo echo doll P PWD is an environment
variable that&amp;#39;s available to you and it
has as its value the name of the current
working directory right in fact I
did
PWD yes there we go the Myriad meanings
of PWD in Unix systems I did I did uh
like this long boring well it wasn&amp;#39;t
boring to me uh investigation as to what
PWD actually means stands for what do
you think the p and dollar PWD stands
for I&amp;#39;ll put that in the thing because
if you&amp;#39;re bored and you can&amp;#39;t you can&amp;#39;t
get to sleep you can read that because I
think it&amp;#39;s quite interesting um what&amp;#39;s
it called the Myriad the Myriad meanings
of PWD in Unix systems DJ what are you
doing get on with
it okay there
post um okay so we can just
say um there CF push
um ah so PW is that if we say if we take
the base name right base
name uh
d-el that will give us basically the
name with any leading directory
components removed so the base name of
dollar
PWD is just the last bit this bit okay
so that could be the name of our app
right so we say CF push I put it there
uh CF push
uh there there there okay so let&amp;#39;s push
that okay so print working directory
exactly exactly exactly um okay so let&amp;#39;s
push
this where we where we there we go push
that now while we&amp;#39;re waiting let&amp;#39;s also
do let&amp;#39;s also do this one because kiar
was saying let&amp;#39;s do the local okay so
for those of you who are not
aware um for those of you are not aware
where there&amp;#39;s an amazing tool that I&amp;#39;ve
been using for years called enro your
apps front door okay so enrock you know
you can you have to sign up but it&amp;#39;s
free okay and you get like a an
authentication token uh let me log in to
see what&amp;#39;s going on why am I not looked
in before I don&amp;#39;t know
um uh come on and while we&amp;#39;re waiting
here let&amp;#39;s say
enro so we got this so we can create
tunnels okay we can say create a tunnel
to the interweb
and expose or provision through that
tunnel with the HTTP protocol Port 80
for example so you can expose a local
web server for example you know and
that&amp;#39;s what we&amp;#39;re going to be doing so
HPS says why is Cap JS sqlite still only
a Dev dependency that&amp;#39;s a good question
actually
um where are we on here um where are we
uh
two there let&amp;#39;s have a look uh package
Json
edit step dependency SQL light um
that&amp;#39;s a good question maybe I should ah
maybe I should have done Capt JS SQL
light
ah I&amp;#39;ll change that HP I&amp;#39;ll change that
yes brilliant thank you for pointing
that out yes definitely okay so um where
are we here so I&amp;#39;m logged in um I&amp;#39;ve got
my I&amp;#39;ve got my thing here and so we need
an or token I&amp;#39;ve already got the or
token I think so I can now say okay it&amp;#39;s
running okay it&amp;#39;s running okay we&amp;#39;ll do
that now so now we can go here cacro
simplest deployment CF
apps and it&amp;#39;s available okay is it going
to be available to you as well let&amp;#39;s try
let&amp;#39;s see if we can put that in there uh
https try that see if you can see it
okay now at the same time will also okay
let&amp;#39;s just do that there uh let&amp;#39;s get
rid of uh yeah there we go um CF no CDs
watch so we&amp;#39;ll run that locally as well
okay so we got that running here on
local 4444 ignore the fact that it&amp;#39;s
4444 it&amp;#39;s
404
um fantastic thank you for confirming
Kaz is it works so that means the
tester will also be able to reach it
okay so we&amp;#39;ll actually do that in a
minute um so simpl as deployment there
we go so it&amp;#39;s also available there but
now going to Kiara&amp;#39;s request which is a
great request um
to go over here and say enro I&amp;#39;ve
already um or or config we I put my or
token in there already so I can say
enro start an
HTP um tunnel on exposing locally 404
and expose it on the internet so there
we go there now look at that look how
easy that was so also let put my head oh
it is at the bottom look how so we can
now go
here and get to the same place you try
that as well uh let me put that in there
let me put that in there try that and
that should be exactly the same the only
difference is of course is if you hit
the enro tunnel uh
provisioned URL you are coming down to
this local conent in fact somebody make
a call uh oh somebody&amp;#39;s gone to the fury
thing you can see here uh look at that
that&amp;#39;s that&amp;#39;s ulot here let me put my
head at the top again that&amp;#39;s OT here
actually making calls Fury preview
you&amp;#39;re all like Fury previews don&amp;#39;t you
you&amp;#39;re really hammering my little
container right now look at
that yeah so those are two look at that
post read books count etc etc so people
are um making my MacBook Pro no MacBook
Air go a little bit warm because you&amp;#39;re
um doing all these requests here
fantastic amazing okay so you can see
you&amp;#39;re calling the thing you&amp;#39;re making
the calls to the enrock exposed uh
tunnel to 404 which is this local server
here on CDs watch and you can see that
you can see the calls coming in Alex
denial of service attack okay anyway
yeah so let&amp;#39;s do um so that there we go
you can see that satisfying so why why
do you need why do you need this why do
you need something like this because
let&amp;#39;s just kill that
enrock um and uh also just um kill that
one as well why do we need that because
then you can start time is it 8:39 you
can start
implementing then you have everything
you need basically to start implementing
your first service and first endpoint so
this task one was only published this
morning um casseri good morning sorry
casy good morning Casey Casey is IT
Casey or casy Casey I&amp;#39;ll say Casey uh
good morning to you and welcome and
thank you for making comments brilliant
um so this task came out this morning uh
I published it at 657
7 o&amp;#39;clock 8 o&amp;#39;clock an hour and a half
ago y um and uh this basically is you&amp;#39;re
going to need to create a very simple
ping service okay now oh there a boat
going past um a very simple ping service
and the the description here is that you
have to implement a ping Service as an
Unbound function in a service uh P yeah
there an Unbound function an API Point
that&amp;#39;s that&amp;#39;s defined as an Unbound
function and you got to have a little
bit of JavaScript to implement that and
it&amp;#39;s got to return a static value pong
okay and that&amp;#39;s it and then when you
once you&amp;#39;ve done that and we&amp;#39;ll do that
now because because why not let&amp;#39;s say
let&amp;#39;s pretend I Let&amp;#39;s Pretend here CDs
watch uh in fact no let&amp;#39;s not do the CDs
watch because we&amp;#39;ve got that here
haven&amp;#39;t we we&amp;#39;ve got this one uh not
Local Host that one so let&amp;#39;s say we
had um let&amp;#39;s say we thought we&amp;#39;d
implemented the the Ping service
for our first chap task number one okay
creating your first service ping you
want to do a ping service right and the
Ping service has got to got to have a
you know a metadata that looks like that
we go look uh entity container name
entity container function import ping
right ping is bound false Unbound
function called ping right and it should
return a string okay that simple but you
there&amp;#39;s a lot of thinking about this so
This Is Why I&amp;#39;m keeping this first one
simple let&amp;#39;s say here I thought oh yeah
I&amp;#39;ve got my ping ready of course there&amp;#39;s
there is no ping in this metadata at all
but let&amp;#39;s just see what happens so I
would say and this is also in this
description here in in this thing here
submitting your API endpoint to the
tester you got everything described so
what I&amp;#39;ll do is I&amp;#39;ll say in fact I&amp;#39;ve
got a curl example here there we go look
at that let&amp;#39;s do
that and then say um there uh let&amp;#39;s edit
it in there right so you send a request
cacro service URL what&amp;#39;s the service URL
um uh that thing there and the service
URL right it&amp;#39;s not the server URL it&amp;#39;s
the service URL so it&amp;#39;s a catalog that&amp;#39;s
the service URL right in the description
here it
says um you need to create a
service name basic okay so we don&amp;#39;t want
it SL oata V4 basic we want it SL basic
but any okay so let&amp;#39;s put SL basic in
there right so let&amp;#39;s do that and say uh
let&amp;#39;s let&amp;#39;s say oh yeah there we go and
it&amp;#39;s slash
basic okay and the task
is it says it here somewhere basic ping
yeah the task identifier you need to
supply in the payload of your submission
is basic ping right that basic ping and
then you send the the content header
because of course she just applying Json
and then you send it to that okay are
you ready are we ready okay let&amp;#39;s let&amp;#39;s
add of aose flag as well to see what&amp;#39;s
going on okay um so this will fail okay
because there
isn&amp;#39;t if we go there actually go over
there the browser cannot get SL basic I
we haven&amp;#39;t implemented a service at SL
basic yet okay but let&amp;#39;s do that let&amp;#39;s
run
that Bang
and what you get in response is error
code 500 message error calling service
endpoint okay so you get an error which
is fine okay and in fact CDs
logs um CDs what&amp;#39;s it called uh CDs
applications I can show you the oh sorry
CF applications I can show you behind
the scenes um here so CF logs recent
tester serve so we should be able to see
the log of that there we go look at that
there&amp;#39;s the log of
the thing here we go uh 24 05 0743 it&amp;#39;s
0843 right now it was 8 this is this is
this is UTC U blah blah blah um in fact
if we have a look here um what do we
call it what was the thing um oh Q macro
simplest right let&amp;#39;s let&amp;#39;s look&amp;#39;s look
for this simplest deployment in the
log there it is look get URL method get
URL simple displ SL basic so there&amp;#39;s our
call so that&amp;#39;s what you need to do
basically you need to do that but
obviously when you need to do that you
also need to
implement well Define first of all where
do it say here Define first of
all um in ah see this is this is why I
don&amp;#39;t like this rendering because let&amp;#39;s
just look at it in the tasks 01 there we
go that&amp;#39;s better um this is where you
need to Define in
where is it uh in a file called maybe
basic. CDs and have an implementation in
basic. JS for your implementation your
ping function that returns pong okay
does that make sense put in the chat
whether it makes sense or not um let me
know let me know let me know okay 8:45
let&amp;#39;s spend the last 15 minutes just
switching brains for a second put in the
chat whether that makes sense put in the
chat whether you&amp;#39;re going to start this
um developer challenge whether you think
it&amp;#39;s okay uh if you got any questions
um and then we&amp;#39;ll carry on uh what&amp;#39;s
going on yes there we go fine okay so
let&amp;#39;s now go and switch for a second
let&amp;#39;s give ourselves a few seconds pause
switch our brains over to just carrying
on with this
thing okay um yeah put in the chat if
you&amp;#39;re going to be doing this developer
challenge I think I&amp;#39;m I&amp;#39;m hoping some of
you will be doing the developer
challenge um and if not why not uh is
there any reason why you don&amp;#39;t want to
do it uh is it not very good if you
don&amp;#39;t like it let me know as well always
learn always looking to
learn okay so where are we okay let&amp;#39;s
move to this function stock value this
stock value as we&amp;#39;ve said is bound
function Andrew
Barnard says um reminds me of your cap
head response investigation of a few
weeks
back oh yeah uh I got vague memories of
of that uh my memory is not what it used
to be
uh but I&amp;#39;m sure I&amp;#39;m sure we have fun
digging into things because it&amp;#39;s always
interesting to find out what why when
who where what what is going on here
type thing so Matia says I hope I found
the time thank you Mattias and AP indust
says yes definitely interesting
brilliant thank
you okay now in order to one of the one
of the interesting things about let&amp;#39;s
just start this run CDs watch we don&amp;#39;t
move that there uh in order in order to
fulfill or implement the Handler for
this stock value bound
function and fulfill requests i e by
providing responses
to this bound
function what do we
need that we didn&amp;#39;t need when we were
doing the total stock Unbound function
the Unbound let&amp;#39;s do it now let&amp;#39;s do it
now let&amp;#39;s do that and say
curl uh Local Host
404 what is it o data V4
Bookshop um total
stock let&amp;#39;s put in
um okay we got we got
147 and the actual implementation of
total stock
which is this thing here is super simple
where&amp;#39;s my head put it down there super
simple right we just go right I don&amp;#39;t
care what
parameters sorry the right term DJ I
don&amp;#39;t care what
arguments are sent to me to this
Anonymous
function which is which I&amp;#39;ve defined
here as the as the Handler the callback
for the total stock event
I&amp;#39;m just going to go ahead and just do
select one from books column Su stock as
token bang and spit out the result which
is
147 what do we
need when we start to think about which
is now implementing this stock value
what do we need that we&amp;#39;ve not had to
need had to have here put in the chat
what you think it is so uh yok Yos says
can we somehow call the system command
function ping um
simple answer no this is not that sort
of ping I mean I think I don&amp;#39;t think
I&amp;#39;ve even got ping in my
uh
ping uh oh ping uh Local Host there we
go that ping there look at that it&amp;#39;s
using um IPv6 that&amp;#39;s proba cool ping
qac.org my ping times are pretty bad
here obiously but you know 36 30
milliseconds that&amp;#39;s fine
um so basically oh you can see where my
uh where my web blog is hosted GitHub
static Pages there we go excellent um I
mean it&amp;#39;s a similar sort of thing as in
you know send a little boing and get a
boing back that&amp;#39;s the idea but of course
to implement it you need to implement it
in in node.js as as an implementation to
a a definition of a bound function an
Unbound function in CDs in CDL right so
um K is that okay Yos I hope that
explains the gives you an answer there
kiar says I Tred to find some time well
done Kiara Kaza family out all alone
during the weekend I&amp;#39;ll sure dive into
it good work Kaza Ideal Time Visa says
definitely we are here to learn things
that is the attitude I love thank you
Visa yes Alex pass the bound entity as
an argument fantastic Alex so thank you
for um diving in with a response there
to the question which is a great
response pass the bound entity as an
argument exactly that&amp;#39;s what we need
here
so why don&amp;#39;t we first of
all um I&amp;#39;ll tell you what no let&amp;#39;s let&amp;#39;s
do this let&amp;#39;s get rid of that that that
that that that that let&amp;#39;s do what we
should do really which is to rtfm first
of all cap let&amp;#39;s go to the cap cap
documentation and
cookbook providing
services there actions and function and
you had seen this right cookbook
providing Services actions and functions
let&amp;#39;s just save that in the thing here
because I think that let me just double
check in addition to com CR actions and
functions bound Unbound BL yeah there we
go perfect perfect perfect um let&amp;#39;s add
this one this is probably the most
important URL you&amp;#39;ll have in this list
today um providing
Services cap capir cook book providing
Services actions and
functions there that that&amp;#39;s how that
okay
now uh where was it where&amp;#39;s it gone oh
there
so you can Define actions and functions
in CDs models like this so sue okay fine
bound actions and functions so we got
this ENT got this beautiful sort of
expression here entity something some
definition then they&amp;#39;ve got this actions
Clause with a block there in that block
you&amp;#39;ve got your actions and functions
defined now bear in mind and maybe
Daniel will have something to say to
this as well Daniel S um regardless of
whether the protocol you eventually
choose to use to have this service
served regardless of whether that is an
OD dat protocol or not you might want to
for example say use
graphql or you might want to use you
know the plane rest service with at
protocol called Rest by the way clue
that&amp;#39;s going to be one of the services
you define in the developer challenge uh
this month um you still Define your sort
of RPC style
functions and end points like like this
with the words functions and actions
even though to me to my small brain
functions and actions
those
two types of things are sort of OD data
terms but you know you can think of them
as a more General type thing so Alex
says oh by the way uh meanwhile is there
a way to not have hardcoded string
Methods names to the handlers to avoid
typos um to the
handlers H Oh you mean do you
mean
here are you if you&amp;#39;re meaning the this
total stock thing you could certainly
put that in a constant absolutely I mean
the thing is is that what you mean maybe
that I don&amp;#39;t know what whether that&amp;#39;s
what you mean but if if that is what you
mean I think yeah you certainly could
Let&amp;#39;s Do It Let&amp;#39;s Do It um let say um uh
yes const um total stock equals total
stock I don&amp;#39;t I feel quite trendy when I
use the btics as a string thing anyway
total stock uh and then we well
here we do that
in fact let&amp;#39;s save
that and go here yeah it still works I I
guess the thing is if you were wanting
or needing to implement
multiple um events for example if it was
a read event for something you wanted to
do a before and on and an after then
yeah it makes sense that if this is
repeated but quite often I would argue
that you&amp;#39;re only going to get that thing
once but perfectly possible it&amp;#39;s just a
string at the end of the day right we&amp;#39;ll
leave it in there we&amp;#39;ll leave it like
that okay that&amp;#39;s okay for you Alex um so
where were we don&amp;#39;t know where we oh yes
there we go yeah so we got that now now
now now function get stock returns
integer so this is the sort of the
pattern that we want to follow and if we
go down here we can see in general
Implement actions or functions like that
this get this do on get stock of fu
that&amp;#39;s the entity to which it refers
right okay you&amp;#39;re welcome Alex and then
this this weird thing here does anybody
is anybody scratching their head over
all those brackets we have covered
destructuring before but we haven&amp;#39;t
covered a
destructuring
expression as involved I don&amp;#39;t want to
say it&amp;#39;s as complicated but as involved
as that 855
maybe will&amp;#39;ll look look at that now we
got five minutes DJ stop talking about
stop doing things meta so that&amp;#39;s that&amp;#39;s
the sort of idea we want so let&amp;#39;s just
let&amp;#39;s just paste that in as a reference
and start typing it right
so there we want to do something like
that so this do on touch list what the
hell this dot
on um what&amp;#39;s it called stock value on
books right so we we have this thing
here so um somewhere
there look uh on before
after adding event handlers there
look that&amp;#39;s it let&amp;#39;s add that as well
right
method so we know where we&amp;#39;ve gone
because it&amp;#39;s pretty
important edit there edit come on come
on come on cap that that and let&amp;#39;s add
that thing there so you know what I&amp;#39;m
referring to save that post
there go back now
look you always have the
event you always have the Handler but
sometimes you have the entity and
sometimes you don&amp;#39;t that&amp;#39;s this question
mark right in this sort of you know
Declaration of this
thing
in the Unbound function definition we
just
had the
event
and the Handler but this time in here
this stop on we want the
event we want
the entity and we want the Handler right
so we want the Handler as well so we
want to say here books oops
books and then let&amp;#39;s just put the
simplest thing that could possibly work
bang on
42 like we did last time
okay let&amp;#39;s have something at least that
is now in fact yeah uh so nobody said
anything about this um where is it this
uh this structure
here so maybe we we&amp;#39;ll do this next
week let me know what you think that is
doing right let me know in fact more
more importantly let me know if you want
us to
unpick all those brackets together
slowly maybe in a node J reel to to
understand what&amp;#39;s going on U because I
think it&amp;#39;s important because
this I would say that in a in the best
possible
way a lot of the examples here are
beautifully succinct beautifully
compact okay almost like the opposite of
java did I say that out loud um yes I
did uh and it&amp;#39;s absolutely wonderful but
you you need to feel comfortable with it
okay so let&amp;#39;s have a look at that maybe
next week but before we do let&amp;#39;s uh run
to ah well yeah let&amp;#39;s let&amp;#39;s think about
how we request stock value if we do this
stock value what do what we&amp;#39;re going to
get stock value is not an entity set a
single an action UT or a function import
what are you doing DJ it&amp;#39;s not any of
those where&amp;#39;s my head put it on the top
right let&amp;#39;s do that again let&amp;#39;s do this
in fact let&amp;#39;s do U Bookshop books if we
do that first of all we get all the
books and then if we say here um let&amp;#39;s
let&amp;#39;s choose a book right with the guid
because of course we&amp;#39;ve got guids as
keys
there uh let&amp;#39;s do that and pipe that
into JQ so we can see so now we can do
this right we can say stock
value that&amp;#39;s what we want
right 42 there&amp;#39;s 42 so you can can you
see the
difference between the calls we have
that call to total
stock there and we have the call to
stock value there look at the difference
we&amp;#39;ve got total stock as an Unbound
function on its own with no parameters
of course and we&amp;#39;ve got stock value no
parameters but it&amp;#39;s it&amp;#39;s in the context
of a specific entity okay so next week
we&amp;#39;ll look at how to get basically we
need that we need this value don&amp;#39;t we to
be able to find that book to be able to
work out what stock value is
right so we&amp;#39;ll do that next week as well
as the uh destructuring destructuring of
the destructuring so have a great Friday
have a great uh weekend and I&amp;#39;ll see you
next weekend don&amp;#39;t forget to start the
developer challenge bye